var r0=Object.create;var{getPrototypeOf:a0,defineProperty:oJ,getOwnPropertyNames:J0}=Object;var $0=Object.prototype.hasOwnProperty,Q0=(J,$,Z)=>{for(let K of J0($))if(!$0.call(J,K)&&K!=="default")oJ(J,K,{get:()=>$[K],enumerable:!0});if(Z){for(let K of J0($))if(!$0.call(Z,K)&&K!=="default")oJ(Z,K,{get:()=>$[K],enumerable:!0});return Z}},t0=(J,$,Z)=>{Z=J!=null?r0(a0(J)):{};let K=$||!J||!J.__esModule?oJ(Z,"default",{value:J,enumerable:!0}):Z;for(let Y of J0(J))if(!$0.call(K,Y))oJ(K,Y,{get:()=>J[Y],enumerable:!0});return K};var F0=(J,$)=>()=>($||J(($={exports:{}}).exports,$),$.exports);var z0=F0((vJ,xJ)=>{var Q={REVISION:"77"};if(typeof define==="function"&&define.amd)define("three",Q);else if(typeof vJ!=="undefined"&&typeof xJ!=="undefined")xJ.exports=Q;if(Number.EPSILON===void 0)Number.EPSILON=Math.pow(2,-52);if(Math.sign===void 0)Math.sign=function(J){return J<0?-1:J>0?1:+J};if(Function.prototype.name===void 0)Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}});if(Object.assign===void 0)(function(){Object.assign=function(J){if(J===void 0||J===null)throw new TypeError("Cannot convert undefined or null to object");var $=Object(J);for(var Z=1;Z<arguments.length;Z++){var K=arguments[Z];if(K!==void 0&&K!==null){for(var Y in K)if(Object.prototype.hasOwnProperty.call(K,Y))$[Y]=K[Y]}}return $}})();Object.assign(Q,{MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone:0,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:1,PCFSoftShadowMap:2,FrontSide:0,BackSide:1,DoubleSide:2,FlatShading:1,SmoothShading:2,NoColors:0,FaceColors:1,VertexColors:2,NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5,AddEquation:100,SubtractEquation:101,ReverseSubtractEquation:102,MinEquation:103,MaxEquation:104,ZeroFactor:200,OneFactor:201,SrcColorFactor:202,OneMinusSrcColorFactor:203,SrcAlphaFactor:204,OneMinusSrcAlphaFactor:205,DstAlphaFactor:206,OneMinusDstAlphaFactor:207,DstColorFactor:208,OneMinusDstColorFactor:209,SrcAlphaSaturateFactor:210,NeverDepth:0,AlwaysDepth:1,LessDepth:2,LessEqualDepth:3,EqualDepth:4,GreaterEqualDepth:5,GreaterDepth:6,NotEqualDepth:7,MultiplyOperation:0,MixOperation:1,AddOperation:2,NoToneMapping:0,LinearToneMapping:1,ReinhardToneMapping:2,Uncharted2ToneMapping:3,CineonToneMapping:4,UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307,RepeatWrapping:1000,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002,NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008,UnsignedByteType:1009,ByteType:1010,ShortType:1011,UnsignedShortType:1012,IntType:1013,UnsignedIntType:1014,FloatType:1015,HalfFloatType:1025,UnsignedShort4444Type:1016,UnsignedShort5551Type:1017,UnsignedShort565Type:1018,AlphaFormat:1019,RGBFormat:1020,RGBAFormat:1021,LuminanceFormat:1022,LuminanceAlphaFormat:1023,RGBEFormat:Q.RGBAFormat,DepthFormat:1026,RGB_S3TC_DXT1_Format:2001,RGBA_S3TC_DXT1_Format:2002,RGBA_S3TC_DXT3_Format:2003,RGBA_S3TC_DXT5_Format:2004,RGB_PVRTC_4BPPV1_Format:2100,RGB_PVRTC_2BPPV1_Format:2101,RGBA_PVRTC_4BPPV1_Format:2102,RGBA_PVRTC_2BPPV1_Format:2103,RGB_ETC1_Format:2151,LoopOnce:2200,LoopRepeat:2201,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:2400,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:0,TriangleStripDrawMode:1,TriangleFanDrawMode:2,LinearEncoding:3000,sRGBEncoding:3001,GammaEncoding:3007,RGBEEncoding:3002,LogLuvEncoding:3003,RGBM7Encoding:3004,RGBM16Encoding:3005,RGBDEncoding:3006,BasicDepthPacking:3200,RGBADepthPacking:3201});Q.Color=function(J,$,Z){if($===void 0&&Z===void 0)return this.set(J);return this.setRGB(J,$,Z)};Q.Color.prototype={constructor:Q.Color,r:1,g:1,b:1,set:function(J){if(J instanceof Q.Color)this.copy(J);else if(typeof J==="number")this.setHex(J);else if(typeof J==="string")this.setStyle(J);return this},setScalar:function(J){this.r=J,this.g=J,this.b=J},setHex:function(J){return J=Math.floor(J),this.r=(J>>16&255)/255,this.g=(J>>8&255)/255,this.b=(J&255)/255,this},setRGB:function(J,$,Z){return this.r=J,this.g=$,this.b=Z,this},setHSL:function(){function J($,Z,K){if(K<0)K+=1;if(K>1)K-=1;if(K<0.16666666666666666)return $+(Z-$)*6*K;if(K<0.5)return Z;if(K<0.6666666666666666)return $+(Z-$)*6*(0.6666666666666666-K);return $}return function($,Z,K){if($=Q.Math.euclideanModulo($,1),Z=Q.Math.clamp(Z,0,1),K=Q.Math.clamp(K,0,1),Z===0)this.r=this.g=this.b=K;else{var Y=K<=0.5?K*(1+Z):K+Z-K*Z,X=2*K-Y;this.r=J(X,Y,$+0.3333333333333333),this.g=J(X,Y,$),this.b=J(X,Y,$-0.3333333333333333)}return this}}(),setStyle:function(J){function $(B){if(B===void 0)return;if(parseFloat(B)<1)console.warn("THREE.Color: Alpha component of "+J+" will be ignored.")}var Z;if(Z=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(J)){var K,Y=Z[1],X=Z[2];switch(Y){case"rgb":case"rgba":if(K=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(X))return this.r=Math.min(255,parseInt(K[1],10))/255,this.g=Math.min(255,parseInt(K[2],10))/255,this.b=Math.min(255,parseInt(K[3],10))/255,$(K[5]),this;if(K=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(X))return this.r=Math.min(100,parseInt(K[1],10))/100,this.g=Math.min(100,parseInt(K[2],10))/100,this.b=Math.min(100,parseInt(K[3],10))/100,$(K[5]),this;break;case"hsl":case"hsla":if(K=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(X)){var G=parseFloat(K[1])/360,W=parseInt(K[2],10)/100,U=parseInt(K[3],10)/100;return $(K[5]),this.setHSL(G,W,U)}break}}else if(Z=/^\#([A-Fa-f0-9]+)$/.exec(J)){var D=Z[1],N=D.length;if(N===3)return this.r=parseInt(D.charAt(0)+D.charAt(0),16)/255,this.g=parseInt(D.charAt(1)+D.charAt(1),16)/255,this.b=parseInt(D.charAt(2)+D.charAt(2),16)/255,this;else if(N===6)return this.r=parseInt(D.charAt(0)+D.charAt(1),16)/255,this.g=parseInt(D.charAt(2)+D.charAt(3),16)/255,this.b=parseInt(D.charAt(4)+D.charAt(5),16)/255,this}if(J&&J.length>0){var D=Q.ColorKeywords[J];if(D!==void 0)this.setHex(D);else console.warn("THREE.Color: Unknown color "+J)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(J){return this.r=J.r,this.g=J.g,this.b=J.b,this},copyGammaToLinear:function(J,$){if($===void 0)$=2;return this.r=Math.pow(J.r,$),this.g=Math.pow(J.g,$),this.b=Math.pow(J.b,$),this},copyLinearToGamma:function(J,$){if($===void 0)$=2;var Z=$>0?1/$:1;return this.r=Math.pow(J.r,Z),this.g=Math.pow(J.g,Z),this.b=Math.pow(J.b,Z),this},convertGammaToLinear:function(){var J=this.r,$=this.g,Z=this.b;return this.r=J*J,this.g=$*$,this.b=Z*Z,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(J){var $=J||{h:0,s:0,l:0},Z=this.r,K=this.g,Y=this.b,X=Math.max(Z,K,Y),G=Math.min(Z,K,Y),W,U,D=(G+X)/2;if(G===X)W=0,U=0;else{var N=X-G;switch(U=D<=0.5?N/(X+G):N/(2-X-G),X){case Z:W=(K-Y)/N+(K<Y?6:0);break;case K:W=(Y-Z)/N+2;break;case Y:W=(Z-K)/N+4;break}W/=6}return $.h=W,$.s=U,$.l=D,$},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(J,$,Z){var K=this.getHSL();return K.h+=J,K.s+=$,K.l+=Z,this.setHSL(K.h,K.s,K.l),this},add:function(J){return this.r+=J.r,this.g+=J.g,this.b+=J.b,this},addColors:function(J,$){return this.r=J.r+$.r,this.g=J.g+$.g,this.b=J.b+$.b,this},addScalar:function(J){return this.r+=J,this.g+=J,this.b+=J,this},multiply:function(J){return this.r*=J.r,this.g*=J.g,this.b*=J.b,this},multiplyScalar:function(J){return this.r*=J,this.g*=J,this.b*=J,this},lerp:function(J,$){return this.r+=(J.r-this.r)*$,this.g+=(J.g-this.g)*$,this.b+=(J.b-this.b)*$,this},equals:function(J){return J.r===this.r&&J.g===this.g&&J.b===this.b},fromArray:function(J,$){if($===void 0)$=0;return this.r=J[$],this.g=J[$+1],this.b=J[$+2],this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;return J[$]=this.r,J[$+1]=this.g,J[$+2]=this.b,J}};Q.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};Q.Quaternion=function(J,$,Z,K){this._x=J||0,this._y=$||0,this._z=Z||0,this._w=K!==void 0?K:1};Q.Quaternion.prototype={constructor:Q.Quaternion,get x(){return this._x},set x(J){this._x=J,this.onChangeCallback()},get y(){return this._y},set y(J){this._y=J,this.onChangeCallback()},get z(){return this._z},set z(J){this._z=J,this.onChangeCallback()},get w(){return this._w},set w(J){this._w=J,this.onChangeCallback()},set:function(J,$,Z,K){return this._x=J,this._y=$,this._z=Z,this._w=K,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(J){return this._x=J.x,this._y=J.y,this._z=J.z,this._w=J.w,this.onChangeCallback(),this},setFromEuler:function(J,$){if(J instanceof Q.Euler===!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var Z=Math.cos(J._x/2),K=Math.cos(J._y/2),Y=Math.cos(J._z/2),X=Math.sin(J._x/2),G=Math.sin(J._y/2),W=Math.sin(J._z/2),U=J.order;if(U==="XYZ")this._x=X*K*Y+Z*G*W,this._y=Z*G*Y-X*K*W,this._z=Z*K*W+X*G*Y,this._w=Z*K*Y-X*G*W;else if(U==="YXZ")this._x=X*K*Y+Z*G*W,this._y=Z*G*Y-X*K*W,this._z=Z*K*W-X*G*Y,this._w=Z*K*Y+X*G*W;else if(U==="ZXY")this._x=X*K*Y-Z*G*W,this._y=Z*G*Y+X*K*W,this._z=Z*K*W+X*G*Y,this._w=Z*K*Y-X*G*W;else if(U==="ZYX")this._x=X*K*Y-Z*G*W,this._y=Z*G*Y+X*K*W,this._z=Z*K*W-X*G*Y,this._w=Z*K*Y+X*G*W;else if(U==="YZX")this._x=X*K*Y+Z*G*W,this._y=Z*G*Y+X*K*W,this._z=Z*K*W-X*G*Y,this._w=Z*K*Y-X*G*W;else if(U==="XZY")this._x=X*K*Y-Z*G*W,this._y=Z*G*Y-X*K*W,this._z=Z*K*W+X*G*Y,this._w=Z*K*Y+X*G*W;if($!==!1)this.onChangeCallback();return this},setFromAxisAngle:function(J,$){var Z=$/2,K=Math.sin(Z);return this._x=J.x*K,this._y=J.y*K,this._z=J.z*K,this._w=Math.cos(Z),this.onChangeCallback(),this},setFromRotationMatrix:function(J){var $=J.elements,Z=$[0],K=$[4],Y=$[8],X=$[1],G=$[5],W=$[9],U=$[2],D=$[6],N=$[10],B=Z+G+N,q;if(B>0)q=0.5/Math.sqrt(B+1),this._w=0.25/q,this._x=(D-W)*q,this._y=(Y-U)*q,this._z=(X-K)*q;else if(Z>G&&Z>N)q=2*Math.sqrt(1+Z-G-N),this._w=(D-W)/q,this._x=0.25*q,this._y=(K+X)/q,this._z=(Y+U)/q;else if(G>N)q=2*Math.sqrt(1+G-Z-N),this._w=(Y-U)/q,this._x=(K+X)/q,this._y=0.25*q,this._z=(W+D)/q;else q=2*Math.sqrt(1+N-Z-G),this._w=(X-K)/q,this._x=(Y+U)/q,this._y=(W+D)/q,this._z=0.25*q;return this.onChangeCallback(),this},setFromUnitVectors:function(){var J,$,Z=0.000001;return function(K,Y){if(J===void 0)J=new Q.Vector3;if($=K.dot(Y)+1,$<Z)if($=0,Math.abs(K.x)>Math.abs(K.z))J.set(-K.y,K.x,0);else J.set(0,-K.z,K.y);else J.crossVectors(K,Y);return this._x=J.x,this._y=J.y,this._z=J.z,this._w=$,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(J){return this._x*J._x+this._y*J._y+this._z*J._z+this._w*J._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var J=this.length();if(J===0)this._x=0,this._y=0,this._z=0,this._w=1;else J=1/J,this._x=this._x*J,this._y=this._y*J,this._z=this._z*J,this._w=this._w*J;return this.onChangeCallback(),this},multiply:function(J,$){if($!==void 0)return console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(J,$);return this.multiplyQuaternions(this,J)},premultiply:function(J){return this.multiplyQuaternions(J,this)},multiplyQuaternions:function(J,$){var{_x:Z,_y:K,_z:Y,_w:X}=J,G=$._x,W=$._y,U=$._z,D=$._w;return this._x=Z*D+X*G+K*U-Y*W,this._y=K*D+X*W+Y*G-Z*U,this._z=Y*D+X*U+Z*W-K*G,this._w=X*D-Z*G-K*W-Y*U,this.onChangeCallback(),this},slerp:function(J,$){if($===0)return this;if($===1)return this.copy(J);var Z=this._x,K=this._y,Y=this._z,X=this._w,G=X*J._w+Z*J._x+K*J._y+Y*J._z;if(G<0)this._w=-J._w,this._x=-J._x,this._y=-J._y,this._z=-J._z,G=-G;else this.copy(J);if(G>=1)return this._w=X,this._x=Z,this._y=K,this._z=Y,this;var W=Math.sqrt(1-G*G);if(Math.abs(W)<0.001)return this._w=0.5*(X+this._w),this._x=0.5*(Z+this._x),this._y=0.5*(K+this._y),this._z=0.5*(Y+this._z),this;var U=Math.atan2(W,G),D=Math.sin((1-$)*U)/W,N=Math.sin($*U)/W;return this._w=X*D+this._w*N,this._x=Z*D+this._x*N,this._y=K*D+this._y*N,this._z=Y*D+this._z*N,this.onChangeCallback(),this},equals:function(J){return J._x===this._x&&J._y===this._y&&J._z===this._z&&J._w===this._w},fromArray:function(J,$){if($===void 0)$=0;return this._x=J[$],this._y=J[$+1],this._z=J[$+2],this._w=J[$+3],this.onChangeCallback(),this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;return J[$]=this._x,J[$+1]=this._y,J[$+2]=this._z,J[$+3]=this._w,J},onChange:function(J){return this.onChangeCallback=J,this},onChangeCallback:function(){}};Object.assign(Q.Quaternion,{slerp:function(J,$,Z,K){return Z.copy(J).slerp($,K)},slerpFlat:function(J,$,Z,K,Y,X,G){var W=Z[K+0],U=Z[K+1],D=Z[K+2],N=Z[K+3],B=Y[X+0],q=Y[X+1],V=Y[X+2],M=Y[X+3];if(N!==M||W!==B||U!==q||D!==V){var z=1-G,F=W*B+U*q+D*V+N*M,L=F>=0?1:-1,A=1-F*F;if(A>Number.EPSILON){var C=Math.sqrt(A),w=Math.atan2(C,F*L);z=Math.sin(z*w)/C,G=Math.sin(G*w)/C}var _=G*L;if(W=W*z+B*_,U=U*z+q*_,D=D*z+V*_,N=N*z+M*_,z===1-G){var x=1/Math.sqrt(W*W+U*U+D*D+N*N);W*=x,U*=x,D*=x,N*=x}}J[$]=W,J[$+1]=U,J[$+2]=D,J[$+3]=N}});Q.Vector2=function(J,$){this.x=J||0,this.y=$||0};Q.Vector2.prototype={constructor:Q.Vector2,get width(){return this.x},set width(J){this.x=J},get height(){return this.y},set height(J){this.y=J},set:function(J,$){return this.x=J,this.y=$,this},setScalar:function(J){return this.x=J,this.y=J,this},setX:function(J){return this.x=J,this},setY:function(J){return this.y=J,this},setComponent:function(J,$){switch(J){case 0:this.x=$;break;case 1:this.y=$;break;default:throw new Error("index is out of range: "+J)}},getComponent:function(J){switch(J){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+J)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(J){return this.x=J.x,this.y=J.y,this},add:function(J,$){if($!==void 0)return console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(J,$);return this.x+=J.x,this.y+=J.y,this},addScalar:function(J){return this.x+=J,this.y+=J,this},addVectors:function(J,$){return this.x=J.x+$.x,this.y=J.y+$.y,this},addScaledVector:function(J,$){return this.x+=J.x*$,this.y+=J.y*$,this},sub:function(J,$){if($!==void 0)return console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(J,$);return this.x-=J.x,this.y-=J.y,this},subScalar:function(J){return this.x-=J,this.y-=J,this},subVectors:function(J,$){return this.x=J.x-$.x,this.y=J.y-$.y,this},multiply:function(J){return this.x*=J.x,this.y*=J.y,this},multiplyScalar:function(J){if(isFinite(J))this.x*=J,this.y*=J;else this.x=0,this.y=0;return this},divide:function(J){return this.x/=J.x,this.y/=J.y,this},divideScalar:function(J){return this.multiplyScalar(1/J)},min:function(J){return this.x=Math.min(this.x,J.x),this.y=Math.min(this.y,J.y),this},max:function(J){return this.x=Math.max(this.x,J.x),this.y=Math.max(this.y,J.y),this},clamp:function(J,$){return this.x=Math.max(J.x,Math.min($.x,this.x)),this.y=Math.max(J.y,Math.min($.y,this.y)),this},clampScalar:function(){var J,$;return function Z(K,Y){if(J===void 0)J=new Q.Vector2,$=new Q.Vector2;return J.set(K,K),$.set(Y,Y),this.clamp(J,$)}}(),clampLength:function(J,$){var Z=this.length();return this.multiplyScalar(Math.max(J,Math.min($,Z))/Z)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(J){return this.x*J.x+this.y*J.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var J=Math.atan2(this.y,this.x);if(J<0)J+=2*Math.PI;return J},distanceTo:function(J){return Math.sqrt(this.distanceToSquared(J))},distanceToSquared:function(J){var $=this.x-J.x,Z=this.y-J.y;return $*$+Z*Z},setLength:function(J){return this.multiplyScalar(J/this.length())},lerp:function(J,$){return this.x+=(J.x-this.x)*$,this.y+=(J.y-this.y)*$,this},lerpVectors:function(J,$,Z){return this.subVectors($,J).multiplyScalar(Z).add(J)},equals:function(J){return J.x===this.x&&J.y===this.y},fromArray:function(J,$){if($===void 0)$=0;return this.x=J[$],this.y=J[$+1],this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;return J[$]=this.x,J[$+1]=this.y,J},fromAttribute:function(J,$,Z){if(Z===void 0)Z=0;return $=$*J.itemSize+Z,this.x=J.array[$],this.y=J.array[$+1],this},rotateAround:function(J,$){var Z=Math.cos($),K=Math.sin($),Y=this.x-J.x,X=this.y-J.y;return this.x=Y*Z-X*K+J.x,this.y=Y*K+X*Z+J.y,this}};Q.Vector3=function(J,$,Z){this.x=J||0,this.y=$||0,this.z=Z||0};Q.Vector3.prototype={constructor:Q.Vector3,set:function(J,$,Z){return this.x=J,this.y=$,this.z=Z,this},setScalar:function(J){return this.x=J,this.y=J,this.z=J,this},setX:function(J){return this.x=J,this},setY:function(J){return this.y=J,this},setZ:function(J){return this.z=J,this},setComponent:function(J,$){switch(J){case 0:this.x=$;break;case 1:this.y=$;break;case 2:this.z=$;break;default:throw new Error("index is out of range: "+J)}},getComponent:function(J){switch(J){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+J)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(J){return this.x=J.x,this.y=J.y,this.z=J.z,this},add:function(J,$){if($!==void 0)return console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(J,$);return this.x+=J.x,this.y+=J.y,this.z+=J.z,this},addScalar:function(J){return this.x+=J,this.y+=J,this.z+=J,this},addVectors:function(J,$){return this.x=J.x+$.x,this.y=J.y+$.y,this.z=J.z+$.z,this},addScaledVector:function(J,$){return this.x+=J.x*$,this.y+=J.y*$,this.z+=J.z*$,this},sub:function(J,$){if($!==void 0)return console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(J,$);return this.x-=J.x,this.y-=J.y,this.z-=J.z,this},subScalar:function(J){return this.x-=J,this.y-=J,this.z-=J,this},subVectors:function(J,$){return this.x=J.x-$.x,this.y=J.y-$.y,this.z=J.z-$.z,this},multiply:function(J,$){if($!==void 0)return console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(J,$);return this.x*=J.x,this.y*=J.y,this.z*=J.z,this},multiplyScalar:function(J){if(isFinite(J))this.x*=J,this.y*=J,this.z*=J;else this.x=0,this.y=0,this.z=0;return this},multiplyVectors:function(J,$){return this.x=J.x*$.x,this.y=J.y*$.y,this.z=J.z*$.z,this},applyEuler:function(){var J;return function $(Z){if(Z instanceof Q.Euler===!1)console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.");if(J===void 0)J=new Q.Quaternion;return this.applyQuaternion(J.setFromEuler(Z))}}(),applyAxisAngle:function(){var J;return function $(Z,K){if(J===void 0)J=new Q.Quaternion;return this.applyQuaternion(J.setFromAxisAngle(Z,K))}}(),applyMatrix3:function(J){var $=this.x,Z=this.y,K=this.z,Y=J.elements;return this.x=Y[0]*$+Y[3]*Z+Y[6]*K,this.y=Y[1]*$+Y[4]*Z+Y[7]*K,this.z=Y[2]*$+Y[5]*Z+Y[8]*K,this},applyMatrix4:function(J){var $=this.x,Z=this.y,K=this.z,Y=J.elements;return this.x=Y[0]*$+Y[4]*Z+Y[8]*K+Y[12],this.y=Y[1]*$+Y[5]*Z+Y[9]*K+Y[13],this.z=Y[2]*$+Y[6]*Z+Y[10]*K+Y[14],this},applyProjection:function(J){var $=this.x,Z=this.y,K=this.z,Y=J.elements,X=1/(Y[3]*$+Y[7]*Z+Y[11]*K+Y[15]);return this.x=(Y[0]*$+Y[4]*Z+Y[8]*K+Y[12])*X,this.y=(Y[1]*$+Y[5]*Z+Y[9]*K+Y[13])*X,this.z=(Y[2]*$+Y[6]*Z+Y[10]*K+Y[14])*X,this},applyQuaternion:function(J){var $=this.x,Z=this.y,K=this.z,Y=J.x,X=J.y,G=J.z,W=J.w,U=W*$+X*K-G*Z,D=W*Z+G*$-Y*K,N=W*K+Y*Z-X*$,B=-Y*$-X*Z-G*K;return this.x=U*W+B*-Y+D*-G-N*-X,this.y=D*W+B*-X+N*-Y-U*-G,this.z=N*W+B*-G+U*-X-D*-Y,this},project:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.multiplyMatrices(Z.projectionMatrix,J.getInverse(Z.matrixWorld)),this.applyProjection(J)}}(),unproject:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.multiplyMatrices(Z.matrixWorld,J.getInverse(Z.projectionMatrix)),this.applyProjection(J)}}(),transformDirection:function(J){var $=this.x,Z=this.y,K=this.z,Y=J.elements;return this.x=Y[0]*$+Y[4]*Z+Y[8]*K,this.y=Y[1]*$+Y[5]*Z+Y[9]*K,this.z=Y[2]*$+Y[6]*Z+Y[10]*K,this.normalize()},divide:function(J){return this.x/=J.x,this.y/=J.y,this.z/=J.z,this},divideScalar:function(J){return this.multiplyScalar(1/J)},min:function(J){return this.x=Math.min(this.x,J.x),this.y=Math.min(this.y,J.y),this.z=Math.min(this.z,J.z),this},max:function(J){return this.x=Math.max(this.x,J.x),this.y=Math.max(this.y,J.y),this.z=Math.max(this.z,J.z),this},clamp:function(J,$){return this.x=Math.max(J.x,Math.min($.x,this.x)),this.y=Math.max(J.y,Math.min($.y,this.y)),this.z=Math.max(J.z,Math.min($.z,this.z)),this},clampScalar:function(){var J,$;return function Z(K,Y){if(J===void 0)J=new Q.Vector3,$=new Q.Vector3;return J.set(K,K,K),$.set(Y,Y,Y),this.clamp(J,$)}}(),clampLength:function(J,$){var Z=this.length();return this.multiplyScalar(Math.max(J,Math.min($,Z))/Z)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(J){return this.x*J.x+this.y*J.y+this.z*J.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(J){return this.multiplyScalar(J/this.length())},lerp:function(J,$){return this.x+=(J.x-this.x)*$,this.y+=(J.y-this.y)*$,this.z+=(J.z-this.z)*$,this},lerpVectors:function(J,$,Z){return this.subVectors($,J).multiplyScalar(Z).add(J)},cross:function(J,$){if($!==void 0)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(J,$);var Z=this.x,K=this.y,Y=this.z;return this.x=K*J.z-Y*J.y,this.y=Y*J.x-Z*J.z,this.z=Z*J.y-K*J.x,this},crossVectors:function(J,$){var{x:Z,y:K,z:Y}=J,X=$.x,G=$.y,W=$.z;return this.x=K*W-Y*G,this.y=Y*X-Z*W,this.z=Z*G-K*X,this},projectOnVector:function(){var J,$;return function Z(K){if(J===void 0)J=new Q.Vector3;return J.copy(K).normalize(),$=this.dot(J),this.copy(J).multiplyScalar($)}}(),projectOnPlane:function(){var J;return function $(Z){if(J===void 0)J=new Q.Vector3;return J.copy(this).projectOnVector(Z),this.sub(J)}}(),reflect:function(){var J;return function $(Z){if(J===void 0)J=new Q.Vector3;return this.sub(J.copy(Z).multiplyScalar(2*this.dot(Z)))}}(),angleTo:function(J){var $=this.dot(J)/Math.sqrt(this.lengthSq()*J.lengthSq());return Math.acos(Q.Math.clamp($,-1,1))},distanceTo:function(J){return Math.sqrt(this.distanceToSquared(J))},distanceToSquared:function(J){var $=this.x-J.x,Z=this.y-J.y,K=this.z-J.z;return $*$+Z*Z+K*K},setFromSpherical:function(J){var $=Math.sin(J.phi)*J.radius;return this.x=$*Math.sin(J.theta),this.y=Math.cos(J.phi)*J.radius,this.z=$*Math.cos(J.theta),this},setFromMatrixPosition:function(J){return this.setFromMatrixColumn(J,3)},setFromMatrixScale:function(J){var $=this.setFromMatrixColumn(J,0).length(),Z=this.setFromMatrixColumn(J,1).length(),K=this.setFromMatrixColumn(J,2).length();return this.x=$,this.y=Z,this.z=K,this},setFromMatrixColumn:function(J,$){if(typeof J==="number"){console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");var Z=J;J=$,$=Z}return this.fromArray(J.elements,$*4)},equals:function(J){return J.x===this.x&&J.y===this.y&&J.z===this.z},fromArray:function(J,$){if($===void 0)$=0;return this.x=J[$],this.y=J[$+1],this.z=J[$+2],this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;return J[$]=this.x,J[$+1]=this.y,J[$+2]=this.z,J},fromAttribute:function(J,$,Z){if(Z===void 0)Z=0;return $=$*J.itemSize+Z,this.x=J.array[$],this.y=J.array[$+1],this.z=J.array[$+2],this}};Q.Vector4=function(J,$,Z,K){this.x=J||0,this.y=$||0,this.z=Z||0,this.w=K!==void 0?K:1};Q.Vector4.prototype={constructor:Q.Vector4,set:function(J,$,Z,K){return this.x=J,this.y=$,this.z=Z,this.w=K,this},setScalar:function(J){return this.x=J,this.y=J,this.z=J,this.w=J,this},setX:function(J){return this.x=J,this},setY:function(J){return this.y=J,this},setZ:function(J){return this.z=J,this},setW:function(J){return this.w=J,this},setComponent:function(J,$){switch(J){case 0:this.x=$;break;case 1:this.y=$;break;case 2:this.z=$;break;case 3:this.w=$;break;default:throw new Error("index is out of range: "+J)}},getComponent:function(J){switch(J){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+J)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(J){return this.x=J.x,this.y=J.y,this.z=J.z,this.w=J.w!==void 0?J.w:1,this},add:function(J,$){if($!==void 0)return console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(J,$);return this.x+=J.x,this.y+=J.y,this.z+=J.z,this.w+=J.w,this},addScalar:function(J){return this.x+=J,this.y+=J,this.z+=J,this.w+=J,this},addVectors:function(J,$){return this.x=J.x+$.x,this.y=J.y+$.y,this.z=J.z+$.z,this.w=J.w+$.w,this},addScaledVector:function(J,$){return this.x+=J.x*$,this.y+=J.y*$,this.z+=J.z*$,this.w+=J.w*$,this},sub:function(J,$){if($!==void 0)return console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(J,$);return this.x-=J.x,this.y-=J.y,this.z-=J.z,this.w-=J.w,this},subScalar:function(J){return this.x-=J,this.y-=J,this.z-=J,this.w-=J,this},subVectors:function(J,$){return this.x=J.x-$.x,this.y=J.y-$.y,this.z=J.z-$.z,this.w=J.w-$.w,this},multiplyScalar:function(J){if(isFinite(J))this.x*=J,this.y*=J,this.z*=J,this.w*=J;else this.x=0,this.y=0,this.z=0,this.w=0;return this},applyMatrix4:function(J){var $=this.x,Z=this.y,K=this.z,Y=this.w,X=J.elements;return this.x=X[0]*$+X[4]*Z+X[8]*K+X[12]*Y,this.y=X[1]*$+X[5]*Z+X[9]*K+X[13]*Y,this.z=X[2]*$+X[6]*Z+X[10]*K+X[14]*Y,this.w=X[3]*$+X[7]*Z+X[11]*K+X[15]*Y,this},divideScalar:function(J){return this.multiplyScalar(1/J)},setAxisAngleFromQuaternion:function(J){this.w=2*Math.acos(J.w);var $=Math.sqrt(1-J.w*J.w);if($<0.0001)this.x=1,this.y=0,this.z=0;else this.x=J.x/$,this.y=J.y/$,this.z=J.z/$;return this},setAxisAngleFromRotationMatrix:function(J){var $,Z,K,Y,X=0.01,G=0.1,W=J.elements,U=W[0],D=W[4],N=W[8],B=W[1],q=W[5],V=W[9],M=W[2],z=W[6],F=W[10];if(Math.abs(D-B)<X&&Math.abs(N-M)<X&&Math.abs(V-z)<X){if(Math.abs(D+B)<G&&Math.abs(N+M)<G&&Math.abs(V+z)<G&&Math.abs(U+q+F-3)<G)return this.set(1,0,0,0),this;$=Math.PI;var L=(U+1)/2,A=(q+1)/2,C=(F+1)/2,w=(D+B)/4,_=(N+M)/4,x=(V+z)/4;if(L>A&&L>C)if(L<X)Z=0,K=0.707106781,Y=0.707106781;else Z=Math.sqrt(L),K=w/Z,Y=_/Z;else if(A>C)if(A<X)Z=0.707106781,K=0,Y=0.707106781;else K=Math.sqrt(A),Z=w/K,Y=x/K;else if(C<X)Z=0.707106781,K=0.707106781,Y=0;else Y=Math.sqrt(C),Z=_/Y,K=x/Y;return this.set(Z,K,Y,$),this}var H=Math.sqrt((z-V)*(z-V)+(N-M)*(N-M)+(B-D)*(B-D));if(Math.abs(H)<0.001)H=1;return this.x=(z-V)/H,this.y=(N-M)/H,this.z=(B-D)/H,this.w=Math.acos((U+q+F-1)/2),this},min:function(J){return this.x=Math.min(this.x,J.x),this.y=Math.min(this.y,J.y),this.z=Math.min(this.z,J.z),this.w=Math.min(this.w,J.w),this},max:function(J){return this.x=Math.max(this.x,J.x),this.y=Math.max(this.y,J.y),this.z=Math.max(this.z,J.z),this.w=Math.max(this.w,J.w),this},clamp:function(J,$){return this.x=Math.max(J.x,Math.min($.x,this.x)),this.y=Math.max(J.y,Math.min($.y,this.y)),this.z=Math.max(J.z,Math.min($.z,this.z)),this.w=Math.max(J.w,Math.min($.w,this.w)),this},clampScalar:function(){var J,$;return function Z(K,Y){if(J===void 0)J=new Q.Vector4,$=new Q.Vector4;return J.set(K,K,K,K),$.set(Y,Y,Y,Y),this.clamp(J,$)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(J){return this.x*J.x+this.y*J.y+this.z*J.z+this.w*J.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(J){return this.multiplyScalar(J/this.length())},lerp:function(J,$){return this.x+=(J.x-this.x)*$,this.y+=(J.y-this.y)*$,this.z+=(J.z-this.z)*$,this.w+=(J.w-this.w)*$,this},lerpVectors:function(J,$,Z){return this.subVectors($,J).multiplyScalar(Z).add(J)},equals:function(J){return J.x===this.x&&J.y===this.y&&J.z===this.z&&J.w===this.w},fromArray:function(J,$){if($===void 0)$=0;return this.x=J[$],this.y=J[$+1],this.z=J[$+2],this.w=J[$+3],this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;return J[$]=this.x,J[$+1]=this.y,J[$+2]=this.z,J[$+3]=this.w,J},fromAttribute:function(J,$,Z){if(Z===void 0)Z=0;return $=$*J.itemSize+Z,this.x=J.array[$],this.y=J.array[$+1],this.z=J.array[$+2],this.w=J.array[$+3],this}};Q.Euler=function(J,$,Z,K){this._x=J||0,this._y=$||0,this._z=Z||0,this._order=K||Q.Euler.DefaultOrder};Q.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];Q.Euler.DefaultOrder="XYZ";Q.Euler.prototype={constructor:Q.Euler,get x(){return this._x},set x(J){this._x=J,this.onChangeCallback()},get y(){return this._y},set y(J){this._y=J,this.onChangeCallback()},get z(){return this._z},set z(J){this._z=J,this.onChangeCallback()},get order(){return this._order},set order(J){this._order=J,this.onChangeCallback()},set:function(J,$,Z,K){return this._x=J,this._y=$,this._z=Z,this._order=K||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(J){return this._x=J._x,this._y=J._y,this._z=J._z,this._order=J._order,this.onChangeCallback(),this},setFromRotationMatrix:function(J,$,Z){var K=Q.Math.clamp,Y=J.elements,X=Y[0],G=Y[4],W=Y[8],U=Y[1],D=Y[5],N=Y[9],B=Y[2],q=Y[6],V=Y[10];if($=$||this._order,$==="XYZ")if(this._y=Math.asin(K(W,-1,1)),Math.abs(W)<0.99999)this._x=Math.atan2(-N,V),this._z=Math.atan2(-G,X);else this._x=Math.atan2(q,D),this._z=0;else if($==="YXZ")if(this._x=Math.asin(-K(N,-1,1)),Math.abs(N)<0.99999)this._y=Math.atan2(W,V),this._z=Math.atan2(U,D);else this._y=Math.atan2(-B,X),this._z=0;else if($==="ZXY")if(this._x=Math.asin(K(q,-1,1)),Math.abs(q)<0.99999)this._y=Math.atan2(-B,V),this._z=Math.atan2(-G,D);else this._y=0,this._z=Math.atan2(U,X);else if($==="ZYX")if(this._y=Math.asin(-K(B,-1,1)),Math.abs(B)<0.99999)this._x=Math.atan2(q,V),this._z=Math.atan2(U,X);else this._x=0,this._z=Math.atan2(-G,D);else if($==="YZX")if(this._z=Math.asin(K(U,-1,1)),Math.abs(U)<0.99999)this._x=Math.atan2(-N,D),this._y=Math.atan2(-B,X);else this._x=0,this._y=Math.atan2(W,V);else if($==="XZY")if(this._z=Math.asin(-K(G,-1,1)),Math.abs(G)<0.99999)this._x=Math.atan2(q,D),this._y=Math.atan2(W,X);else this._x=Math.atan2(-N,V),this._y=0;else console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+$);if(this._order=$,Z!==!1)this.onChangeCallback();return this},setFromQuaternion:function(){var J;return function($,Z,K){if(J===void 0)J=new Q.Matrix4;return J.makeRotationFromQuaternion($),this.setFromRotationMatrix(J,Z,K)}}(),setFromVector3:function(J,$){return this.set(J.x,J.y,J.z,$||this._order)},reorder:function(){var J=new Q.Quaternion;return function($){return J.setFromEuler(this),this.setFromQuaternion(J,$)}}(),equals:function(J){return J._x===this._x&&J._y===this._y&&J._z===this._z&&J._order===this._order},fromArray:function(J){if(this._x=J[0],this._y=J[1],this._z=J[2],J[3]!==void 0)this._order=J[3];return this.onChangeCallback(),this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;return J[$]=this._x,J[$+1]=this._y,J[$+2]=this._z,J[$+3]=this._order,J},toVector3:function(J){if(J)return J.set(this._x,this._y,this._z);else return new Q.Vector3(this._x,this._y,this._z)},onChange:function(J){return this.onChangeCallback=J,this},onChangeCallback:function(){}};Q.Line3=function(J,$){this.start=J!==void 0?J:new Q.Vector3,this.end=$!==void 0?$:new Q.Vector3};Q.Line3.prototype={constructor:Q.Line3,set:function(J,$){return this.start.copy(J),this.end.copy($),this},clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.start.copy(J.start),this.end.copy(J.end),this},center:function(J){var $=J||new Q.Vector3;return $.addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(J){var $=J||new Q.Vector3;return $.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(J,$){var Z=$||new Q.Vector3;return this.delta(Z).multiplyScalar(J).add(this.start)},closestPointToPointParameter:function(){var J=new Q.Vector3,$=new Q.Vector3;return function(Z,K){J.subVectors(Z,this.start),$.subVectors(this.end,this.start);var Y=$.dot($),X=$.dot(J),G=X/Y;if(K)G=Q.Math.clamp(G,0,1);return G}}(),closestPointToPoint:function(J,$,Z){var K=this.closestPointToPointParameter(J,$),Y=Z||new Q.Vector3;return this.delta(Y).multiplyScalar(K).add(this.start)},applyMatrix4:function(J){return this.start.applyMatrix4(J),this.end.applyMatrix4(J),this},equals:function(J){return J.start.equals(this.start)&&J.end.equals(this.end)}};Q.Box2=function(J,$){this.min=J!==void 0?J:new Q.Vector2(1/0,1/0),this.max=$!==void 0?$:new Q.Vector2(-1/0,-1/0)};Q.Box2.prototype={constructor:Q.Box2,set:function(J,$){return this.min.copy(J),this.max.copy($),this},setFromPoints:function(J){this.makeEmpty();for(var $=0,Z=J.length;$<Z;$++)this.expandByPoint(J[$]);return this},setFromCenterAndSize:function(){var J=new Q.Vector2;return function($,Z){var K=J.copy(Z).multiplyScalar(0.5);return this.min.copy($).sub(K),this.max.copy($).add(K),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.min.copy(J.min),this.max.copy(J.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(J){var $=J||new Q.Vector2;return $.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(J){var $=J||new Q.Vector2;return $.subVectors(this.max,this.min)},expandByPoint:function(J){return this.min.min(J),this.max.max(J),this},expandByVector:function(J){return this.min.sub(J),this.max.add(J),this},expandByScalar:function(J){return this.min.addScalar(-J),this.max.addScalar(J),this},containsPoint:function(J){if(J.x<this.min.x||J.x>this.max.x||J.y<this.min.y||J.y>this.max.y)return!1;return!0},containsBox:function(J){if(this.min.x<=J.min.x&&J.max.x<=this.max.x&&this.min.y<=J.min.y&&J.max.y<=this.max.y)return!0;return!1},getParameter:function(J,$){var Z=$||new Q.Vector2;return Z.set((J.x-this.min.x)/(this.max.x-this.min.x),(J.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(J){if(J.max.x<this.min.x||J.min.x>this.max.x||J.max.y<this.min.y||J.min.y>this.max.y)return!1;return!0},clampPoint:function(J,$){var Z=$||new Q.Vector2;return Z.copy(J).clamp(this.min,this.max)},distanceToPoint:function(){var J=new Q.Vector2;return function($){var Z=J.copy($).clamp(this.min,this.max);return Z.sub($).length()}}(),intersect:function(J){return this.min.max(J.min),this.max.min(J.max),this},union:function(J){return this.min.min(J.min),this.max.max(J.max),this},translate:function(J){return this.min.add(J),this.max.add(J),this},equals:function(J){return J.min.equals(this.min)&&J.max.equals(this.max)}};Q.Box3=function(J,$){this.min=J!==void 0?J:new Q.Vector3(1/0,1/0,1/0),this.max=$!==void 0?$:new Q.Vector3(-1/0,-1/0,-1/0)};Q.Box3.prototype={constructor:Q.Box3,set:function(J,$){return this.min.copy(J),this.max.copy($),this},setFromArray:function(J){var $=1/0,Z=1/0,K=1/0,Y=-1/0,X=-1/0,G=-1/0;for(var W=0,U=J.length;W<U;W+=3){var D=J[W],N=J[W+1],B=J[W+2];if(D<$)$=D;if(N<Z)Z=N;if(B<K)K=B;if(D>Y)Y=D;if(N>X)X=N;if(B>G)G=B}this.min.set($,Z,K),this.max.set(Y,X,G)},setFromPoints:function(J){this.makeEmpty();for(var $=0,Z=J.length;$<Z;$++)this.expandByPoint(J[$]);return this},setFromCenterAndSize:function(){var J=new Q.Vector3;return function($,Z){var K=J.copy(Z).multiplyScalar(0.5);return this.min.copy($).sub(K),this.max.copy($).add(K),this}}(),setFromObject:function(){var J=new Q.Vector3;return function($){var Z=this;return $.updateMatrixWorld(!0),this.makeEmpty(),$.traverse(function(K){var Y=K.geometry;if(Y!==void 0){if(Y instanceof Q.Geometry){var X=Y.vertices;for(var G=0,W=X.length;G<W;G++)J.copy(X[G]),J.applyMatrix4(K.matrixWorld),Z.expandByPoint(J)}else if(Y instanceof Q.BufferGeometry&&Y.attributes.position!==void 0){var U=Y.attributes.position.array;for(var G=0,W=U.length;G<W;G+=3)J.fromArray(U,G),J.applyMatrix4(K.matrixWorld),Z.expandByPoint(J)}}}),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.min.copy(J.min),this.max.copy(J.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(J){var $=J||new Q.Vector3;return $.addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(J){var $=J||new Q.Vector3;return $.subVectors(this.max,this.min)},expandByPoint:function(J){return this.min.min(J),this.max.max(J),this},expandByVector:function(J){return this.min.sub(J),this.max.add(J),this},expandByScalar:function(J){return this.min.addScalar(-J),this.max.addScalar(J),this},containsPoint:function(J){if(J.x<this.min.x||J.x>this.max.x||J.y<this.min.y||J.y>this.max.y||J.z<this.min.z||J.z>this.max.z)return!1;return!0},containsBox:function(J){if(this.min.x<=J.min.x&&J.max.x<=this.max.x&&this.min.y<=J.min.y&&J.max.y<=this.max.y&&this.min.z<=J.min.z&&J.max.z<=this.max.z)return!0;return!1},getParameter:function(J,$){var Z=$||new Q.Vector3;return Z.set((J.x-this.min.x)/(this.max.x-this.min.x),(J.y-this.min.y)/(this.max.y-this.min.y),(J.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(J){if(J.max.x<this.min.x||J.min.x>this.max.x||J.max.y<this.min.y||J.min.y>this.max.y||J.max.z<this.min.z||J.min.z>this.max.z)return!1;return!0},intersectsSphere:function(){var J;return function $(Z){if(J===void 0)J=new Q.Vector3;return this.clampPoint(Z.center,J),J.distanceToSquared(Z.center)<=Z.radius*Z.radius}}(),intersectsPlane:function(J){var $,Z;if(J.normal.x>0)$=J.normal.x*this.min.x,Z=J.normal.x*this.max.x;else $=J.normal.x*this.max.x,Z=J.normal.x*this.min.x;if(J.normal.y>0)$+=J.normal.y*this.min.y,Z+=J.normal.y*this.max.y;else $+=J.normal.y*this.max.y,Z+=J.normal.y*this.min.y;if(J.normal.z>0)$+=J.normal.z*this.min.z,Z+=J.normal.z*this.max.z;else $+=J.normal.z*this.max.z,Z+=J.normal.z*this.min.z;return $<=J.constant&&Z>=J.constant},clampPoint:function(J,$){var Z=$||new Q.Vector3;return Z.copy(J).clamp(this.min,this.max)},distanceToPoint:function(){var J=new Q.Vector3;return function($){var Z=J.copy($).clamp(this.min,this.max);return Z.sub($).length()}}(),getBoundingSphere:function(){var J=new Q.Vector3;return function($){var Z=$||new Q.Sphere;return Z.center=this.center(),Z.radius=this.size(J).length()*0.5,Z}}(),intersect:function(J){if(this.min.max(J.min),this.max.min(J.max),this.isEmpty())this.makeEmpty();return this},union:function(J){return this.min.min(J.min),this.max.max(J.max),this},applyMatrix4:function(){var J=[new Q.Vector3,new Q.Vector3,new Q.Vector3,new Q.Vector3,new Q.Vector3,new Q.Vector3,new Q.Vector3,new Q.Vector3];return function($){if(this.isEmpty())return this;return J[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4($),J[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4($),J[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4($),J[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4($),J[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4($),J[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4($),J[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4($),J[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4($),this.setFromPoints(J),this}}(),translate:function(J){return this.min.add(J),this.max.add(J),this},equals:function(J){return J.min.equals(this.min)&&J.max.equals(this.max)}};Q.Matrix3=function(){if(this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0)console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")};Q.Matrix3.prototype={constructor:Q.Matrix3,set:function(J,$,Z,K,Y,X,G,W,U){var D=this.elements;return D[0]=J,D[1]=K,D[2]=G,D[3]=$,D[4]=Y,D[5]=W,D[6]=Z,D[7]=X,D[8]=U,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(J){var $=J.elements;return this.set($[0],$[3],$[6],$[1],$[4],$[7],$[2],$[5],$[8]),this},setFromMatrix4:function(J){var $=J.elements;return this.set($[0],$[4],$[8],$[1],$[5],$[9],$[2],$[6],$[10]),this},applyToVector3Array:function(){var J;return function($,Z,K){if(J===void 0)J=new Q.Vector3;if(Z===void 0)Z=0;if(K===void 0)K=$.length;for(var Y=0,X=Z;Y<K;Y+=3,X+=3)J.fromArray($,X),J.applyMatrix3(this),J.toArray($,X);return $}}(),applyToBuffer:function(){var J;return function $(Z,K,Y){if(J===void 0)J=new Q.Vector3;if(K===void 0)K=0;if(Y===void 0)Y=Z.length/Z.itemSize;for(var X=0,G=K;X<Y;X++,G++)J.x=Z.getX(G),J.y=Z.getY(G),J.z=Z.getZ(G),J.applyMatrix3(this),Z.setXYZ(J.x,J.y,J.z);return Z}}(),multiplyScalar:function(J){var $=this.elements;return $[0]*=J,$[3]*=J,$[6]*=J,$[1]*=J,$[4]*=J,$[7]*=J,$[2]*=J,$[5]*=J,$[8]*=J,this},determinant:function(){var J=this.elements,$=J[0],Z=J[1],K=J[2],Y=J[3],X=J[4],G=J[5],W=J[6],U=J[7],D=J[8];return $*X*D-$*G*U-Z*Y*D+Z*G*W+K*Y*U-K*X*W},getInverse:function(J,$){if(J instanceof Q.Matrix4)console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");var Z=J.elements,K=this.elements,Y=Z[0],X=Z[1],G=Z[2],W=Z[3],U=Z[4],D=Z[5],N=Z[6],B=Z[7],q=Z[8],V=q*U-D*B,M=D*N-q*W,z=B*W-U*N,F=Y*V+X*M+G*z;if(F===0){var L="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if($)throw new Error(L);else console.warn(L);return this.identity()}var A=1/F;return K[0]=V*A,K[1]=(G*B-q*X)*A,K[2]=(D*X-G*U)*A,K[3]=M*A,K[4]=(q*Y-G*N)*A,K[5]=(G*W-D*Y)*A,K[6]=z*A,K[7]=(X*N-B*Y)*A,K[8]=(U*Y-X*W)*A,this},transpose:function(){var J,$=this.elements;return J=$[1],$[1]=$[3],$[3]=J,J=$[2],$[2]=$[6],$[6]=J,J=$[5],$[5]=$[7],$[7]=J,this},flattenToArrayOffset:function(J,$){return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),this.toArray(J,$)},getNormalMatrix:function(J){return this.setFromMatrix4(J).getInverse(this).transpose()},transposeIntoArray:function(J){var $=this.elements;return J[0]=$[0],J[1]=$[3],J[2]=$[6],J[3]=$[1],J[4]=$[4],J[5]=$[7],J[6]=$[2],J[7]=$[5],J[8]=$[8],this},fromArray:function(J){return this.elements.set(J),this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;var Z=this.elements;return J[$]=Z[0],J[$+1]=Z[1],J[$+2]=Z[2],J[$+3]=Z[3],J[$+4]=Z[4],J[$+5]=Z[5],J[$+6]=Z[6],J[$+7]=Z[7],J[$+8]=Z[8],J}};Q.Matrix4=function(){if(this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0)console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")};Q.Matrix4.prototype={constructor:Q.Matrix4,set:function(J,$,Z,K,Y,X,G,W,U,D,N,B,q,V,M,z){var F=this.elements;return F[0]=J,F[4]=$,F[8]=Z,F[12]=K,F[1]=Y,F[5]=X,F[9]=G,F[13]=W,F[2]=U,F[6]=D,F[10]=N,F[14]=B,F[3]=q,F[7]=V,F[11]=M,F[15]=z,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new Q.Matrix4().fromArray(this.elements)},copy:function(J){return this.elements.set(J.elements),this},copyPosition:function(J){var $=this.elements,Z=J.elements;return $[12]=Z[12],$[13]=Z[13],$[14]=Z[14],this},extractBasis:function(J,$,Z){return J.setFromMatrixColumn(this,0),$.setFromMatrixColumn(this,1),Z.setFromMatrixColumn(this,2),this},makeBasis:function(J,$,Z){return this.set(J.x,$.x,Z.x,0,J.y,$.y,Z.y,0,J.z,$.z,Z.z,0,0,0,0,1),this},extractRotation:function(){var J;return function($){if(J===void 0)J=new Q.Vector3;var Z=this.elements,K=$.elements,Y=1/J.setFromMatrixColumn($,0).length(),X=1/J.setFromMatrixColumn($,1).length(),G=1/J.setFromMatrixColumn($,2).length();return Z[0]=K[0]*Y,Z[1]=K[1]*Y,Z[2]=K[2]*Y,Z[4]=K[4]*X,Z[5]=K[5]*X,Z[6]=K[6]*X,Z[8]=K[8]*G,Z[9]=K[9]*G,Z[10]=K[10]*G,this}}(),makeRotationFromEuler:function(J){if(J instanceof Q.Euler===!1)console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var $=this.elements,Z=J.x,K=J.y,Y=J.z,X=Math.cos(Z),G=Math.sin(Z),W=Math.cos(K),U=Math.sin(K),D=Math.cos(Y),N=Math.sin(Y);if(J.order==="XYZ"){var B=X*D,q=X*N,V=G*D,M=G*N;$[0]=W*D,$[4]=-W*N,$[8]=U,$[1]=q+V*U,$[5]=B-M*U,$[9]=-G*W,$[2]=M-B*U,$[6]=V+q*U,$[10]=X*W}else if(J.order==="YXZ"){var z=W*D,F=W*N,L=U*D,A=U*N;$[0]=z+A*G,$[4]=L*G-F,$[8]=X*U,$[1]=X*N,$[5]=X*D,$[9]=-G,$[2]=F*G-L,$[6]=A+z*G,$[10]=X*W}else if(J.order==="ZXY"){var z=W*D,F=W*N,L=U*D,A=U*N;$[0]=z-A*G,$[4]=-X*N,$[8]=L+F*G,$[1]=F+L*G,$[5]=X*D,$[9]=A-z*G,$[2]=-X*U,$[6]=G,$[10]=X*W}else if(J.order==="ZYX"){var B=X*D,q=X*N,V=G*D,M=G*N;$[0]=W*D,$[4]=V*U-q,$[8]=B*U+M,$[1]=W*N,$[5]=M*U+B,$[9]=q*U-V,$[2]=-U,$[6]=G*W,$[10]=X*W}else if(J.order==="YZX"){var C=X*W,w=X*U,_=G*W,x=G*U;$[0]=W*D,$[4]=x-C*N,$[8]=_*N+w,$[1]=N,$[5]=X*D,$[9]=-G*D,$[2]=-U*D,$[6]=w*N+_,$[10]=C-x*N}else if(J.order==="XZY"){var C=X*W,w=X*U,_=G*W,x=G*U;$[0]=W*D,$[4]=-N,$[8]=U*D,$[1]=C*N+x,$[5]=X*D,$[9]=w*N-_,$[2]=_*N-w,$[6]=G*D,$[10]=x*N+C}return $[3]=0,$[7]=0,$[11]=0,$[12]=0,$[13]=0,$[14]=0,$[15]=1,this},makeRotationFromQuaternion:function(J){var $=this.elements,Z=J.x,K=J.y,Y=J.z,X=J.w,G=Z+Z,W=K+K,U=Y+Y,D=Z*G,N=Z*W,B=Z*U,q=K*W,V=K*U,M=Y*U,z=X*G,F=X*W,L=X*U;return $[0]=1-(q+M),$[4]=N-L,$[8]=B+F,$[1]=N+L,$[5]=1-(D+M),$[9]=V-z,$[2]=B-F,$[6]=V+z,$[10]=1-(D+q),$[3]=0,$[7]=0,$[11]=0,$[12]=0,$[13]=0,$[14]=0,$[15]=1,this},lookAt:function(){var J,$,Z;return function(K,Y,X){if(J===void 0)J=new Q.Vector3,$=new Q.Vector3,Z=new Q.Vector3;var G=this.elements;if(Z.subVectors(K,Y).normalize(),Z.lengthSq()===0)Z.z=1;if(J.crossVectors(X,Z).normalize(),J.lengthSq()===0)Z.z+=0.0001,J.crossVectors(X,Z).normalize();return $.crossVectors(Z,J),G[0]=J.x,G[4]=$.x,G[8]=Z.x,G[1]=J.y,G[5]=$.y,G[9]=Z.y,G[2]=J.z,G[6]=$.z,G[10]=Z.z,this}}(),multiply:function(J,$){if($!==void 0)return console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(J,$);return this.multiplyMatrices(this,J)},premultiply:function(J){return this.multiplyMatrices(J,this)},multiplyMatrices:function(J,$){var Z=J.elements,K=$.elements,Y=this.elements,X=Z[0],G=Z[4],W=Z[8],U=Z[12],D=Z[1],N=Z[5],B=Z[9],q=Z[13],V=Z[2],M=Z[6],z=Z[10],F=Z[14],L=Z[3],A=Z[7],C=Z[11],w=Z[15],_=K[0],x=K[4],H=K[8],v=K[12],b=K[1],R=K[5],u=K[9],E=K[13],h=K[2],c=K[6],S=K[10],T=K[14],f=K[3],l=K[7],s=K[11],r=K[15];return Y[0]=X*_+G*b+W*h+U*f,Y[4]=X*x+G*R+W*c+U*l,Y[8]=X*H+G*u+W*S+U*s,Y[12]=X*v+G*E+W*T+U*r,Y[1]=D*_+N*b+B*h+q*f,Y[5]=D*x+N*R+B*c+q*l,Y[9]=D*H+N*u+B*S+q*s,Y[13]=D*v+N*E+B*T+q*r,Y[2]=V*_+M*b+z*h+F*f,Y[6]=V*x+M*R+z*c+F*l,Y[10]=V*H+M*u+z*S+F*s,Y[14]=V*v+M*E+z*T+F*r,Y[3]=L*_+A*b+C*h+w*f,Y[7]=L*x+A*R+C*c+w*l,Y[11]=L*H+A*u+C*S+w*s,Y[15]=L*v+A*E+C*T+w*r,this},multiplyToArray:function(J,$,Z){var K=this.elements;return this.multiplyMatrices(J,$),Z[0]=K[0],Z[1]=K[1],Z[2]=K[2],Z[3]=K[3],Z[4]=K[4],Z[5]=K[5],Z[6]=K[6],Z[7]=K[7],Z[8]=K[8],Z[9]=K[9],Z[10]=K[10],Z[11]=K[11],Z[12]=K[12],Z[13]=K[13],Z[14]=K[14],Z[15]=K[15],this},multiplyScalar:function(J){var $=this.elements;return $[0]*=J,$[4]*=J,$[8]*=J,$[12]*=J,$[1]*=J,$[5]*=J,$[9]*=J,$[13]*=J,$[2]*=J,$[6]*=J,$[10]*=J,$[14]*=J,$[3]*=J,$[7]*=J,$[11]*=J,$[15]*=J,this},applyToVector3Array:function(){var J;return function($,Z,K){if(J===void 0)J=new Q.Vector3;if(Z===void 0)Z=0;if(K===void 0)K=$.length;for(var Y=0,X=Z;Y<K;Y+=3,X+=3)J.fromArray($,X),J.applyMatrix4(this),J.toArray($,X);return $}}(),applyToBuffer:function(){var J;return function $(Z,K,Y){if(J===void 0)J=new Q.Vector3;if(K===void 0)K=0;if(Y===void 0)Y=Z.length/Z.itemSize;for(var X=0,G=K;X<Y;X++,G++)J.x=Z.getX(G),J.y=Z.getY(G),J.z=Z.getZ(G),J.applyMatrix4(this),Z.setXYZ(J.x,J.y,J.z);return Z}}(),determinant:function(){var J=this.elements,$=J[0],Z=J[4],K=J[8],Y=J[12],X=J[1],G=J[5],W=J[9],U=J[13],D=J[2],N=J[6],B=J[10],q=J[14],V=J[3],M=J[7],z=J[11],F=J[15];return V*(+Y*W*N-K*U*N-Y*G*B+Z*U*B+K*G*q-Z*W*q)+M*(+$*W*q-$*U*B+Y*X*B-K*X*q+K*U*D-Y*W*D)+z*(+$*U*N-$*G*q-Y*X*N+Z*X*q+Y*G*D-Z*U*D)+F*(-K*G*D-$*W*N+$*G*B+K*X*N-Z*X*B+Z*W*D)},transpose:function(){var J=this.elements,$;return $=J[1],J[1]=J[4],J[4]=$,$=J[2],J[2]=J[8],J[8]=$,$=J[6],J[6]=J[9],J[9]=$,$=J[3],J[3]=J[12],J[12]=$,$=J[7],J[7]=J[13],J[13]=$,$=J[11],J[11]=J[14],J[14]=$,this},flattenToArrayOffset:function(J,$){return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),this.toArray(J,$)},getPosition:function(){var J;return function(){if(J===void 0)J=new Q.Vector3;return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),J.setFromMatrixColumn(this,3)}}(),setPosition:function(J){var $=this.elements;return $[12]=J.x,$[13]=J.y,$[14]=J.z,this},getInverse:function(J,$){var Z=this.elements,K=J.elements,Y=K[0],X=K[1],G=K[2],W=K[3],U=K[4],D=K[5],N=K[6],B=K[7],q=K[8],V=K[9],M=K[10],z=K[11],F=K[12],L=K[13],A=K[14],C=K[15],w=V*A*B-L*M*B+L*N*z-D*A*z-V*N*C+D*M*C,_=F*M*B-q*A*B-F*N*z+U*A*z+q*N*C-U*M*C,x=q*L*B-F*V*B+F*D*z-U*L*z-q*D*C+U*V*C,H=F*V*N-q*L*N-F*D*M+U*L*M+q*D*A-U*V*A,v=Y*w+X*_+G*x+W*H;if(v===0){var b="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if($)throw new Error(b);else console.warn(b);return this.identity()}var R=1/v;return Z[0]=w*R,Z[1]=(L*M*W-V*A*W-L*G*z+X*A*z+V*G*C-X*M*C)*R,Z[2]=(D*A*W-L*N*W+L*G*B-X*A*B-D*G*C+X*N*C)*R,Z[3]=(V*N*W-D*M*W-V*G*B+X*M*B+D*G*z-X*N*z)*R,Z[4]=_*R,Z[5]=(q*A*W-F*M*W+F*G*z-Y*A*z-q*G*C+Y*M*C)*R,Z[6]=(F*N*W-U*A*W-F*G*B+Y*A*B+U*G*C-Y*N*C)*R,Z[7]=(U*M*W-q*N*W+q*G*B-Y*M*B-U*G*z+Y*N*z)*R,Z[8]=x*R,Z[9]=(F*V*W-q*L*W-F*X*z+Y*L*z+q*X*C-Y*V*C)*R,Z[10]=(U*L*W-F*D*W+F*X*B-Y*L*B-U*X*C+Y*D*C)*R,Z[11]=(q*D*W-U*V*W-q*X*B+Y*V*B+U*X*z-Y*D*z)*R,Z[12]=H*R,Z[13]=(q*L*G-F*V*G+F*X*M-Y*L*M-q*X*A+Y*V*A)*R,Z[14]=(F*D*G-U*L*G-F*X*N+Y*L*N+U*X*A-Y*D*A)*R,Z[15]=(U*V*G-q*D*G+q*X*N-Y*V*N-U*X*M+Y*D*M)*R,this},scale:function(J){var $=this.elements,Z=J.x,K=J.y,Y=J.z;return $[0]*=Z,$[4]*=K,$[8]*=Y,$[1]*=Z,$[5]*=K,$[9]*=Y,$[2]*=Z,$[6]*=K,$[10]*=Y,$[3]*=Z,$[7]*=K,$[11]*=Y,this},getMaxScaleOnAxis:function(){var J=this.elements,$=J[0]*J[0]+J[1]*J[1]+J[2]*J[2],Z=J[4]*J[4]+J[5]*J[5]+J[6]*J[6],K=J[8]*J[8]+J[9]*J[9]+J[10]*J[10];return Math.sqrt(Math.max($,Z,K))},makeTranslation:function(J,$,Z){return this.set(1,0,0,J,0,1,0,$,0,0,1,Z,0,0,0,1),this},makeRotationX:function(J){var $=Math.cos(J),Z=Math.sin(J);return this.set(1,0,0,0,0,$,-Z,0,0,Z,$,0,0,0,0,1),this},makeRotationY:function(J){var $=Math.cos(J),Z=Math.sin(J);return this.set($,0,Z,0,0,1,0,0,-Z,0,$,0,0,0,0,1),this},makeRotationZ:function(J){var $=Math.cos(J),Z=Math.sin(J);return this.set($,-Z,0,0,Z,$,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(J,$){var Z=Math.cos($),K=Math.sin($),Y=1-Z,X=J.x,G=J.y,W=J.z,U=Y*X,D=Y*G;return this.set(U*X+Z,U*G-K*W,U*W+K*G,0,U*G+K*W,D*G+Z,D*W-K*X,0,U*W-K*G,D*W+K*X,Y*W*W+Z,0,0,0,0,1),this},makeScale:function(J,$,Z){return this.set(J,0,0,0,0,$,0,0,0,0,Z,0,0,0,0,1),this},compose:function(J,$,Z){return this.makeRotationFromQuaternion($),this.scale(Z),this.setPosition(J),this},decompose:function(){var J,$;return function(Z,K,Y){if(J===void 0)J=new Q.Vector3,$=new Q.Matrix4;var X=this.elements,G=J.set(X[0],X[1],X[2]).length(),W=J.set(X[4],X[5],X[6]).length(),U=J.set(X[8],X[9],X[10]).length(),D=this.determinant();if(D<0)G=-G;Z.x=X[12],Z.y=X[13],Z.z=X[14],$.elements.set(this.elements);var N=1/G,B=1/W,q=1/U;return $.elements[0]*=N,$.elements[1]*=N,$.elements[2]*=N,$.elements[4]*=B,$.elements[5]*=B,$.elements[6]*=B,$.elements[8]*=q,$.elements[9]*=q,$.elements[10]*=q,K.setFromRotationMatrix($),Y.x=G,Y.y=W,Y.z=U,this}}(),makeFrustum:function(J,$,Z,K,Y,X){var G=this.elements,W=2*Y/($-J),U=2*Y/(K-Z),D=($+J)/($-J),N=(K+Z)/(K-Z),B=-(X+Y)/(X-Y),q=-2*X*Y/(X-Y);return G[0]=W,G[4]=0,G[8]=D,G[12]=0,G[1]=0,G[5]=U,G[9]=N,G[13]=0,G[2]=0,G[6]=0,G[10]=B,G[14]=q,G[3]=0,G[7]=0,G[11]=-1,G[15]=0,this},makePerspective:function(J,$,Z,K){var Y=Z*Math.tan(Q.Math.DEG2RAD*J*0.5),X=-Y,G=X*$,W=Y*$;return this.makeFrustum(G,W,X,Y,Z,K)},makeOrthographic:function(J,$,Z,K,Y,X){var G=this.elements,W=1/($-J),U=1/(Z-K),D=1/(X-Y),N=($+J)*W,B=(Z+K)*U,q=(X+Y)*D;return G[0]=2*W,G[4]=0,G[8]=0,G[12]=-N,G[1]=0,G[5]=2*U,G[9]=0,G[13]=-B,G[2]=0,G[6]=0,G[10]=-2*D,G[14]=-q,G[3]=0,G[7]=0,G[11]=0,G[15]=1,this},equals:function(J){var $=this.elements,Z=J.elements;for(var K=0;K<16;K++)if($[K]!==Z[K])return!1;return!0},fromArray:function(J){return this.elements.set(J),this},toArray:function(J,$){if(J===void 0)J=[];if($===void 0)$=0;var Z=this.elements;return J[$]=Z[0],J[$+1]=Z[1],J[$+2]=Z[2],J[$+3]=Z[3],J[$+4]=Z[4],J[$+5]=Z[5],J[$+6]=Z[6],J[$+7]=Z[7],J[$+8]=Z[8],J[$+9]=Z[9],J[$+10]=Z[10],J[$+11]=Z[11],J[$+12]=Z[12],J[$+13]=Z[13],J[$+14]=Z[14],J[$+15]=Z[15],J}};Q.Ray=function(J,$){this.origin=J!==void 0?J:new Q.Vector3,this.direction=$!==void 0?$:new Q.Vector3};Q.Ray.prototype={constructor:Q.Ray,set:function(J,$){return this.origin.copy(J),this.direction.copy($),this},clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.origin.copy(J.origin),this.direction.copy(J.direction),this},at:function(J,$){var Z=$||new Q.Vector3;return Z.copy(this.direction).multiplyScalar(J).add(this.origin)},lookAt:function(J){return this.direction.copy(J).sub(this.origin).normalize(),this},recast:function(){var J=new Q.Vector3;return function($){return this.origin.copy(this.at($,J)),this}}(),closestPointToPoint:function(J,$){var Z=$||new Q.Vector3;Z.subVectors(J,this.origin);var K=Z.dot(this.direction);if(K<0)return Z.copy(this.origin);return Z.copy(this.direction).multiplyScalar(K).add(this.origin)},distanceToPoint:function(J){return Math.sqrt(this.distanceSqToPoint(J))},distanceSqToPoint:function(){var J=new Q.Vector3;return function($){var Z=J.subVectors($,this.origin).dot(this.direction);if(Z<0)return this.origin.distanceToSquared($);return J.copy(this.direction).multiplyScalar(Z).add(this.origin),J.distanceToSquared($)}}(),distanceSqToSegment:function(){var J=new Q.Vector3,$=new Q.Vector3,Z=new Q.Vector3;return function(K,Y,X,G){J.copy(K).add(Y).multiplyScalar(0.5),$.copy(Y).sub(K).normalize(),Z.copy(this.origin).sub(J);var W=K.distanceTo(Y)*0.5,U=-this.direction.dot($),D=Z.dot(this.direction),N=-Z.dot($),B=Z.lengthSq(),q=Math.abs(1-U*U),V,M,z,F;if(q>0)if(V=U*N-D,M=U*D-N,F=W*q,V>=0)if(M>=-F)if(M<=F){var L=1/q;V*=L,M*=L,z=V*(V+U*M+2*D)+M*(U*V+M+2*N)+B}else M=W,V=Math.max(0,-(U*M+D)),z=-V*V+M*(M+2*N)+B;else M=-W,V=Math.max(0,-(U*M+D)),z=-V*V+M*(M+2*N)+B;else if(M<=-F)V=Math.max(0,-(-U*W+D)),M=V>0?-W:Math.min(Math.max(-W,-N),W),z=-V*V+M*(M+2*N)+B;else if(M<=F)V=0,M=Math.min(Math.max(-W,-N),W),z=M*(M+2*N)+B;else V=Math.max(0,-(U*W+D)),M=V>0?W:Math.min(Math.max(-W,-N),W),z=-V*V+M*(M+2*N)+B;else M=U>0?-W:W,V=Math.max(0,-(U*M+D)),z=-V*V+M*(M+2*N)+B;if(X)X.copy(this.direction).multiplyScalar(V).add(this.origin);if(G)G.copy($).multiplyScalar(M).add(J);return z}}(),intersectSphere:function(){var J=new Q.Vector3;return function($,Z){J.subVectors($.center,this.origin);var K=J.dot(this.direction),Y=J.dot(J)-K*K,X=$.radius*$.radius;if(Y>X)return null;var G=Math.sqrt(X-Y),W=K-G,U=K+G;if(W<0&&U<0)return null;if(W<0)return this.at(U,Z);return this.at(W,Z)}}(),intersectsSphere:function(J){return this.distanceToPoint(J.center)<=J.radius},distanceToPlane:function(J){var $=J.normal.dot(this.direction);if($===0){if(J.distanceToPoint(this.origin)===0)return 0;return null}var Z=-(this.origin.dot(J.normal)+J.constant)/$;return Z>=0?Z:null},intersectPlane:function(J,$){var Z=this.distanceToPlane(J);if(Z===null)return null;return this.at(Z,$)},intersectsPlane:function(J){var $=J.distanceToPoint(this.origin);if($===0)return!0;var Z=J.normal.dot(this.direction);if(Z*$<0)return!0;return!1},intersectBox:function(J,$){var Z,K,Y,X,G,W,U=1/this.direction.x,D=1/this.direction.y,N=1/this.direction.z,B=this.origin;if(U>=0)Z=(J.min.x-B.x)*U,K=(J.max.x-B.x)*U;else Z=(J.max.x-B.x)*U,K=(J.min.x-B.x)*U;if(D>=0)Y=(J.min.y-B.y)*D,X=(J.max.y-B.y)*D;else Y=(J.max.y-B.y)*D,X=(J.min.y-B.y)*D;if(Z>X||Y>K)return null;if(Y>Z||Z!==Z)Z=Y;if(X<K||K!==K)K=X;if(N>=0)G=(J.min.z-B.z)*N,W=(J.max.z-B.z)*N;else G=(J.max.z-B.z)*N,W=(J.min.z-B.z)*N;if(Z>W||G>K)return null;if(G>Z||Z!==Z)Z=G;if(W<K||K!==K)K=W;if(K<0)return null;return this.at(Z>=0?Z:K,$)},intersectsBox:function(){var J=new Q.Vector3;return function($){return this.intersectBox($,J)!==null}}(),intersectTriangle:function(){var J=new Q.Vector3,$=new Q.Vector3,Z=new Q.Vector3,K=new Q.Vector3;return function(Y,X,G,W,U){$.subVectors(X,Y),Z.subVectors(G,Y),K.crossVectors($,Z);var D=this.direction.dot(K),N;if(D>0){if(W)return null;N=1}else if(D<0)N=-1,D=-D;else return null;J.subVectors(this.origin,Y);var B=N*this.direction.dot(Z.crossVectors(J,Z));if(B<0)return null;var q=N*this.direction.dot($.cross(J));if(q<0)return null;if(B+q>D)return null;var V=-N*J.dot(K);if(V<0)return null;return this.at(V/D,U)}}(),applyMatrix4:function(J){return this.direction.add(this.origin).applyMatrix4(J),this.origin.applyMatrix4(J),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(J){return J.origin.equals(this.origin)&&J.direction.equals(this.direction)}};Q.Sphere=function(J,$){this.center=J!==void 0?J:new Q.Vector3,this.radius=$!==void 0?$:0};Q.Sphere.prototype={constructor:Q.Sphere,set:function(J,$){return this.center.copy(J),this.radius=$,this},setFromPoints:function(){var J=new Q.Box3;return function($,Z){var K=this.center;if(Z!==void 0)K.copy(Z);else J.setFromPoints($).center(K);var Y=0;for(var X=0,G=$.length;X<G;X++)Y=Math.max(Y,K.distanceToSquared($[X]));return this.radius=Math.sqrt(Y),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.center.copy(J.center),this.radius=J.radius,this},empty:function(){return this.radius<=0},containsPoint:function(J){return J.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(J){return J.distanceTo(this.center)-this.radius},intersectsSphere:function(J){var $=this.radius+J.radius;return J.center.distanceToSquared(this.center)<=$*$},intersectsBox:function(J){return J.intersectsSphere(this)},intersectsPlane:function(J){return Math.abs(this.center.dot(J.normal)-J.constant)<=this.radius},clampPoint:function(J,$){var Z=this.center.distanceToSquared(J),K=$||new Q.Vector3;if(K.copy(J),Z>this.radius*this.radius)K.sub(this.center).normalize(),K.multiplyScalar(this.radius).add(this.center);return K},getBoundingBox:function(J){var $=J||new Q.Box3;return $.set(this.center,this.center),$.expandByScalar(this.radius),$},applyMatrix4:function(J){return this.center.applyMatrix4(J),this.radius=this.radius*J.getMaxScaleOnAxis(),this},translate:function(J){return this.center.add(J),this},equals:function(J){return J.center.equals(this.center)&&J.radius===this.radius}};Q.Frustum=function(J,$,Z,K,Y,X){this.planes=[J!==void 0?J:new Q.Plane,$!==void 0?$:new Q.Plane,Z!==void 0?Z:new Q.Plane,K!==void 0?K:new Q.Plane,Y!==void 0?Y:new Q.Plane,X!==void 0?X:new Q.Plane]};Q.Frustum.prototype={constructor:Q.Frustum,set:function(J,$,Z,K,Y,X){var G=this.planes;return G[0].copy(J),G[1].copy($),G[2].copy(Z),G[3].copy(K),G[4].copy(Y),G[5].copy(X),this},clone:function(){return new this.constructor().copy(this)},copy:function(J){var $=this.planes;for(var Z=0;Z<6;Z++)$[Z].copy(J.planes[Z]);return this},setFromMatrix:function(J){var $=this.planes,Z=J.elements,K=Z[0],Y=Z[1],X=Z[2],G=Z[3],W=Z[4],U=Z[5],D=Z[6],N=Z[7],B=Z[8],q=Z[9],V=Z[10],M=Z[11],z=Z[12],F=Z[13],L=Z[14],A=Z[15];return $[0].setComponents(G-K,N-W,M-B,A-z).normalize(),$[1].setComponents(G+K,N+W,M+B,A+z).normalize(),$[2].setComponents(G+Y,N+U,M+q,A+F).normalize(),$[3].setComponents(G-Y,N-U,M-q,A-F).normalize(),$[4].setComponents(G-X,N-D,M-V,A-L).normalize(),$[5].setComponents(G+X,N+D,M+V,A+L).normalize(),this},intersectsObject:function(){var J=new Q.Sphere;return function($){var Z=$.geometry;if(Z.boundingSphere===null)Z.computeBoundingSphere();return J.copy(Z.boundingSphere).applyMatrix4($.matrixWorld),this.intersectsSphere(J)}}(),intersectsSprite:function(){var J=new Q.Sphere;return function($){return J.center.set(0,0,0),J.radius=0.7071067811865476,J.applyMatrix4($.matrixWorld),this.intersectsSphere(J)}}(),intersectsSphere:function(J){var $=this.planes,Z=J.center,K=-J.radius;for(var Y=0;Y<6;Y++){var X=$[Y].distanceToPoint(Z);if(X<K)return!1}return!0},intersectsBox:function(){var J=new Q.Vector3,$=new Q.Vector3;return function(Z){var K=this.planes;for(var Y=0;Y<6;Y++){var X=K[Y];J.x=X.normal.x>0?Z.min.x:Z.max.x,$.x=X.normal.x>0?Z.max.x:Z.min.x,J.y=X.normal.y>0?Z.min.y:Z.max.y,$.y=X.normal.y>0?Z.max.y:Z.min.y,J.z=X.normal.z>0?Z.min.z:Z.max.z,$.z=X.normal.z>0?Z.max.z:Z.min.z;var G=X.distanceToPoint(J),W=X.distanceToPoint($);if(G<0&&W<0)return!1}return!0}}(),containsPoint:function(J){var $=this.planes;for(var Z=0;Z<6;Z++)if($[Z].distanceToPoint(J)<0)return!1;return!0}};Q.Plane=function(J,$){this.normal=J!==void 0?J:new Q.Vector3(1,0,0),this.constant=$!==void 0?$:0};Q.Plane.prototype={constructor:Q.Plane,set:function(J,$){return this.normal.copy(J),this.constant=$,this},setComponents:function(J,$,Z,K){return this.normal.set(J,$,Z),this.constant=K,this},setFromNormalAndCoplanarPoint:function(J,$){return this.normal.copy(J),this.constant=-$.dot(this.normal),this},setFromCoplanarPoints:function(){var J=new Q.Vector3,$=new Q.Vector3;return function(Z,K,Y){var X=J.subVectors(Y,K).cross($.subVectors(Z,K)).normalize();return this.setFromNormalAndCoplanarPoint(X,Z),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.normal.copy(J.normal),this.constant=J.constant,this},normalize:function(){var J=1/this.normal.length();return this.normal.multiplyScalar(J),this.constant*=J,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(J){return this.normal.dot(J)+this.constant},distanceToSphere:function(J){return this.distanceToPoint(J.center)-J.radius},projectPoint:function(J,$){return this.orthoPoint(J,$).sub(J).negate()},orthoPoint:function(J,$){var Z=this.distanceToPoint(J),K=$||new Q.Vector3;return K.copy(this.normal).multiplyScalar(Z)},intersectLine:function(){var J=new Q.Vector3;return function($,Z){var K=Z||new Q.Vector3,Y=$.delta(J),X=this.normal.dot(Y);if(X===0){if(this.distanceToPoint($.start)===0)return K.copy($.start);return}var G=-($.start.dot(this.normal)+this.constant)/X;if(G<0||G>1)return;return K.copy(Y).multiplyScalar(G).add($.start)}}(),intersectsLine:function(J){var $=this.distanceToPoint(J.start),Z=this.distanceToPoint(J.end);return $<0&&Z>0||Z<0&&$>0},intersectsBox:function(J){return J.intersectsPlane(this)},intersectsSphere:function(J){return J.intersectsPlane(this)},coplanarPoint:function(J){var $=J||new Q.Vector3;return $.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var J=new Q.Vector3,$=new Q.Matrix3;return function(Z,K){var Y=this.coplanarPoint(J).applyMatrix4(Z),X=K||$.getNormalMatrix(Z),G=this.normal.applyMatrix3(X).normalize();return this.constant=-Y.dot(G),this}}(),translate:function(J){return this.constant=this.constant-J.dot(this.normal),this},equals:function(J){return J.normal.equals(this.normal)&&J.constant===this.constant}};Q.Spherical=function(J,$,Z){return this.radius=J!==void 0?J:1,this.phi=$!==void 0?$:0,this.theta=Z!==void 0?Z:0,this};Q.Spherical.prototype={constructor:Q.Spherical,set:function(J,$,Z){return this.radius=J,this.phi=$,this.theta=Z,this},clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.radius.copy(J.radius),this.phi.copy(J.phi),this.theta.copy(J.theta),this},makeSafe:function(){var J=0.000001;return this.phi=Math.max(J,Math.min(Math.PI-J,this.phi)),this},setFromVector3:function(J){if(this.radius=J.length(),this.radius===0)this.theta=0,this.phi=0;else this.theta=Math.atan2(J.x,J.z),this.phi=Math.acos(Q.Math.clamp(J.y/this.radius,-1,1));return this}};Q.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var J="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),$=new Array(36),Z=0,K;return function(){for(var Y=0;Y<36;Y++)if(Y===8||Y===13||Y===18||Y===23)$[Y]="-";else if(Y===14)$[Y]="4";else{if(Z<=2)Z=33554432+Math.random()*16777216|0;K=Z&15,Z=Z>>4,$[Y]=J[Y===19?K&3|8:K]}return $.join("")}}(),clamp:function(J,$,Z){return Math.max($,Math.min(Z,J))},euclideanModulo:function(J,$){return(J%$+$)%$},mapLinear:function(J,$,Z,K,Y){return K+(J-$)*(Y-K)/(Z-$)},smoothstep:function(J,$,Z){if(J<=$)return 0;if(J>=Z)return 1;return J=(J-$)/(Z-$),J*J*(3-2*J)},smootherstep:function(J,$,Z){if(J<=$)return 0;if(J>=Z)return 1;return J=(J-$)/(Z-$),J*J*J*(J*(J*6-15)+10)},random16:function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},randInt:function(J,$){return J+Math.floor(Math.random()*($-J+1))},randFloat:function(J,$){return J+Math.random()*($-J)},randFloatSpread:function(J){return J*(0.5-Math.random())},degToRad:function(J){return J*Q.Math.DEG2RAD},radToDeg:function(J){return J*Q.Math.RAD2DEG},isPowerOfTwo:function(J){return(J&J-1)===0&&J!==0},nearestPowerOfTwo:function(J){return Math.pow(2,Math.round(Math.log(J)/Math.LN2))},nextPowerOfTwo:function(J){return J--,J|=J>>1,J|=J>>2,J|=J>>4,J|=J>>8,J|=J>>16,J++,J}};Q.Spline=function(J){this.points=J;var $=[],Z={x:0,y:0,z:0},K,Y,X,G,W,U,D,N,B;this.initFromArray=function(V){this.points=[];for(var M=0;M<V.length;M++)this.points[M]={x:V[M][0],y:V[M][1],z:V[M][2]}},this.getPoint=function(V){return K=(this.points.length-1)*V,Y=Math.floor(K),X=K-Y,$[0]=Y===0?Y:Y-1,$[1]=Y,$[2]=Y>this.points.length-2?this.points.length-1:Y+1,$[3]=Y>this.points.length-3?this.points.length-1:Y+2,U=this.points[$[0]],D=this.points[$[1]],N=this.points[$[2]],B=this.points[$[3]],G=X*X,W=X*G,Z.x=q(U.x,D.x,N.x,B.x,X,G,W),Z.y=q(U.y,D.y,N.y,B.y,X,G,W),Z.z=q(U.z,D.z,N.z,B.z,X,G,W),Z},this.getControlPointsArray=function(){var V,M,z=this.points.length,F=[];for(V=0;V<z;V++)M=this.points[V],F[V]=[M.x,M.y,M.z];return F},this.getLength=function(V){var M,z,F,L,A=0,C=0,w=0,_=new Q.Vector3,x=new Q.Vector3,H=[],v=0;if(H[0]=0,!V)V=100;F=this.points.length*V,_.copy(this.points[0]);for(M=1;M<F;M++)if(z=M/F,L=this.getPoint(z),x.copy(L),v+=x.distanceTo(_),_.copy(L),A=(this.points.length-1)*z,C=Math.floor(A),C!==w)H[C]=v,w=C;return H[H.length]=v,{chunks:H,total:v}},this.reparametrizeByArcLength=function(V){var M,z,F,L,A,C,w,_,x=[],H=new Q.Vector3,v=this.getLength();x.push(H.copy(this.points[0]).clone());for(M=1;M<this.points.length;M++){C=v.chunks[M]-v.chunks[M-1],w=Math.ceil(V*C/v.total),L=(M-1)/(this.points.length-1),A=M/(this.points.length-1);for(z=1;z<w-1;z++)F=L+z*(1/w)*(A-L),_=this.getPoint(F),x.push(H.copy(_).clone());x.push(H.copy(this.points[M]).clone())}this.points=x};function q(V,M,z,F,L,A,C){var w=(z-V)*0.5,_=(F-M)*0.5;return(2*(M-z)+w+_)*C+(-3*(M-z)-2*w-_)*A+w*L+M}};Q.Triangle=function(J,$,Z){this.a=J!==void 0?J:new Q.Vector3,this.b=$!==void 0?$:new Q.Vector3,this.c=Z!==void 0?Z:new Q.Vector3};Q.Triangle.normal=function(){var J=new Q.Vector3;return function($,Z,K,Y){var X=Y||new Q.Vector3;X.subVectors(K,Z),J.subVectors($,Z),X.cross(J);var G=X.lengthSq();if(G>0)return X.multiplyScalar(1/Math.sqrt(G));return X.set(0,0,0)}}();Q.Triangle.barycoordFromPoint=function(){var J=new Q.Vector3,$=new Q.Vector3,Z=new Q.Vector3;return function(K,Y,X,G,W){J.subVectors(G,Y),$.subVectors(X,Y),Z.subVectors(K,Y);var U=J.dot(J),D=J.dot($),N=J.dot(Z),B=$.dot($),q=$.dot(Z),V=U*B-D*D,M=W||new Q.Vector3;if(V===0)return M.set(-2,-1,-1);var z=1/V,F=(B*N-D*q)*z,L=(U*q-D*N)*z;return M.set(1-F-L,L,F)}}();Q.Triangle.containsPoint=function(){var J=new Q.Vector3;return function($,Z,K,Y){var X=Q.Triangle.barycoordFromPoint($,Z,K,Y,J);return X.x>=0&&X.y>=0&&X.x+X.y<=1}}();Q.Triangle.prototype={constructor:Q.Triangle,set:function(J,$,Z){return this.a.copy(J),this.b.copy($),this.c.copy(Z),this},setFromPointsAndIndices:function(J,$,Z,K){return this.a.copy(J[$]),this.b.copy(J[Z]),this.c.copy(J[K]),this},clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.a.copy(J.a),this.b.copy(J.b),this.c.copy(J.c),this},area:function(){var J=new Q.Vector3,$=new Q.Vector3;return function(){return J.subVectors(this.c,this.b),$.subVectors(this.a,this.b),J.cross($).length()*0.5}}(),midpoint:function(J){var $=J||new Q.Vector3;return $.addVectors(this.a,this.b).add(this.c).multiplyScalar(0.3333333333333333)},normal:function(J){return Q.Triangle.normal(this.a,this.b,this.c,J)},plane:function(J){var $=J||new Q.Plane;return $.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(J,$){return Q.Triangle.barycoordFromPoint(J,this.a,this.b,this.c,$)},containsPoint:function(J){return Q.Triangle.containsPoint(J,this.a,this.b,this.c)},closestPointToPoint:function(){var J,$,Z,K;return function Y(X,G){if(J===void 0)J=new Q.Plane,$=[new Q.Line3,new Q.Line3,new Q.Line3],Z=new Q.Vector3,K=new Q.Vector3;var W=G||new Q.Vector3,U=1/0;if(J.setFromCoplanarPoints(this.a,this.b,this.c),J.projectPoint(X,Z),this.containsPoint(Z)===!0)W.copy(Z);else{$[0].set(this.a,this.b),$[1].set(this.b,this.c),$[2].set(this.c,this.a);for(var D=0;D<$.length;D++){$[D].closestPointToPoint(Z,!0,K);var N=Z.distanceToSquared(K);if(N<U)U=N,W.copy(K)}}return W}}(),equals:function(J){return J.a.equals(this.a)&&J.b.equals(this.b)&&J.c.equals(this.c)}};Q.Interpolant=function(J,$,Z,K){this.parameterPositions=J,this._cachedIndex=0,this.resultBuffer=K!==void 0?K:new $.constructor(Z),this.sampleValues=$,this.valueSize=Z};Q.Interpolant.prototype={constructor:Q.Interpolant,evaluate:function(J){var $=this.parameterPositions,Z=this._cachedIndex,K=$[Z],Y=$[Z-1];J:{$:{var X;Q:{Z:if(!(J<K)){for(var G=Z+2;;){if(K===void 0){if(J<Y)break Z;return Z=$.length,this._cachedIndex=Z,this.afterEnd_(Z-1,J,Y)}if(Z===G)break;if(Y=K,K=$[++Z],J<K)break $}X=$.length;break Q}if(!(J>=Y)){var W=$[1];if(J<W)Z=2,Y=W;for(var G=Z-2;;){if(Y===void 0)return this._cachedIndex=0,this.beforeStart_(0,J,K);if(Z===G)break;if(K=Y,Y=$[--Z-1],J>=Y)break $}X=Z,Z=0;break Q}break J}while(Z<X){var U=Z+X>>>1;if(J<$[U])X=U;else Z=U+1}if(K=$[Z],Y=$[Z-1],Y===void 0)return this._cachedIndex=0,this.beforeStart_(0,J,K);if(K===void 0)return Z=$.length,this._cachedIndex=Z,this.afterEnd_(Z-1,Y,J)}this._cachedIndex=Z,this.intervalChanged_(Z,Y,K)}return this.interpolate_(Z,Y,J,K)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(J){var $=this.resultBuffer,Z=this.sampleValues,K=this.valueSize,Y=J*K;for(var X=0;X!==K;++X)$[X]=Z[Y+X];return $},interpolate_:function(J,$,Z,K){throw new Error("call to abstract method")},intervalChanged_:function(J,$,Z){}};Object.assign(Q.Interpolant.prototype,{beforeStart_:Q.Interpolant.prototype.copySampleValue_,afterEnd_:Q.Interpolant.prototype.copySampleValue_});Q.CubicInterpolant=function(J,$,Z,K){Q.Interpolant.call(this,J,$,Z,K),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0};Q.CubicInterpolant.prototype=Object.assign(Object.create(Q.Interpolant.prototype),{constructor:Q.CubicInterpolant,DefaultSettings_:{endingStart:Q.ZeroCurvatureEnding,endingEnd:Q.ZeroCurvatureEnding},intervalChanged_:function(J,$,Z){var K=this.parameterPositions,Y=J-2,X=J+1,G=K[Y],W=K[X];if(G===void 0)switch(this.getSettings_().endingStart){case Q.ZeroSlopeEnding:Y=J,G=2*$-Z;break;case Q.WrapAroundEnding:Y=K.length-2,G=$+K[Y]-K[Y+1];break;default:Y=J,G=Z}if(W===void 0)switch(this.getSettings_().endingEnd){case Q.ZeroSlopeEnding:X=J,W=2*Z-$;break;case Q.WrapAroundEnding:X=1,W=Z+K[1]-K[0];break;default:X=J-1,W=$}var U=(Z-$)*0.5,D=this.valueSize;this._weightPrev=U/($-G),this._weightNext=U/(W-Z),this._offsetPrev=Y*D,this._offsetNext=X*D},interpolate_:function(J,$,Z,K){var Y=this.resultBuffer,X=this.sampleValues,G=this.valueSize,W=J*G,U=W-G,D=this._offsetPrev,N=this._offsetNext,B=this._weightPrev,q=this._weightNext,V=(Z-$)/(K-$),M=V*V,z=M*V,F=-B*z+2*B*M-B*V,L=(1+B)*z+(-1.5-2*B)*M+(-0.5+B)*V+1,A=(-1-q)*z+(1.5+q)*M+0.5*V,C=q*z-q*M;for(var w=0;w!==G;++w)Y[w]=F*X[D+w]+L*X[U+w]+A*X[W+w]+C*X[N+w];return Y}});Q.DiscreteInterpolant=function(J,$,Z,K){Q.Interpolant.call(this,J,$,Z,K)};Q.DiscreteInterpolant.prototype=Object.assign(Object.create(Q.Interpolant.prototype),{constructor:Q.DiscreteInterpolant,interpolate_:function(J,$,Z,K){return this.copySampleValue_(J-1)}});Q.LinearInterpolant=function(J,$,Z,K){Q.Interpolant.call(this,J,$,Z,K)};Q.LinearInterpolant.prototype=Object.assign(Object.create(Q.Interpolant.prototype),{constructor:Q.LinearInterpolant,interpolate_:function(J,$,Z,K){var Y=this.resultBuffer,X=this.sampleValues,G=this.valueSize,W=J*G,U=W-G,D=(Z-$)/(K-$),N=1-D;for(var B=0;B!==G;++B)Y[B]=X[U+B]*N+X[W+B]*D;return Y}});Q.QuaternionLinearInterpolant=function(J,$,Z,K){Q.Interpolant.call(this,J,$,Z,K)};Q.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(Q.Interpolant.prototype),{constructor:Q.QuaternionLinearInterpolant,interpolate_:function(J,$,Z,K){var Y=this.resultBuffer,X=this.sampleValues,G=this.valueSize,W=J*G,U=(Z-$)/(K-$);for(var D=W+G;W!==D;W+=4)Q.Quaternion.slerpFlat(Y,0,X,W-G,X,W,U);return Y}});Q.Clock=function(J){this.autoStart=J!==void 0?J:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1};Q.Clock.prototype={constructor:Q.Clock,start:function(){this.startTime=(performance||Date).now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var J=0;if(this.autoStart&&!this.running)this.start();if(this.running){var $=(performance||Date).now();J=($-this.oldTime)/1000,this.oldTime=$,this.elapsedTime+=J}return J}};Q.EventDispatcher=function(){};Object.assign(Q.EventDispatcher.prototype,{addEventListener:function(J,$){if(this._listeners===void 0)this._listeners={};var Z=this._listeners;if(Z[J]===void 0)Z[J]=[];if(Z[J].indexOf($)===-1)Z[J].push($)},hasEventListener:function(J,$){if(this._listeners===void 0)return!1;var Z=this._listeners;if(Z[J]!==void 0&&Z[J].indexOf($)!==-1)return!0;return!1},removeEventListener:function(J,$){if(this._listeners===void 0)return;var Z=this._listeners,K=Z[J];if(K!==void 0){var Y=K.indexOf($);if(Y!==-1)K.splice(Y,1)}},dispatchEvent:function(J){if(this._listeners===void 0)return;var $=this._listeners,Z=$[J.type];if(Z!==void 0){J.target=this;var K=[],Y=0,X=Z.length;for(Y=0;Y<X;Y++)K[Y]=Z[Y];for(Y=0;Y<X;Y++)K[Y].call(this,J)}}});Q.Layers=function(){this.mask=1};Q.Layers.prototype={constructor:Q.Layers,set:function(J){this.mask=1<<J},enable:function(J){this.mask|=1<<J},toggle:function(J){this.mask^=1<<J},disable:function(J){this.mask&=~(1<<J)},test:function(J){return(this.mask&J.mask)!==0}};(function(J){J.Raycaster=function(K,Y,X,G){this.ray=new J.Ray(K,Y),this.near=X||0,this.far=G||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})};function $(K,Y){return K.distance-Y.distance}function Z(K,Y,X,G){if(K.visible===!1)return;if(K.raycast(Y,X),G===!0){var W=K.children;for(var U=0,D=W.length;U<D;U++)Z(W[U],Y,X,!0)}}J.Raycaster.prototype={constructor:J.Raycaster,linePrecision:1,set:function(K,Y){this.ray.set(K,Y)},setFromCamera:function(K,Y){if(Y instanceof J.PerspectiveCamera)this.ray.origin.setFromMatrixPosition(Y.matrixWorld),this.ray.direction.set(K.x,K.y,0.5).unproject(Y).sub(this.ray.origin).normalize();else if(Y instanceof J.OrthographicCamera)this.ray.origin.set(K.x,K.y,-1).unproject(Y),this.ray.direction.set(0,0,-1).transformDirection(Y.matrixWorld);else console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(K,Y){var X=[];return Z(K,this,X,Y),X.sort($),X},intersectObjects:function(K,Y){var X=[];if(Array.isArray(K)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),X;for(var G=0,W=K.length;G<W;G++)Z(K[G],this,X,Y);return X.sort($),X}}})(Q);Q.Object3D=function(){Object.defineProperty(this,"id",{value:Q.Object3DIdCount++}),this.uuid=Q.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Q.Object3D.DefaultUp.clone();var J=new Q.Vector3,$=new Q.Euler,Z=new Q.Quaternion,K=new Q.Vector3(1,1,1);function Y(){Z.setFromEuler($,!1)}function X(){$.setFromQuaternion(Z,void 0,!1)}$.onChange(Y),Z.onChange(X),Object.defineProperties(this,{position:{enumerable:!0,value:J},rotation:{enumerable:!0,value:$},quaternion:{enumerable:!0,value:Z},scale:{enumerable:!0,value:K},modelViewMatrix:{value:new Q.Matrix4},normalMatrix:{value:new Q.Matrix3}}),this.matrix=new Q.Matrix4,this.matrixWorld=new Q.Matrix4,this.matrixAutoUpdate=Q.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Q.Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}};Q.Object3D.DefaultUp=new Q.Vector3(0,1,0);Q.Object3D.DefaultMatrixAutoUpdate=!0;Object.assign(Q.Object3D.prototype,Q.EventDispatcher.prototype,{applyMatrix:function(J){this.matrix.multiplyMatrices(J,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(J,$){this.quaternion.setFromAxisAngle(J,$)},setRotationFromEuler:function(J){this.quaternion.setFromEuler(J,!0)},setRotationFromMatrix:function(J){this.quaternion.setFromRotationMatrix(J)},setRotationFromQuaternion:function(J){this.quaternion.copy(J)},rotateOnAxis:function(){var J=new Q.Quaternion;return function($,Z){return J.setFromAxisAngle($,Z),this.quaternion.multiply(J),this}}(),rotateX:function(){var J=new Q.Vector3(1,0,0);return function($){return this.rotateOnAxis(J,$)}}(),rotateY:function(){var J=new Q.Vector3(0,1,0);return function($){return this.rotateOnAxis(J,$)}}(),rotateZ:function(){var J=new Q.Vector3(0,0,1);return function($){return this.rotateOnAxis(J,$)}}(),translateOnAxis:function(){var J=new Q.Vector3;return function($,Z){return J.copy($).applyQuaternion(this.quaternion),this.position.add(J.multiplyScalar(Z)),this}}(),translateX:function(){var J=new Q.Vector3(1,0,0);return function($){return this.translateOnAxis(J,$)}}(),translateY:function(){var J=new Q.Vector3(0,1,0);return function($){return this.translateOnAxis(J,$)}}(),translateZ:function(){var J=new Q.Vector3(0,0,1);return function($){return this.translateOnAxis(J,$)}}(),localToWorld:function(J){return J.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var J=new Q.Matrix4;return function($){return $.applyMatrix4(J.getInverse(this.matrixWorld))}}(),lookAt:function(){var J=new Q.Matrix4;return function($){J.lookAt($,this.position,this.up),this.quaternion.setFromRotationMatrix(J)}}(),add:function(J){if(arguments.length>1){for(var $=0;$<arguments.length;$++)this.add(arguments[$]);return this}if(J===this)return console.error("THREE.Object3D.add: object can't be added as a child of itself.",J),this;if(J instanceof Q.Object3D){if(J.parent!==null)J.parent.remove(J);J.parent=this,J.dispatchEvent({type:"added"}),this.children.push(J)}else console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",J);return this},remove:function(J){if(arguments.length>1)for(var $=0;$<arguments.length;$++)this.remove(arguments[$]);var Z=this.children.indexOf(J);if(Z!==-1)J.parent=null,J.dispatchEvent({type:"removed"}),this.children.splice(Z,1)},getObjectById:function(J){return this.getObjectByProperty("id",J)},getObjectByName:function(J){return this.getObjectByProperty("name",J)},getObjectByProperty:function(J,$){if(this[J]===$)return this;for(var Z=0,K=this.children.length;Z<K;Z++){var Y=this.children[Z],X=Y.getObjectByProperty(J,$);if(X!==void 0)return X}return},getWorldPosition:function(J){var $=J||new Q.Vector3;return this.updateMatrixWorld(!0),$.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var J=new Q.Vector3,$=new Q.Vector3;return function(Z){var K=Z||new Q.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(J,K,$),K}}(),getWorldRotation:function(){var J=new Q.Quaternion;return function($){var Z=$||new Q.Euler;return this.getWorldQuaternion(J),Z.setFromQuaternion(J,this.rotation.order,!1)}}(),getWorldScale:function(){var J=new Q.Vector3,$=new Q.Quaternion;return function(Z){var K=Z||new Q.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(J,$,K),K}}(),getWorldDirection:function(){var J=new Q.Quaternion;return function($){var Z=$||new Q.Vector3;return this.getWorldQuaternion(J),Z.set(0,0,1).applyQuaternion(J)}}(),raycast:function(){},traverse:function(J){J(this);var $=this.children;for(var Z=0,K=$.length;Z<K;Z++)$[Z].traverse(J)},traverseVisible:function(J){if(this.visible===!1)return;J(this);var $=this.children;for(var Z=0,K=$.length;Z<K;Z++)$[Z].traverseVisible(J)},traverseAncestors:function(J){var $=this.parent;if($!==null)J($),$.traverseAncestors(J)},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(J){if(this.matrixAutoUpdate===!0)this.updateMatrix();if(this.matrixWorldNeedsUpdate===!0||J===!0){if(this.parent===null)this.matrixWorld.copy(this.matrix);else this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);this.matrixWorldNeedsUpdate=!1,J=!0}for(var $=0,Z=this.children.length;$<Z;$++)this.children[$].updateMatrixWorld(J)},toJSON:function(J){var $=J===void 0||J==="",Z={};if($)J={geometries:{},materials:{},textures:{},images:{}},Z.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"};var K={};if(K.uuid=this.uuid,K.type=this.type,this.name!=="")K.name=this.name;if(JSON.stringify(this.userData)!=="{}")K.userData=this.userData;if(this.castShadow===!0)K.castShadow=!0;if(this.receiveShadow===!0)K.receiveShadow=!0;if(this.visible===!1)K.visible=!1;if(K.matrix=this.matrix.toArray(),this.geometry!==void 0){if(J.geometries[this.geometry.uuid]===void 0)J.geometries[this.geometry.uuid]=this.geometry.toJSON(J);K.geometry=this.geometry.uuid}if(this.material!==void 0){if(J.materials[this.material.uuid]===void 0)J.materials[this.material.uuid]=this.material.toJSON(J);K.material=this.material.uuid}if(this.children.length>0){K.children=[];for(var Y=0;Y<this.children.length;Y++)K.children.push(this.children[Y].toJSON(J).object)}if($){var X=D(J.geometries),G=D(J.materials),W=D(J.textures),U=D(J.images);if(X.length>0)Z.geometries=X;if(G.length>0)Z.materials=G;if(W.length>0)Z.textures=W;if(U.length>0)Z.images=U}return Z.object=K,Z;function D(N){var B=[];for(var q in N){var V=N[q];delete V.metadata,B.push(V)}return B}},clone:function(J){return new this.constructor().copy(this,J)},copy:function(J,$){if($===void 0)$=!0;if(this.name=J.name,this.up.copy(J.up),this.position.copy(J.position),this.quaternion.copy(J.quaternion),this.scale.copy(J.scale),this.matrix.copy(J.matrix),this.matrixWorld.copy(J.matrixWorld),this.matrixAutoUpdate=J.matrixAutoUpdate,this.matrixWorldNeedsUpdate=J.matrixWorldNeedsUpdate,this.visible=J.visible,this.castShadow=J.castShadow,this.receiveShadow=J.receiveShadow,this.frustumCulled=J.frustumCulled,this.renderOrder=J.renderOrder,this.userData=JSON.parse(JSON.stringify(J.userData)),$===!0)for(var Z=0;Z<J.children.length;Z++){var K=J.children[Z];this.add(K.clone())}return this}});Q.Object3DIdCount=0;Q.Face3=function(J,$,Z,K,Y,X){this.a=J,this.b=$,this.c=Z,this.normal=K instanceof Q.Vector3?K:new Q.Vector3,this.vertexNormals=Array.isArray(K)?K:[],this.color=Y instanceof Q.Color?Y:new Q.Color,this.vertexColors=Array.isArray(Y)?Y:[],this.materialIndex=X!==void 0?X:0};Q.Face3.prototype={constructor:Q.Face3,clone:function(){return new this.constructor().copy(this)},copy:function(J){this.a=J.a,this.b=J.b,this.c=J.c,this.normal.copy(J.normal),this.color.copy(J.color),this.materialIndex=J.materialIndex;for(var $=0,Z=J.vertexNormals.length;$<Z;$++)this.vertexNormals[$]=J.vertexNormals[$].clone();for(var $=0,Z=J.vertexColors.length;$<Z;$++)this.vertexColors[$]=J.vertexColors[$].clone();return this}};Q.BufferAttribute=function(J,$,Z){this.uuid=Q.Math.generateUUID(),this.array=J,this.itemSize=$,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0,this.normalized=Z===!0};Q.BufferAttribute.prototype={constructor:Q.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(J){if(J===!0)this.version++},setDynamic:function(J){return this.dynamic=J,this},copy:function(J){return this.array=new J.array.constructor(J.array),this.itemSize=J.itemSize,this.dynamic=J.dynamic,this},copyAt:function(J,$,Z){J*=this.itemSize,Z*=$.itemSize;for(var K=0,Y=this.itemSize;K<Y;K++)this.array[J+K]=$.array[Z+K];return this},copyArray:function(J){return this.array.set(J),this},copyColorsArray:function(J){var $=this.array,Z=0;for(var K=0,Y=J.length;K<Y;K++){var X=J[K];if(X===void 0)console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",K),X=new Q.Color;$[Z++]=X.r,$[Z++]=X.g,$[Z++]=X.b}return this},copyIndicesArray:function(J){var $=this.array,Z=0;for(var K=0,Y=J.length;K<Y;K++){var X=J[K];$[Z++]=X.a,$[Z++]=X.b,$[Z++]=X.c}return this},copyVector2sArray:function(J){var $=this.array,Z=0;for(var K=0,Y=J.length;K<Y;K++){var X=J[K];if(X===void 0)console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",K),X=new Q.Vector2;$[Z++]=X.x,$[Z++]=X.y}return this},copyVector3sArray:function(J){var $=this.array,Z=0;for(var K=0,Y=J.length;K<Y;K++){var X=J[K];if(X===void 0)console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",K),X=new Q.Vector3;$[Z++]=X.x,$[Z++]=X.y,$[Z++]=X.z}return this},copyVector4sArray:function(J){var $=this.array,Z=0;for(var K=0,Y=J.length;K<Y;K++){var X=J[K];if(X===void 0)console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",K),X=new Q.Vector4;$[Z++]=X.x,$[Z++]=X.y,$[Z++]=X.z,$[Z++]=X.w}return this},set:function(J,$){if($===void 0)$=0;return this.array.set(J,$),this},getX:function(J){return this.array[J*this.itemSize]},setX:function(J,$){return this.array[J*this.itemSize]=$,this},getY:function(J){return this.array[J*this.itemSize+1]},setY:function(J,$){return this.array[J*this.itemSize+1]=$,this},getZ:function(J){return this.array[J*this.itemSize+2]},setZ:function(J,$){return this.array[J*this.itemSize+2]=$,this},getW:function(J){return this.array[J*this.itemSize+3]},setW:function(J,$){return this.array[J*this.itemSize+3]=$,this},setXY:function(J,$,Z){return J*=this.itemSize,this.array[J+0]=$,this.array[J+1]=Z,this},setXYZ:function(J,$,Z,K){return J*=this.itemSize,this.array[J+0]=$,this.array[J+1]=Z,this.array[J+2]=K,this},setXYZW:function(J,$,Z,K,Y){return J*=this.itemSize,this.array[J+0]=$,this.array[J+1]=Z,this.array[J+2]=K,this.array[J+3]=Y,this},clone:function(){return new this.constructor().copy(this)}};Q.Int8Attribute=function(J,$){return new Q.BufferAttribute(new Int8Array(J),$)};Q.Uint8Attribute=function(J,$){return new Q.BufferAttribute(new Uint8Array(J),$)};Q.Uint8ClampedAttribute=function(J,$){return new Q.BufferAttribute(new Uint8ClampedArray(J),$)};Q.Int16Attribute=function(J,$){return new Q.BufferAttribute(new Int16Array(J),$)};Q.Uint16Attribute=function(J,$){return new Q.BufferAttribute(new Uint16Array(J),$)};Q.Int32Attribute=function(J,$){return new Q.BufferAttribute(new Int32Array(J),$)};Q.Uint32Attribute=function(J,$){return new Q.BufferAttribute(new Uint32Array(J),$)};Q.Float32Attribute=function(J,$){return new Q.BufferAttribute(new Float32Array(J),$)};Q.Float64Attribute=function(J,$){return new Q.BufferAttribute(new Float64Array(J),$)};Q.DynamicBufferAttribute=function(J,$){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new Q.BufferAttribute(J,$).setDynamic(!0)};Q.InstancedBufferAttribute=function(J,$,Z){Q.BufferAttribute.call(this,J,$),this.meshPerAttribute=Z||1};Q.InstancedBufferAttribute.prototype=Object.create(Q.BufferAttribute.prototype);Q.InstancedBufferAttribute.prototype.constructor=Q.InstancedBufferAttribute;Q.InstancedBufferAttribute.prototype.copy=function(J){return Q.BufferAttribute.prototype.copy.call(this,J),this.meshPerAttribute=J.meshPerAttribute,this};Q.InterleavedBuffer=function(J,$){this.uuid=Q.Math.generateUUID(),this.array=J,this.stride=$,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0};Q.InterleavedBuffer.prototype={constructor:Q.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(J){if(J===!0)this.version++},setDynamic:function(J){return this.dynamic=J,this},copy:function(J){return this.array=new J.array.constructor(J.array),this.stride=J.stride,this.dynamic=J.dynamic,this},copyAt:function(J,$,Z){J*=this.stride,Z*=$.stride;for(var K=0,Y=this.stride;K<Y;K++)this.array[J+K]=$.array[Z+K];return this},set:function(J,$){if($===void 0)$=0;return this.array.set(J,$),this},clone:function(){return new this.constructor().copy(this)}};Q.InstancedInterleavedBuffer=function(J,$,Z){Q.InterleavedBuffer.call(this,J,$),this.meshPerAttribute=Z||1};Q.InstancedInterleavedBuffer.prototype=Object.create(Q.InterleavedBuffer.prototype);Q.InstancedInterleavedBuffer.prototype.constructor=Q.InstancedInterleavedBuffer;Q.InstancedInterleavedBuffer.prototype.copy=function(J){return Q.InterleavedBuffer.prototype.copy.call(this,J),this.meshPerAttribute=J.meshPerAttribute,this};Q.InterleavedBufferAttribute=function(J,$,Z){this.uuid=Q.Math.generateUUID(),this.data=J,this.itemSize=$,this.offset=Z};Q.InterleavedBufferAttribute.prototype={constructor:Q.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.count},setX:function(J,$){return this.data.array[J*this.data.stride+this.offset]=$,this},setY:function(J,$){return this.data.array[J*this.data.stride+this.offset+1]=$,this},setZ:function(J,$){return this.data.array[J*this.data.stride+this.offset+2]=$,this},setW:function(J,$){return this.data.array[J*this.data.stride+this.offset+3]=$,this},getX:function(J){return this.data.array[J*this.data.stride+this.offset]},getY:function(J){return this.data.array[J*this.data.stride+this.offset+1]},getZ:function(J){return this.data.array[J*this.data.stride+this.offset+2]},getW:function(J){return this.data.array[J*this.data.stride+this.offset+3]},setXY:function(J,$,Z){return J=J*this.data.stride+this.offset,this.data.array[J+0]=$,this.data.array[J+1]=Z,this},setXYZ:function(J,$,Z,K){return J=J*this.data.stride+this.offset,this.data.array[J+0]=$,this.data.array[J+1]=Z,this.data.array[J+2]=K,this},setXYZW:function(J,$,Z,K,Y){return J=J*this.data.stride+this.offset,this.data.array[J+0]=$,this.data.array[J+1]=Z,this.data.array[J+2]=K,this.data.array[J+3]=Y,this}};Q.Geometry=function(){Object.defineProperty(this,"id",{value:Q.GeometryIdCount++}),this.uuid=Q.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1};Object.assign(Q.Geometry.prototype,Q.EventDispatcher.prototype,{applyMatrix:function(J){var $=new Q.Matrix3().getNormalMatrix(J);for(var Z=0,K=this.vertices.length;Z<K;Z++){var Y=this.vertices[Z];Y.applyMatrix4(J)}for(var Z=0,K=this.faces.length;Z<K;Z++){var X=this.faces[Z];X.normal.applyMatrix3($).normalize();for(var G=0,W=X.vertexNormals.length;G<W;G++)X.vertexNormals[G].applyMatrix3($).normalize()}if(this.boundingBox!==null)this.computeBoundingBox();if(this.boundingSphere!==null)this.computeBoundingSphere();return this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.makeRotationX(Z),this.applyMatrix(J),this}}(),rotateY:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.makeRotationY(Z),this.applyMatrix(J),this}}(),rotateZ:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.makeRotationZ(Z),this.applyMatrix(J),this}}(),translate:function(){var J;return function $(Z,K,Y){if(J===void 0)J=new Q.Matrix4;return J.makeTranslation(Z,K,Y),this.applyMatrix(J),this}}(),scale:function(){var J;return function $(Z,K,Y){if(J===void 0)J=new Q.Matrix4;return J.makeScale(Z,K,Y),this.applyMatrix(J),this}}(),lookAt:function(){var J;return function $(Z){if(J===void 0)J=new Q.Object3D;J.lookAt(Z),J.updateMatrix(),this.applyMatrix(J.matrix)}}(),fromBufferGeometry:function(J){var $=this,Z=J.index!==null?J.index.array:void 0,K=J.attributes,Y=K.position.array,X=K.normal!==void 0?K.normal.array:void 0,G=K.color!==void 0?K.color.array:void 0,W=K.uv!==void 0?K.uv.array:void 0,U=K.uv2!==void 0?K.uv2.array:void 0;if(U!==void 0)this.faceVertexUvs[1]=[];var D=[],N=[],B=[];for(var q=0,V=0;q<Y.length;q+=3,V+=2){if($.vertices.push(new Q.Vector3(Y[q],Y[q+1],Y[q+2])),X!==void 0)D.push(new Q.Vector3(X[q],X[q+1],X[q+2]));if(G!==void 0)$.colors.push(new Q.Color(G[q],G[q+1],G[q+2]));if(W!==void 0)N.push(new Q.Vector2(W[V],W[V+1]));if(U!==void 0)B.push(new Q.Vector2(U[V],U[V+1]))}function M(w,_,x,H){var v=X!==void 0?[D[w].clone(),D[_].clone(),D[x].clone()]:[],b=G!==void 0?[$.colors[w].clone(),$.colors[_].clone(),$.colors[x].clone()]:[],R=new Q.Face3(w,_,x,v,b,H);if($.faces.push(R),W!==void 0)$.faceVertexUvs[0].push([N[w].clone(),N[_].clone(),N[x].clone()]);if(U!==void 0)$.faceVertexUvs[1].push([B[w].clone(),B[_].clone(),B[x].clone()])}if(Z!==void 0){var z=J.groups;if(z.length>0)for(var q=0;q<z.length;q++){var F=z[q],L=F.start,A=F.count;for(var V=L,C=L+A;V<C;V+=3)M(Z[V],Z[V+1],Z[V+2],F.materialIndex)}else for(var q=0;q<Z.length;q+=3)M(Z[q],Z[q+1],Z[q+2])}else for(var q=0;q<Y.length/3;q+=3)M(q,q+1,q+2);if(this.computeFaceNormals(),J.boundingBox!==null)this.boundingBox=J.boundingBox.clone();if(J.boundingSphere!==null)this.boundingSphere=J.boundingSphere.clone();return this},center:function(){this.computeBoundingBox();var J=this.boundingBox.center().negate();return this.translate(J.x,J.y,J.z),J},normalize:function(){this.computeBoundingSphere();var J=this.boundingSphere.center,$=this.boundingSphere.radius,Z=$===0?1:1/$,K=new Q.Matrix4;return K.set(Z,0,0,-Z*J.x,0,Z,0,-Z*J.y,0,0,Z,-Z*J.z,0,0,0,1),this.applyMatrix(K),this},computeFaceNormals:function(){var J=new Q.Vector3,$=new Q.Vector3;for(var Z=0,K=this.faces.length;Z<K;Z++){var Y=this.faces[Z],X=this.vertices[Y.a],G=this.vertices[Y.b],W=this.vertices[Y.c];J.subVectors(W,G),$.subVectors(X,G),J.cross($),J.normalize(),Y.normal.copy(J)}},computeVertexNormals:function(J){if(J===void 0)J=!0;var $,Z,K,Y,X,G;G=new Array(this.vertices.length);for($=0,Z=this.vertices.length;$<Z;$++)G[$]=new Q.Vector3;if(J){var W,U,D,N=new Q.Vector3,B=new Q.Vector3;for(K=0,Y=this.faces.length;K<Y;K++)X=this.faces[K],W=this.vertices[X.a],U=this.vertices[X.b],D=this.vertices[X.c],N.subVectors(D,U),B.subVectors(W,U),N.cross(B),G[X.a].add(N),G[X.b].add(N),G[X.c].add(N)}else for(K=0,Y=this.faces.length;K<Y;K++)X=this.faces[K],G[X.a].add(X.normal),G[X.b].add(X.normal),G[X.c].add(X.normal);for($=0,Z=this.vertices.length;$<Z;$++)G[$].normalize();for(K=0,Y=this.faces.length;K<Y;K++){X=this.faces[K];var q=X.vertexNormals;if(q.length===3)q[0].copy(G[X.a]),q[1].copy(G[X.b]),q[2].copy(G[X.c]);else q[0]=G[X.a].clone(),q[1]=G[X.b].clone(),q[2]=G[X.c].clone()}if(this.faces.length>0)this.normalsNeedUpdate=!0},computeMorphNormals:function(){var J,$,Z,K,Y;for(Z=0,K=this.faces.length;Z<K;Z++){if(Y=this.faces[Z],!Y.__originalFaceNormal)Y.__originalFaceNormal=Y.normal.clone();else Y.__originalFaceNormal.copy(Y.normal);if(!Y.__originalVertexNormals)Y.__originalVertexNormals=[];for(J=0,$=Y.vertexNormals.length;J<$;J++)if(!Y.__originalVertexNormals[J])Y.__originalVertexNormals[J]=Y.vertexNormals[J].clone();else Y.__originalVertexNormals[J].copy(Y.vertexNormals[J])}var X=new Q.Geometry;X.faces=this.faces;for(J=0,$=this.morphTargets.length;J<$;J++){if(!this.morphNormals[J]){this.morphNormals[J]={},this.morphNormals[J].faceNormals=[],this.morphNormals[J].vertexNormals=[];var G=this.morphNormals[J].faceNormals,W=this.morphNormals[J].vertexNormals,D,N;for(Z=0,K=this.faces.length;Z<K;Z++)D=new Q.Vector3,N={a:new Q.Vector3,b:new Q.Vector3,c:new Q.Vector3},G.push(D),W.push(N)}var U=this.morphNormals[J];X.vertices=this.morphTargets[J].vertices,X.computeFaceNormals(),X.computeVertexNormals();var D,N;for(Z=0,K=this.faces.length;Z<K;Z++)Y=this.faces[Z],D=U.faceNormals[Z],N=U.vertexNormals[Z],D.copy(Y.normal),N.a.copy(Y.vertexNormals[0]),N.b.copy(Y.vertexNormals[1]),N.c.copy(Y.vertexNormals[2])}for(Z=0,K=this.faces.length;Z<K;Z++)Y=this.faces[Z],Y.normal=Y.__originalFaceNormal,Y.vertexNormals=Y.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){var J=0,$=this.vertices;for(var Z=0,K=$.length;Z<K;Z++){if(Z>0)J+=$[Z].distanceTo($[Z-1]);this.lineDistances[Z]=J}},computeBoundingBox:function(){if(this.boundingBox===null)this.boundingBox=new Q.Box3;this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){if(this.boundingSphere===null)this.boundingSphere=new Q.Sphere;this.boundingSphere.setFromPoints(this.vertices)},merge:function(J,$,Z){if(J instanceof Q.Geometry===!1){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",J);return}var K,Y=this.vertices.length,X=this.vertices,G=J.vertices,W=this.faces,U=J.faces,D=this.faceVertexUvs[0],N=J.faceVertexUvs[0];if(Z===void 0)Z=0;if($!==void 0)K=new Q.Matrix3().getNormalMatrix($);for(var B=0,q=G.length;B<q;B++){var V=G[B],M=V.clone();if($!==void 0)M.applyMatrix4($);X.push(M)}for(B=0,q=U.length;B<q;B++){var z=U[B],F,L,A,C=z.vertexNormals,w=z.vertexColors;if(F=new Q.Face3(z.a+Y,z.b+Y,z.c+Y),F.normal.copy(z.normal),K!==void 0)F.normal.applyMatrix3(K).normalize();for(var _=0,x=C.length;_<x;_++){if(L=C[_].clone(),K!==void 0)L.applyMatrix3(K).normalize();F.vertexNormals.push(L)}F.color.copy(z.color);for(var _=0,x=w.length;_<x;_++)A=w[_],F.vertexColors.push(A.clone());F.materialIndex=z.materialIndex+Z,W.push(F)}for(B=0,q=N.length;B<q;B++){var H=N[B],v=[];if(H===void 0)continue;for(var _=0,x=H.length;_<x;_++)v.push(H[_].clone());D.push(v)}},mergeMesh:function(J){if(J instanceof Q.Mesh===!1){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",J);return}J.matrixAutoUpdate&&J.updateMatrix(),this.merge(J.geometry,J.matrix)},mergeVertices:function(){var J={},$=[],Z=[],K,Y,X=4,G=Math.pow(10,X),W,U,D,N,B,q;for(W=0,U=this.vertices.length;W<U;W++)if(K=this.vertices[W],Y=Math.round(K.x*G)+"_"+Math.round(K.y*G)+"_"+Math.round(K.z*G),J[Y]===void 0)J[Y]=W,$.push(this.vertices[W]),Z[W]=$.length-1;else Z[W]=Z[J[Y]];var V=[];for(W=0,U=this.faces.length;W<U;W++){D=this.faces[W],D.a=Z[D.a],D.b=Z[D.b],D.c=Z[D.c],N=[D.a,D.b,D.c];var M=-1;for(var z=0;z<3;z++)if(N[z]===N[(z+1)%3]){M=z,V.push(W);break}}for(W=V.length-1;W>=0;W--){var F=V[W];this.faces.splice(F,1);for(B=0,q=this.faceVertexUvs.length;B<q;B++)this.faceVertexUvs[B].splice(F,1)}var L=this.vertices.length-$.length;return this.vertices=$,L},sortFacesByMaterialIndex:function(){var J=this.faces,$=J.length;for(var Z=0;Z<$;Z++)J[Z]._id=Z;function K(D,N){return D.materialIndex-N.materialIndex}J.sort(K);var Y=this.faceVertexUvs[0],X=this.faceVertexUvs[1],G,W;if(Y&&Y.length===$)G=[];if(X&&X.length===$)W=[];for(var Z=0;Z<$;Z++){var U=J[Z]._id;if(G)G.push(Y[U]);if(W)W.push(X[U])}if(G)this.faceVertexUvs[0]=G;if(W)this.faceVertexUvs[1]=W},toJSON:function(){var J={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(J.uuid=this.uuid,J.type=this.type,this.name!=="")J.name=this.name;if(this.parameters!==void 0){var $=this.parameters;for(var Z in $)if($[Z]!==void 0)J[Z]=$[Z];return J}var K=[];for(var Y=0;Y<this.vertices.length;Y++){var X=this.vertices[Y];K.push(X.x,X.y,X.z)}var G=[],W=[],U={},D=[],N={},B=[],q={};for(var Y=0;Y<this.faces.length;Y++){var V=this.faces[Y],M=!0,z=!1,F=this.faceVertexUvs[0][Y]!==void 0,L=V.normal.length()>0,A=V.vertexNormals.length>0,C=V.color.r!==1||V.color.g!==1||V.color.b!==1,w=V.vertexColors.length>0,_=0;if(_=b(_,0,0),_=b(_,1,M),_=b(_,2,z),_=b(_,3,F),_=b(_,4,L),_=b(_,5,A),_=b(_,6,C),_=b(_,7,w),G.push(_),G.push(V.a,V.b,V.c),G.push(V.materialIndex),F){var x=this.faceVertexUvs[0][Y];G.push(E(x[0]),E(x[1]),E(x[2]))}if(L)G.push(R(V.normal));if(A){var H=V.vertexNormals;G.push(R(H[0]),R(H[1]),R(H[2]))}if(C)G.push(u(V.color));if(w){var v=V.vertexColors;G.push(u(v[0]),u(v[1]),u(v[2]))}}function b(h,c,S){return S?h|1<<c:h&~(1<<c)}function R(h){var c=h.x.toString()+h.y.toString()+h.z.toString();if(U[c]!==void 0)return U[c];return U[c]=W.length/3,W.push(h.x,h.y,h.z),U[c]}function u(h){var c=h.r.toString()+h.g.toString()+h.b.toString();if(N[c]!==void 0)return N[c];return N[c]=D.length,D.push(h.getHex()),N[c]}function E(h){var c=h.x.toString()+h.y.toString();if(q[c]!==void 0)return q[c];return q[c]=B.length/2,B.push(h.x,h.y),q[c]}if(J.data={},J.data.vertices=K,J.data.normals=W,D.length>0)J.data.colors=D;if(B.length>0)J.data.uvs=[B];return J.data.faces=G,J},clone:function(){return new Q.Geometry().copy(this)},copy:function(J){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];var $=J.vertices;for(var Z=0,K=$.length;Z<K;Z++)this.vertices.push($[Z].clone());var Y=J.faces;for(var Z=0,K=Y.length;Z<K;Z++)this.faces.push(Y[Z].clone());for(var Z=0,K=J.faceVertexUvs.length;Z<K;Z++){var X=J.faceVertexUvs[Z];if(this.faceVertexUvs[Z]===void 0)this.faceVertexUvs[Z]=[];for(var G=0,W=X.length;G<W;G++){var U=X[G],D=[];for(var N=0,B=U.length;N<B;N++){var q=U[N];D.push(q.clone())}this.faceVertexUvs[Z].push(D)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Q.GeometryIdCount=0;Q.DirectGeometry=function(){Object.defineProperty(this,"id",{value:Q.GeometryIdCount++}),this.uuid=Q.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1};Object.assign(Q.DirectGeometry.prototype,Q.EventDispatcher.prototype,{computeBoundingBox:Q.Geometry.prototype.computeBoundingBox,computeBoundingSphere:Q.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(J){var $,Z=[],K,Y=J.faces;for(var X=0;X<Y.length;X++){var G=Y[X];if(G.materialIndex!==K){if(K=G.materialIndex,$!==void 0)$.count=X*3-$.start,Z.push($);$={start:X*3,materialIndex:K}}}if($!==void 0)$.count=X*3-$.start,Z.push($);this.groups=Z},fromGeometry:function(J){var{faces:$,vertices:Z,faceVertexUvs:K}=J,Y=K[0]&&K[0].length>0,X=K[1]&&K[1].length>0,G=J.morphTargets,W=G.length,U;if(W>0){U=[];for(var D=0;D<W;D++)U[D]=[];this.morphTargets.position=U}var N=J.morphNormals,B=N.length,q;if(B>0){q=[];for(var D=0;D<B;D++)q[D]=[];this.morphTargets.normal=q}var{skinIndices:V,skinWeights:M}=J,z=V.length===Z.length,F=M.length===Z.length;for(var D=0;D<$.length;D++){var L=$[D];this.vertices.push(Z[L.a],Z[L.b],Z[L.c]);var A=L.vertexNormals;if(A.length===3)this.normals.push(A[0],A[1],A[2]);else{var C=L.normal;this.normals.push(C,C,C)}var w=L.vertexColors;if(w.length===3)this.colors.push(w[0],w[1],w[2]);else{var _=L.color;this.colors.push(_,_,_)}if(Y===!0){var x=K[0][D];if(x!==void 0)this.uvs.push(x[0],x[1],x[2]);else console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",D),this.uvs.push(new Q.Vector2,new Q.Vector2,new Q.Vector2)}if(X===!0){var x=K[1][D];if(x!==void 0)this.uvs2.push(x[0],x[1],x[2]);else console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",D),this.uvs2.push(new Q.Vector2,new Q.Vector2,new Q.Vector2)}for(var H=0;H<W;H++){var v=G[H].vertices;U[H].push(v[L.a],v[L.b],v[L.c])}for(var H=0;H<B;H++){var b=N[H].vertexNormals[D];q[H].push(b.a,b.b,b.c)}if(z)this.skinIndices.push(V[L.a],V[L.b],V[L.c]);if(F)this.skinWeights.push(M[L.a],M[L.b],M[L.c])}return this.computeGroups(J),this.verticesNeedUpdate=J.verticesNeedUpdate,this.normalsNeedUpdate=J.normalsNeedUpdate,this.colorsNeedUpdate=J.colorsNeedUpdate,this.uvsNeedUpdate=J.uvsNeedUpdate,this.groupsNeedUpdate=J.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Q.BufferGeometry=function(){Object.defineProperty(this,"id",{value:Q.GeometryIdCount++}),this.uuid=Q.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}};Object.assign(Q.BufferGeometry.prototype,Q.EventDispatcher.prototype,{getIndex:function(){return this.index},setIndex:function(J){this.index=J},addAttribute:function(J,$){if($ instanceof Q.BufferAttribute===!1&&$ instanceof Q.InterleavedBufferAttribute===!1){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(J,new Q.BufferAttribute(arguments[1],arguments[2]));return}if(J==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex($);return}return this.attributes[J]=$,this},getAttribute:function(J){return this.attributes[J]},removeAttribute:function(J){return delete this.attributes[J],this},addGroup:function(J,$,Z){this.groups.push({start:J,count:$,materialIndex:Z!==void 0?Z:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(J,$){this.drawRange.start=J,this.drawRange.count=$},applyMatrix:function(J){var $=this.attributes.position;if($!==void 0)J.applyToVector3Array($.array),$.needsUpdate=!0;var Z=this.attributes.normal;if(Z!==void 0){var K=new Q.Matrix3().getNormalMatrix(J);K.applyToVector3Array(Z.array),Z.needsUpdate=!0}if(this.boundingBox!==null)this.computeBoundingBox();if(this.boundingSphere!==null)this.computeBoundingSphere();return this},rotateX:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.makeRotationX(Z),this.applyMatrix(J),this}}(),rotateY:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.makeRotationY(Z),this.applyMatrix(J),this}}(),rotateZ:function(){var J;return function $(Z){if(J===void 0)J=new Q.Matrix4;return J.makeRotationZ(Z),this.applyMatrix(J),this}}(),translate:function(){var J;return function $(Z,K,Y){if(J===void 0)J=new Q.Matrix4;return J.makeTranslation(Z,K,Y),this.applyMatrix(J),this}}(),scale:function(){var J;return function $(Z,K,Y){if(J===void 0)J=new Q.Matrix4;return J.makeScale(Z,K,Y),this.applyMatrix(J),this}}(),lookAt:function(){var J;return function $(Z){if(J===void 0)J=new Q.Object3D;J.lookAt(Z),J.updateMatrix(),this.applyMatrix(J.matrix)}}(),center:function(){this.computeBoundingBox();var J=this.boundingBox.center().negate();return this.translate(J.x,J.y,J.z),J},setFromObject:function(J){var $=J.geometry;if(J instanceof Q.Points||J instanceof Q.Line){var Z=new Q.Float32Attribute($.vertices.length*3,3),K=new Q.Float32Attribute($.colors.length*3,3);if(this.addAttribute("position",Z.copyVector3sArray($.vertices)),this.addAttribute("color",K.copyColorsArray($.colors)),$.lineDistances&&$.lineDistances.length===$.vertices.length){var Y=new Q.Float32Attribute($.lineDistances.length,1);this.addAttribute("lineDistance",Y.copyArray($.lineDistances))}if($.boundingSphere!==null)this.boundingSphere=$.boundingSphere.clone();if($.boundingBox!==null)this.boundingBox=$.boundingBox.clone()}else if(J instanceof Q.Mesh){if($ instanceof Q.Geometry)this.fromGeometry($)}return this},updateFromObject:function(J){var $=J.geometry;if(J instanceof Q.Mesh){var Z=$.__directGeometry;if(Z===void 0)return this.fromGeometry($);Z.verticesNeedUpdate=$.verticesNeedUpdate,Z.normalsNeedUpdate=$.normalsNeedUpdate,Z.colorsNeedUpdate=$.colorsNeedUpdate,Z.uvsNeedUpdate=$.uvsNeedUpdate,Z.groupsNeedUpdate=$.groupsNeedUpdate,$.verticesNeedUpdate=!1,$.normalsNeedUpdate=!1,$.colorsNeedUpdate=!1,$.uvsNeedUpdate=!1,$.groupsNeedUpdate=!1,$=Z}if($.verticesNeedUpdate===!0){var K=this.attributes.position;if(K!==void 0)K.copyVector3sArray($.vertices),K.needsUpdate=!0;$.verticesNeedUpdate=!1}if($.normalsNeedUpdate===!0){var K=this.attributes.normal;if(K!==void 0)K.copyVector3sArray($.normals),K.needsUpdate=!0;$.normalsNeedUpdate=!1}if($.colorsNeedUpdate===!0){var K=this.attributes.color;if(K!==void 0)K.copyColorsArray($.colors),K.needsUpdate=!0;$.colorsNeedUpdate=!1}if($.uvsNeedUpdate){var K=this.attributes.uv;if(K!==void 0)K.copyVector2sArray($.uvs),K.needsUpdate=!0;$.uvsNeedUpdate=!1}if($.lineDistancesNeedUpdate){var K=this.attributes.lineDistance;if(K!==void 0)K.copyArray($.lineDistances),K.needsUpdate=!0;$.lineDistancesNeedUpdate=!1}if($.groupsNeedUpdate)$.computeGroups(J.geometry),this.groups=$.groups,$.groupsNeedUpdate=!1;return this},fromGeometry:function(J){return J.__directGeometry=new Q.DirectGeometry().fromGeometry(J),this.fromDirectGeometry(J.__directGeometry)},fromDirectGeometry:function(J){var $=new Float32Array(J.vertices.length*3);if(this.addAttribute("position",new Q.BufferAttribute($,3).copyVector3sArray(J.vertices)),J.normals.length>0){var Z=new Float32Array(J.normals.length*3);this.addAttribute("normal",new Q.BufferAttribute(Z,3).copyVector3sArray(J.normals))}if(J.colors.length>0){var K=new Float32Array(J.colors.length*3);this.addAttribute("color",new Q.BufferAttribute(K,3).copyColorsArray(J.colors))}if(J.uvs.length>0){var Y=new Float32Array(J.uvs.length*2);this.addAttribute("uv",new Q.BufferAttribute(Y,2).copyVector2sArray(J.uvs))}if(J.uvs2.length>0){var X=new Float32Array(J.uvs2.length*2);this.addAttribute("uv2",new Q.BufferAttribute(X,2).copyVector2sArray(J.uvs2))}if(J.indices.length>0){var G=J.vertices.length>65535?Uint32Array:Uint16Array,W=new G(J.indices.length*3);this.setIndex(new Q.BufferAttribute(W,1).copyIndicesArray(J.indices))}this.groups=J.groups;for(var U in J.morphTargets){var D=[],N=J.morphTargets[U];for(var B=0,q=N.length;B<q;B++){var V=N[B],M=new Q.Float32Attribute(V.length*3,3);D.push(M.copyVector3sArray(V))}this.morphAttributes[U]=D}if(J.skinIndices.length>0){var z=new Q.Float32Attribute(J.skinIndices.length*4,4);this.addAttribute("skinIndex",z.copyVector4sArray(J.skinIndices))}if(J.skinWeights.length>0){var F=new Q.Float32Attribute(J.skinWeights.length*4,4);this.addAttribute("skinWeight",F.copyVector4sArray(J.skinWeights))}if(J.boundingSphere!==null)this.boundingSphere=J.boundingSphere.clone();if(J.boundingBox!==null)this.boundingBox=J.boundingBox.clone();return this},computeBoundingBox:function(){if(this.boundingBox===null)this.boundingBox=new Q.Box3;var J=this.attributes.position.array;if(J!==void 0)this.boundingBox.setFromArray(J);else this.boundingBox.makeEmpty();if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var J=new Q.Box3,$=new Q.Vector3;return function Z(){if(this.boundingSphere===null)this.boundingSphere=new Q.Sphere;var K=this.attributes.position.array;if(K){var Y=this.boundingSphere.center;J.setFromArray(K),J.center(Y);var X=0;for(var G=0,W=K.length;G<W;G+=3)$.fromArray(K,G),X=Math.max(X,Y.distanceToSquared($));if(this.boundingSphere.radius=Math.sqrt(X),isNaN(this.boundingSphere.radius))console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var J=this.index,$=this.attributes,Z=this.groups;if($.position){var K=$.position.array;if($.normal===void 0)this.addAttribute("normal",new Q.BufferAttribute(new Float32Array(K.length),3));else{var Y=$.normal.array;for(var X=0,G=Y.length;X<G;X++)Y[X]=0}var W=$.normal.array,U,D,N,B=new Q.Vector3,q=new Q.Vector3,V=new Q.Vector3,M=new Q.Vector3,z=new Q.Vector3;if(J){var F=J.array;if(Z.length===0)this.addGroup(0,F.length);for(var L=0,A=Z.length;L<A;++L){var C=Z[L],w=C.start,_=C.count;for(var X=w,G=w+_;X<G;X+=3)U=F[X+0]*3,D=F[X+1]*3,N=F[X+2]*3,B.fromArray(K,U),q.fromArray(K,D),V.fromArray(K,N),M.subVectors(V,q),z.subVectors(B,q),M.cross(z),W[U]+=M.x,W[U+1]+=M.y,W[U+2]+=M.z,W[D]+=M.x,W[D+1]+=M.y,W[D+2]+=M.z,W[N]+=M.x,W[N+1]+=M.y,W[N+2]+=M.z}}else for(var X=0,G=K.length;X<G;X+=9)B.fromArray(K,X),q.fromArray(K,X+3),V.fromArray(K,X+6),M.subVectors(V,q),z.subVectors(B,q),M.cross(z),W[X]=M.x,W[X+1]=M.y,W[X+2]=M.z,W[X+3]=M.x,W[X+4]=M.y,W[X+5]=M.z,W[X+6]=M.x,W[X+7]=M.y,W[X+8]=M.z;this.normalizeNormals(),$.normal.needsUpdate=!0}},merge:function(J,$){if(J instanceof Q.BufferGeometry===!1){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",J);return}if($===void 0)$=0;var Z=this.attributes;for(var K in Z){if(J.attributes[K]===void 0)continue;var Y=Z[K],X=Y.array,G=J.attributes[K],W=G.array,U=G.itemSize;for(var D=0,N=U*$;D<W.length;D++,N++)X[N]=W[D]}return this},normalizeNormals:function(){var J=this.attributes.normal.array,$,Z,K,Y;for(var X=0,G=J.length;X<G;X+=3)$=J[X],Z=J[X+1],K=J[X+2],Y=1/Math.sqrt($*$+Z*Z+K*K),J[X]*=Y,J[X+1]*=Y,J[X+2]*=Y},toNonIndexed:function(){if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var J=new Q.BufferGeometry,$=this.index.array,Z=this.attributes;for(var K in Z){var Y=Z[K],X=Y.array,G=Y.itemSize,W=new X.constructor($.length*G),U=0,D=0;for(var N=0,B=$.length;N<B;N++){U=$[N]*G;for(var q=0;q<G;q++)W[D++]=X[U++]}J.addAttribute(K,new Q.BufferAttribute(W,G))}return J},toJSON:function(){var J={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(J.uuid=this.uuid,J.type=this.type,this.name!=="")J.name=this.name;if(this.parameters!==void 0){var $=this.parameters;for(var Z in $)if($[Z]!==void 0)J[Z]=$[Z];return J}J.data={attributes:{}};var K=this.index;if(K!==null){var Y=Array.prototype.slice.call(K.array);J.data.index={type:K.array.constructor.name,array:Y}}var X=this.attributes;for(var Z in X){var G=X[Z],Y=Array.prototype.slice.call(G.array);J.data.attributes[Z]={itemSize:G.itemSize,type:G.array.constructor.name,array:Y,normalized:G.normalized}}var W=this.groups;if(W.length>0)J.data.groups=JSON.parse(JSON.stringify(W));var U=this.boundingSphere;if(U!==null)J.data.boundingSphere={center:U.center.toArray(),radius:U.radius};return J},clone:function(){return new Q.BufferGeometry().copy(this)},copy:function(J){var $=J.index;if($!==null)this.setIndex($.clone());var Z=J.attributes;for(var K in Z){var Y=Z[K];this.addAttribute(K,Y.clone())}var X=J.groups;for(var G=0,W=X.length;G<W;G++){var U=X[G];this.addGroup(U.start,U.count,U.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Q.BufferGeometry.MaxIndex=65535;Q.InstancedBufferGeometry=function(){Q.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0};Q.InstancedBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.InstancedBufferGeometry.prototype.constructor=Q.InstancedBufferGeometry;Q.InstancedBufferGeometry.prototype.addGroup=function(J,$,Z){this.groups.push({start:J,count:$,instances:Z})};Q.InstancedBufferGeometry.prototype.copy=function(J){var $=J.index;if($!==null)this.setIndex($.clone());var Z=J.attributes;for(var K in Z){var Y=Z[K];this.addAttribute(K,Y.clone())}var X=J.groups;for(var G=0,W=X.length;G<W;G++){var U=X[G];this.addGroup(U.start,U.count,U.instances)}return this};Q.Uniform=function(J){if(typeof J==="string")console.warn("THREE.Uniform: Type parameter is no longer needed."),J=arguments[1];this.value=J,this.dynamic=!1};Q.Uniform.prototype={constructor:Q.Uniform,onUpdate:function(J){return this.dynamic=!0,this.onUpdateCallback=J,this}};Q.AnimationAction=function(){throw new Error("THREE.AnimationAction: Use mixer.clipAction for construction.")};Q.AnimationAction._new=function J($,Z,K){this._mixer=$,this._clip=Z,this._localRoot=K||null;var Y=Z.tracks,X=Y.length,G=new Array(X),W={endingStart:Q.ZeroCurvatureEnding,endingEnd:Q.ZeroCurvatureEnding};for(var U=0;U!==X;++U){var D=Y[U].createInterpolant(null);G[U]=D,D.settings=W}this._interpolantSettings=W,this._interpolants=G,this._propertyBindings=new Array(X),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Q.LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0};Q.AnimationAction._new.prototype={constructor:Q.AnimationAction._new,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){var J=this._startTime;return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(J){return this._startTime=J,this},setLoop:function(J,$){return this.loop=J,this.repetitions=$,this},setEffectiveWeight:function(J){return this.weight=J,this._effectiveWeight=this.enabled?J:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(J){return this._scheduleFading(J,0,1)},fadeOut:function(J){return this._scheduleFading(J,1,0)},crossFadeFrom:function(J,$,Z){var K=this._mixer;if(J.fadeOut($),this.fadeIn($),Z){var Y=this._clip.duration,X=J._clip.duration,G=X/Y,W=Y/X;J.warp(1,G,$),this.warp(W,1,$)}return this},crossFadeTo:function(J,$,Z){return J.crossFadeFrom(this,$,Z)},stopFading:function(){var J=this._weightInterpolant;if(J!==null)this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(J);return this},setEffectiveTimeScale:function(J){return this.timeScale=J,this._effectiveTimeScale=this.paused?0:J,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(J){return this.timeScale=this._clip.duration/J,this.stopWarping()},syncWith:function(J){return this.time=J.time,this.timeScale=J.timeScale,this.stopWarping()},halt:function(J){return this.warp(this._effectiveTimeScale,0,J)},warp:function(J,$,Z){var K=this._mixer,Y=K.time,X=this._timeScaleInterpolant,G=this.timeScale;if(X===null)X=K._lendControlInterpolant(),this._timeScaleInterpolant=X;var{parameterPositions:W,sampleValues:U}=X;return W[0]=Y,W[1]=Y+Z,U[0]=J/G,U[1]=$/G,this},stopWarping:function(){var J=this._timeScaleInterpolant;if(J!==null)this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(J);return this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(J,$,Z,K){var Y=this._startTime;if(Y!==null){var X=(J-Y)*Z;if(X<0||Z===0)return;this._startTime=null,$=Z*X}$*=this._updateTimeScale(J);var G=this._updateTime($),W=this._updateWeight(J);if(W>0){var U=this._interpolants,D=this._propertyBindings;for(var N=0,B=U.length;N!==B;++N)U[N].evaluate(G),D[N].accumulate(K,W)}},_updateWeight:function(J){var $=0;if(this.enabled){$=this.weight;var Z=this._weightInterpolant;if(Z!==null){var K=Z.evaluate(J)[0];if($*=K,J>Z.parameterPositions[1]){if(this.stopFading(),K===0)this.enabled=!1}}}return this._effectiveWeight=$,$},_updateTimeScale:function(J){var $=0;if(!this.paused){$=this.timeScale;var Z=this._timeScaleInterpolant;if(Z!==null){var K=Z.evaluate(J)[0];if($*=K,J>Z.parameterPositions[1])if(this.stopWarping(),$===0)this.paused=!0;else this.timeScale=$}}return this._effectiveTimeScale=$,$},_updateTime:function(J){var $=this.time+J;if(J===0)return $;var Z=this._clip.duration,K=this.loop,Y=this._loopCount;if(K===Q.LoopOnce){if(Y===-1)this.loopCount=0,this._setEndings(!0,!0,!1);J:{if($>=Z)$=Z;else if($<0)$=0;else break J;if(this.clampWhenFinished)this.paused=!0;else this.enabled=!1;this._mixer.dispatchEvent({type:"finished",action:this,direction:J<0?-1:1})}}else{var X=K===Q.LoopPingPong;if(Y===-1)if(J>=0)Y=0,this._setEndings(!0,this.repetitions===0,X);else this._setEndings(this.repetitions===0,!0,X);if($>=Z||$<0){var G=Math.floor($/Z);$-=Z*G,Y+=Math.abs(G);var W=this.repetitions-Y;if(W<0){if(this.clampWhenFinished)this.paused=!0;else this.enabled=!1;$=J>0?Z:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:J>0?1:-1})}else{if(W===0){var U=J<0;this._setEndings(U,!U,X)}else this._setEndings(!1,!1,X);this._loopCount=Y,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:G})}}if(X&&(Y&1)===1)return this.time=$,Z-$}return this.time=$,$},_setEndings:function(J,$,Z){var K=this._interpolantSettings;if(Z)K.endingStart=Q.ZeroSlopeEnding,K.endingEnd=Q.ZeroSlopeEnding;else{if(J)K.endingStart=this.zeroSlopeAtStart?Q.ZeroSlopeEnding:Q.ZeroCurvatureEnding;else K.endingStart=Q.WrapAroundEnding;if($)K.endingEnd=this.zeroSlopeAtEnd?Q.ZeroSlopeEnding:Q.ZeroCurvatureEnding;else K.endingEnd=Q.WrapAroundEnding}},_scheduleFading:function(J,$,Z){var K=this._mixer,Y=K.time,X=this._weightInterpolant;if(X===null)X=K._lendControlInterpolant(),this._weightInterpolant=X;var{parameterPositions:G,sampleValues:W}=X;return G[0]=Y,W[0]=$,G[1]=Y+J,W[1]=Z,this}};Q.AnimationClip=function(J,$,Z){if(this.name=J,this.tracks=Z,this.duration=$!==void 0?$:-1,this.uuid=Q.Math.generateUUID(),this.duration<0)this.resetDuration();this.trim(),this.optimize()};Q.AnimationClip.prototype={constructor:Q.AnimationClip,resetDuration:function(){var J=this.tracks,$=0;for(var Z=0,K=J.length;Z!==K;++Z){var Y=this.tracks[Z];$=Math.max($,Y.times[Y.times.length-1])}this.duration=$},trim:function(){for(var J=0;J<this.tracks.length;J++)this.tracks[J].trim(0,this.duration);return this},optimize:function(){for(var J=0;J<this.tracks.length;J++)this.tracks[J].optimize();return this}};Object.assign(Q.AnimationClip,{parse:function(J){var $=[],Z=J.tracks,K=1/(J.fps||1);for(var Y=0,X=Z.length;Y!==X;++Y)$.push(Q.KeyframeTrack.parse(Z[Y]).scale(K));return new Q.AnimationClip(J.name,J.duration,$)},toJSON:function(J){var $=[],Z=J.tracks,K={name:J.name,duration:J.duration,tracks:$};for(var Y=0,X=Z.length;Y!==X;++Y)$.push(Q.KeyframeTrack.toJSON(Z[Y]));return K},CreateFromMorphTargetSequence:function(J,$,Z,K){var Y=$.length,X=[];for(var G=0;G<Y;G++){var W=[],U=[];W.push((G+Y-1)%Y,G,(G+1)%Y),U.push(0,1,0);var D=Q.AnimationUtils.getKeyframeOrder(W);if(W=Q.AnimationUtils.sortedArray(W,1,D),U=Q.AnimationUtils.sortedArray(U,1,D),!K&&W[0]===0)W.push(Y),U.push(U[0]);X.push(new Q.NumberKeyframeTrack(".morphTargetInfluences["+$[G].name+"]",W,U).scale(1/Z))}return new Q.AnimationClip(J,-1,X)},findByName:function(J,$){var Z=J;if(!Array.isArray(J)){var K=J;Z=K.geometry&&K.geometry.animations||K.animations}for(var Y=0;Y<Z.length;Y++)if(Z[Y].name===$)return Z[Y];return null},CreateClipsFromMorphTargetSequences:function(J,$,Z){var K={},Y=/^([\w-]*?)([\d]+)$/;for(var X=0,G=J.length;X<G;X++){var W=J[X],U=W.name.match(Y);if(U&&U.length>1){var D=U[1],N=K[D];if(!N)K[D]=N=[];N.push(W)}}var B=[];for(var D in K)B.push(Q.AnimationClip.CreateFromMorphTargetSequence(D,K[D],$,Z));return B},parseAnimation:function(J,$,Z){if(!J)return console.error("  no animation in JSONLoader data"),null;var K=function(w,_,x,H,v){if(x.length!==0){var b=[],R=[];if(Q.AnimationUtils.flattenJSON(x,b,R,H),b.length!==0)v.push(new w(_,b,R))}},Y=[],X=J.name||"default",G=J.length||-1,W=J.fps||30,U=J.hierarchy||[];for(var D=0;D<U.length;D++){var N=U[D].keys;if(!N||N.length===0)continue;if(N[0].morphTargets){var B={};for(var q=0;q<N.length;q++)if(N[q].morphTargets)for(var V=0;V<N[q].morphTargets.length;V++)B[N[q].morphTargets[V]]=-1;for(var M in B){var z=[],F=[];for(var V=0;V!==N[q].morphTargets.length;++V){var L=N[q];z.push(L.time),F.push(L.morphTarget===M?1:0)}Y.push(new Q.NumberKeyframeTrack(".morphTargetInfluence["+M+"]",z,F))}G=B.length*(W||1)}else{var A=".bones["+$[D].name+"]";K(Q.VectorKeyframeTrack,A+".position",N,"pos",Y),K(Q.QuaternionKeyframeTrack,A+".quaternion",N,"rot",Y),K(Q.VectorKeyframeTrack,A+".scale",N,"scl",Y)}}if(Y.length===0)return null;var C=new Q.AnimationClip(X,G,Y);return C}});Q.AnimationMixer=function(J){this._root=J,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1};Object.assign(Q.AnimationMixer.prototype,Q.EventDispatcher.prototype,{clipAction:function(J,$){var Z=$||this._root,K=Z.uuid,Y=typeof J==="string"?Q.AnimationClip.findByName(Z,J):J,X=Y!==null?Y.uuid:J,G=this._actionsByClip[X],W=null;if(G!==void 0){var U=G.actionByRoot[K];if(U!==void 0)return U;if(W=G.knownActions[0],Y===null)Y=W._clip}if(Y===null)return null;var D=new Q.AnimationMixer._Action(this,Y,$);return this._bindAction(D,W),this._addInactiveAction(D,X,K),D},existingAction:function(J,$){var Z=$||this._root,K=Z.uuid,Y=typeof J==="string"?Q.AnimationClip.findByName(Z,J):J,X=Y?Y.uuid:J,G=this._actionsByClip[X];if(G!==void 0)return G.actionByRoot[K]||null;return null},stopAllAction:function(){var J=this._actions,$=this._nActiveActions,Z=this._bindings,K=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var Y=0;Y!==$;++Y)J[Y].reset();for(var Y=0;Y!==K;++Y)Z[Y].useCount=0;return this},update:function(J){J*=this.timeScale;var $=this._actions,Z=this._nActiveActions,K=this.time+=J,Y=Math.sign(J),X=this._accuIndex^=1;for(var G=0;G!==Z;++G){var W=$[G];if(W.enabled)W._update(K,J,Y,X)}var U=this._bindings,D=this._nActiveBindings;for(var G=0;G!==D;++G)U[G].apply(X);return this},getRoot:function(){return this._root},uncacheClip:function(J){var $=this._actions,Z=J.uuid,K=this._actionsByClip,Y=K[Z];if(Y!==void 0){var X=Y.knownActions;for(var G=0,W=X.length;G!==W;++G){var U=X[G];this._deactivateAction(U);var D=U._cacheIndex,N=$[$.length-1];U._cacheIndex=null,U._byClipCacheIndex=null,N._cacheIndex=D,$[D]=N,$.pop(),this._removeInactiveBindingsForAction(U)}delete K[Z]}},uncacheRoot:function(J){var $=J.uuid,Z=this._actionsByClip;for(var K in Z){var Y=Z[K].actionByRoot,X=Y[$];if(X!==void 0)this._deactivateAction(X),this._removeInactiveAction(X)}var G=this._bindingsByRootAndName,W=G[$];if(W!==void 0)for(var U in W){var D=W[U];D.restoreOriginalState(),this._removeInactiveBinding(D)}},uncacheAction:function(J,$){var Z=this.existingAction(J,$);if(Z!==null)this._deactivateAction(Z),this._removeInactiveAction(Z)}});Q.AnimationMixer._Action=Q.AnimationAction._new;Object.assign(Q.AnimationMixer.prototype,{_bindAction:function(J,$){var Z=J._localRoot||this._root,K=J._clip.tracks,Y=K.length,X=J._propertyBindings,G=J._interpolants,W=Z.uuid,U=this._bindingsByRootAndName,D=U[W];if(D===void 0)D={},U[W]=D;for(var N=0;N!==Y;++N){var B=K[N],q=B.name,V=D[q];if(V!==void 0)X[N]=V;else{if(V=X[N],V!==void 0){if(V._cacheIndex===null)++V.referenceCount,this._addInactiveBinding(V,W,q);continue}var M=$&&$._propertyBindings[N].binding.parsedPath;V=new Q.PropertyMixer(Q.PropertyBinding.create(Z,q,M),B.ValueTypeName,B.getValueSize()),++V.referenceCount,this._addInactiveBinding(V,W,q),X[N]=V}G[N].resultBuffer=V.buffer}},_activateAction:function(J){if(!this._isActiveAction(J)){if(J._cacheIndex===null){var $=(J._localRoot||this._root).uuid,Z=J._clip.uuid,K=this._actionsByClip[Z];this._bindAction(J,K&&K.knownActions[0]),this._addInactiveAction(J,Z,$)}var Y=J._propertyBindings;for(var X=0,G=Y.length;X!==G;++X){var W=Y[X];if(W.useCount++===0)this._lendBinding(W),W.saveOriginalState()}this._lendAction(J)}},_deactivateAction:function(J){if(this._isActiveAction(J)){var $=J._propertyBindings;for(var Z=0,K=$.length;Z!==K;++Z){var Y=$[Z];if(--Y.useCount===0)Y.restoreOriginalState(),this._takeBackBinding(Y)}this._takeBackAction(J)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var J=this;this.stats={actions:{get total(){return J._actions.length},get inUse(){return J._nActiveActions}},bindings:{get total(){return J._bindings.length},get inUse(){return J._nActiveBindings}},controlInterpolants:{get total(){return J._controlInterpolants.length},get inUse(){return J._nActiveControlInterpolants}}}},_isActiveAction:function(J){var $=J._cacheIndex;return $!==null&&$<this._nActiveActions},_addInactiveAction:function(J,$,Z){var K=this._actions,Y=this._actionsByClip,X=Y[$];if(X===void 0)X={knownActions:[J],actionByRoot:{}},J._byClipCacheIndex=0,Y[$]=X;else{var G=X.knownActions;J._byClipCacheIndex=G.length,G.push(J)}J._cacheIndex=K.length,K.push(J),X.actionByRoot[Z]=J},_removeInactiveAction:function(J){var $=this._actions,Z=$[$.length-1],K=J._cacheIndex;Z._cacheIndex=K,$[K]=Z,$.pop(),J._cacheIndex=null;var Y=J._clip.uuid,X=this._actionsByClip,G=X[Y],W=G.knownActions,U=W[W.length-1],D=J._byClipCacheIndex;U._byClipCacheIndex=D,W[D]=U,W.pop(),J._byClipCacheIndex=null;var N=G.actionByRoot,B=($._localRoot||this._root).uuid;if(delete N[B],W.length===0)delete X[Y];this._removeInactiveBindingsForAction(J)},_removeInactiveBindingsForAction:function(J){var $=J._propertyBindings;for(var Z=0,K=$.length;Z!==K;++Z){var Y=$[Z];if(--Y.referenceCount===0)this._removeInactiveBinding(Y)}},_lendAction:function(J){var $=this._actions,Z=J._cacheIndex,K=this._nActiveActions++,Y=$[K];J._cacheIndex=K,$[K]=J,Y._cacheIndex=Z,$[Z]=Y},_takeBackAction:function(J){var $=this._actions,Z=J._cacheIndex,K=--this._nActiveActions,Y=$[K];J._cacheIndex=K,$[K]=J,Y._cacheIndex=Z,$[Z]=Y},_addInactiveBinding:function(J,$,Z){var K=this._bindingsByRootAndName,Y=K[$],X=this._bindings;if(Y===void 0)Y={},K[$]=Y;Y[Z]=J,J._cacheIndex=X.length,X.push(J)},_removeInactiveBinding:function(J){var $=this._bindings,Z=J.binding,K=Z.rootNode.uuid,Y=Z.path,X=this._bindingsByRootAndName,G=X[K],W=$[$.length-1],U=J._cacheIndex;W._cacheIndex=U,$[U]=W,$.pop(),delete G[Y];J:{for(var D in G)break J;delete X[K]}},_lendBinding:function(J){var $=this._bindings,Z=J._cacheIndex,K=this._nActiveBindings++,Y=$[K];J._cacheIndex=K,$[K]=J,Y._cacheIndex=Z,$[Z]=Y},_takeBackBinding:function(J){var $=this._bindings,Z=J._cacheIndex,K=--this._nActiveBindings,Y=$[K];J._cacheIndex=K,$[K]=J,Y._cacheIndex=Z,$[Z]=Y},_lendControlInterpolant:function(){var J=this._controlInterpolants,$=this._nActiveControlInterpolants++,Z=J[$];if(Z===void 0)Z=new Q.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),Z.__cacheIndex=$,J[$]=Z;return Z},_takeBackControlInterpolant:function(J){var $=this._controlInterpolants,Z=J.__cacheIndex,K=--this._nActiveControlInterpolants,Y=$[K];J.__cacheIndex=K,$[K]=J,Y.__cacheIndex=Z,$[Z]=Y},_controlInterpolantsResultBuffer:new Float32Array(1)});Q.AnimationObjectGroup=function(J){this.uuid=Q.Math.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var $={};this._indicesByUUID=$;for(var Z=0,K=arguments.length;Z!==K;++Z)$[arguments[Z].uuid]=Z;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var Y=this;this.stats={objects:{get total(){return Y._objects.length},get inUse(){return this.total-Y.nCachedObjects_}},get bindingsPerObject(){return Y._bindings.length}}};Q.AnimationObjectGroup.prototype={constructor:Q.AnimationObjectGroup,add:function(J){var $=this._objects,Z=$.length,K=this.nCachedObjects_,Y=this._indicesByUUID,X=this._paths,G=this._parsedPaths,W=this._bindings,U=W.length;for(var D=0,N=arguments.length;D!==N;++D){var B=arguments[D],q=B.uuid,V=Y[q];if(V===void 0){V=Z++,Y[q]=V,$.push(B);for(var M=0,z=U;M!==z;++M)W[M].push(new Q.PropertyBinding(B,X[M],G[M]))}else if(V<K){var F=$[V],L=--K,A=$[L];Y[A.uuid]=V,$[V]=A,Y[q]=L,$[L]=B;for(var M=0,z=U;M!==z;++M){var C=W[M],w=C[L],_=C[V];if(C[V]=w,_===void 0)_=new Q.PropertyBinding(B,X[M],G[M]);C[L]=_}}else if($[V]!==F)console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}this.nCachedObjects_=K},remove:function(J){var $=this._objects,Z=$.length,K=this.nCachedObjects_,Y=this._indicesByUUID,X=this._bindings,G=X.length;for(var W=0,U=arguments.length;W!==U;++W){var D=arguments[W],N=D.uuid,B=Y[N];if(B!==void 0&&B>=K){var q=K++,V=$[q];Y[V.uuid]=B,$[B]=V,Y[N]=q,$[q]=D;for(var M=0,z=G;M!==z;++M){var F=X[M],L=F[q],A=F[B];F[B]=L,F[q]=A}}}this.nCachedObjects_=K},uncache:function(J){var $=this._objects,Z=$.length,K=this.nCachedObjects_,Y=this._indicesByUUID,X=this._bindings,G=X.length;for(var W=0,U=arguments.length;W!==U;++W){var D=arguments[W],N=D.uuid,B=Y[N];if(B!==void 0)if(delete Y[N],B<K){var q=--K,V=$[q],M=--Z,z=$[M];Y[V.uuid]=B,$[B]=V,Y[z.uuid]=q,$[q]=z,$.pop();for(var F=0,L=G;F!==L;++F){var A=X[F],C=A[q],w=A[M];A[B]=C,A[q]=w,A.pop()}}else{var M=--Z,z=$[M];Y[z.uuid]=B,$[B]=z,$.pop();for(var F=0,L=G;F!==L;++F){var A=X[F];A[B]=A[M],A.pop()}}}this.nCachedObjects_=K},subscribe_:function(J,$){var Z=this._bindingsIndicesByPath,K=Z[J],Y=this._bindings;if(K!==void 0)return Y[K];var X=this._paths,G=this._parsedPaths,W=this._objects,U=W.length,D=this.nCachedObjects_,N=new Array(U);K=Y.length,Z[J]=K,X.push(J),G.push($),Y.push(N);for(var B=D,q=W.length;B!==q;++B){var V=W[B];N[B]=new Q.PropertyBinding(V,J,$)}return N},unsubscribe_:function(J){var $=this._bindingsIndicesByPath,Z=$[J];if(Z!==void 0){var K=this._paths,Y=this._parsedPaths,X=this._bindings,G=X.length-1,W=X[G],U=J[G];$[U]=Z,X[Z]=W,X.pop(),Y[Z]=Y[G],Y.pop(),K[Z]=K[G],K.pop()}}};Q.AnimationUtils={arraySlice:function(J,$,Z){if(Q.AnimationUtils.isTypedArray(J))return new J.constructor(J.subarray($,Z));return J.slice($,Z)},convertArray:function(J,$,Z){if(!J||!Z&&J.constructor===$)return J;if(typeof $.BYTES_PER_ELEMENT==="number")return new $(J);return Array.prototype.slice.call(J)},isTypedArray:function(J){return ArrayBuffer.isView(J)&&!(J instanceof DataView)},getKeyframeOrder:function(J){function $(X,G){return J[X]-J[G]}var Z=J.length,K=new Array(Z);for(var Y=0;Y!==Z;++Y)K[Y]=Y;return K.sort($),K},sortedArray:function(J,$,Z){var K=J.length,Y=new J.constructor(K);for(var X=0,G=0;G!==K;++X){var W=Z[X]*$;for(var U=0;U!==$;++U)Y[G++]=J[W+U]}return Y},flattenJSON:function(J,$,Z,K){var Y=1,X=J[0];while(X!==void 0&&X[K]===void 0)X=J[Y++];if(X===void 0)return;var G=X[K];if(G===void 0)return;if(Array.isArray(G))do{if(G=X[K],G!==void 0)$.push(X.time),Z.push.apply(Z,G);X=J[Y++]}while(X!==void 0);else if(G.toArray!==void 0)do{if(G=X[K],G!==void 0)$.push(X.time),G.toArray(Z,Z.length);X=J[Y++]}while(X!==void 0);else do{if(G=X[K],G!==void 0)$.push(X.time),Z.push(G);X=J[Y++]}while(X!==void 0)}};Q.KeyframeTrack=function(J,$,Z,K){if(J===void 0)throw new Error("track name is undefined");if($===void 0||$.length===0)throw new Error("no keyframes in track named "+J);this.name=J,this.times=Q.AnimationUtils.convertArray($,this.TimeBufferType),this.values=Q.AnimationUtils.convertArray(Z,this.ValueBufferType),this.setInterpolation(K||this.DefaultInterpolation),this.validate(),this.optimize()};Q.KeyframeTrack.prototype={constructor:Q.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Q.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(J){return new Q.DiscreteInterpolant(this.times,this.values,this.getValueSize(),J)},InterpolantFactoryMethodLinear:function(J){return new Q.LinearInterpolant(this.times,this.values,this.getValueSize(),J)},InterpolantFactoryMethodSmooth:function(J){return new Q.CubicInterpolant(this.times,this.values,this.getValueSize(),J)},setInterpolation:function(J){var $;switch(J){case Q.InterpolateDiscrete:$=this.InterpolantFactoryMethodDiscrete;break;case Q.InterpolateLinear:$=this.InterpolantFactoryMethodLinear;break;case Q.InterpolateSmooth:$=this.InterpolantFactoryMethodSmooth;break}if($===void 0){var Z="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(J!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(Z);console.warn(Z);return}this.createInterpolant=$},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Q.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return Q.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return Q.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(J){if(J!==0){var $=this.times;for(var Z=0,K=$.length;Z!==K;++Z)$[Z]+=J}return this},scale:function(J){if(J!==1){var $=this.times;for(var Z=0,K=$.length;Z!==K;++Z)$[Z]*=J}return this},trim:function(J,$){var Z=this.times,K=Z.length,Y=0,X=K-1;while(Y!==K&&Z[Y]<J)++Y;while(X!==-1&&Z[X]>$)--X;if(++X,Y!==0||X!==K){if(Y>=X)X=Math.max(X,1),Y=X-1;var G=this.getValueSize();this.times=Q.AnimationUtils.arraySlice(Z,Y,X),this.values=Q.AnimationUtils.arraySlice(this.values,Y*G,X*G)}return this},validate:function(){var J=!0,$=this.getValueSize();if($-Math.floor($)!==0)console.error("invalid value size in track",this),J=!1;var Z=this.times,K=this.values,Y=Z.length;if(Y===0)console.error("track is empty",this),J=!1;var X=null;for(var G=0;G!==Y;G++){var W=Z[G];if(typeof W==="number"&&isNaN(W)){console.error("time is not a valid number",this,G,W),J=!1;break}if(X!==null&&X>W){console.error("out of order keys",this,G,W,X),J=!1;break}X=W}if(K!==void 0){if(Q.AnimationUtils.isTypedArray(K))for(var G=0,U=K.length;G!==U;++G){var D=K[G];if(isNaN(D)){console.error("value is not a valid number",this,G,D),J=!1;break}}}return J},optimize:function(){var J=this.times,$=this.values,Z=this.getValueSize(),K=1;for(var Y=1,X=J.length-1;Y<=X;++Y){var G=!1,W=J[Y],U=J[Y+1];if(W!==U&&(Y!==1||W!==W[0])){var D=Y*Z,N=D-Z,B=D+Z;for(var q=0;q!==Z;++q){var V=$[D+q];if(V!==$[N+q]||V!==$[B+q]){G=!0;break}}}if(G){if(Y!==K){J[K]=J[Y];var M=Y*Z,z=K*Z;for(var q=0;q!==Z;++q)$[z+q]=$[M+q]}++K}}if(K!==J.length)this.times=Q.AnimationUtils.arraySlice(J,0,K),this.values=Q.AnimationUtils.arraySlice($,0,K*Z);return this}};Object.assign(Q.KeyframeTrack,{parse:function(J){if(J.type===void 0)throw new Error("track type undefined, can not parse");var $=Q.KeyframeTrack._getTrackTypeForValueTypeName(J.type);if(J.times===void 0){var Z=[],K=[];Q.AnimationUtils.flattenJSON(J.keys,Z,K,"value"),J.times=Z,J.values=K}if($.parse!==void 0)return $.parse(J);else return new $(J.name,J.times,J.values,J.interpolation)},toJSON:function(J){var $=J.constructor,Z;if($.toJSON!==void 0)Z=$.toJSON(J);else{Z={name:J.name,times:Q.AnimationUtils.convertArray(J.times,Array),values:Q.AnimationUtils.convertArray(J.values,Array)};var K=J.getInterpolation();if(K!==J.DefaultInterpolation)Z.interpolation=K}return Z.type=J.ValueTypeName,Z},_getTrackTypeForValueTypeName:function(J){switch(J.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Q.NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return Q.VectorKeyframeTrack;case"color":return Q.ColorKeyframeTrack;case"quaternion":return Q.QuaternionKeyframeTrack;case"bool":case"boolean":return Q.BooleanKeyframeTrack;case"string":return Q.StringKeyframeTrack}throw new Error("Unsupported typeName: "+J)}});Q.PropertyBinding=function(J,$,Z){this.path=$,this.parsedPath=Z||Q.PropertyBinding.parseTrackName($),this.node=Q.PropertyBinding.findNode(J,this.parsedPath.nodeName)||J,this.rootNode=J};Q.PropertyBinding.prototype={constructor:Q.PropertyBinding,getValue:function J($,Z){this.bind(),this.getValue($,Z)},setValue:function J($,Z){this.bind(),this.setValue($,Z)},bind:function(){var J=this.node,$=this.parsedPath,Z=$.objectName,K=$.propertyName,Y=$.propertyIndex;if(!J)J=Q.PropertyBinding.findNode(this.rootNode,$.nodeName)||this.rootNode,this.node=J;if(this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!J){console.error("  trying to update node for track: "+this.path+" but it wasn't found.");return}if(Z){var X=$.objectIndex;switch(Z){case"materials":if(!J.material){console.error("  can not bind to material as node does not have a material",this);return}if(!J.material.materials){console.error("  can not bind to material.materials as node.material does not have a materials array",this);return}J=J.material.materials;break;case"bones":if(!J.skeleton){console.error("  can not bind to bones as node does not have a skeleton",this);return}J=J.skeleton.bones;for(var G=0;G<J.length;G++)if(J[G].name===X){X=G;break}break;default:if(J[Z]===void 0){console.error("  can not bind to objectName of node, undefined",this);return}J=J[Z]}if(X!==void 0){if(J[X]===void 0){console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,J);return}J=J[X]}}var W=J[K];if(!W){var U=$.nodeName;console.error("  trying to update property for track: "+U+"."+K+" but it wasn't found.",J);return}var D=this.Versioning.None;if(J.needsUpdate!==void 0)D=this.Versioning.NeedsUpdate,this.targetObject=J;else if(J.matrixWorldNeedsUpdate!==void 0)D=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=J;var N=this.BindingType.Direct;if(Y!==void 0){if(K==="morphTargetInfluences"){if(!J.geometry){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);return}if(!J.geometry.morphTargets){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);return}for(var G=0;G<this.node.geometry.morphTargets.length;G++)if(J.geometry.morphTargets[G].name===Y){Y=G;break}}N=this.BindingType.ArrayElement,this.resolvedProperty=W,this.propertyIndex=Y}else if(W.fromArray!==void 0&&W.toArray!==void 0)N=this.BindingType.HasFromToArray,this.resolvedProperty=W;else if(W.length!==void 0)N=this.BindingType.EntireArray,this.resolvedProperty=W;else this.propertyName=K;this.getValue=this.GetterByBindingType[N],this.setValue=this.SetterByBindingTypeAndVersioning[N][D]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};Object.assign(Q.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:Q.PropertyBinding.prototype.getValue,_setValue_unbound:Q.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function J($,Z){$[Z]=this.node[this.propertyName]},function J($,Z){var K=this.resolvedProperty;for(var Y=0,X=K.length;Y!==X;++Y)$[Z++]=K[Y]},function J($,Z){$[Z]=this.resolvedProperty[this.propertyIndex]},function J($,Z){this.resolvedProperty.toArray($,Z)}],SetterByBindingTypeAndVersioning:[[function J($,Z){this.node[this.propertyName]=$[Z]},function J($,Z){this.node[this.propertyName]=$[Z],this.targetObject.needsUpdate=!0},function J($,Z){this.node[this.propertyName]=$[Z],this.targetObject.matrixWorldNeedsUpdate=!0}],[function J($,Z){var K=this.resolvedProperty;for(var Y=0,X=K.length;Y!==X;++Y)K[Y]=$[Z++]},function J($,Z){var K=this.resolvedProperty;for(var Y=0,X=K.length;Y!==X;++Y)K[Y]=$[Z++];this.targetObject.needsUpdate=!0},function J($,Z){var K=this.resolvedProperty;for(var Y=0,X=K.length;Y!==X;++Y)K[Y]=$[Z++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function J($,Z){this.resolvedProperty[this.propertyIndex]=$[Z]},function J($,Z){this.resolvedProperty[this.propertyIndex]=$[Z],this.targetObject.needsUpdate=!0},function J($,Z){this.resolvedProperty[this.propertyIndex]=$[Z],this.targetObject.matrixWorldNeedsUpdate=!0}],[function J($,Z){this.resolvedProperty.fromArray($,Z)},function J($,Z){this.resolvedProperty.fromArray($,Z),this.targetObject.needsUpdate=!0},function J($,Z){this.resolvedProperty.fromArray($,Z),this.targetObject.matrixWorldNeedsUpdate=!0}]]});Q.PropertyBinding.Composite=function(J,$,Z){var K=Z||Q.PropertyBinding.parseTrackName($);this._targetGroup=J,this._bindings=J.subscribe_($,K)};Q.PropertyBinding.Composite.prototype={constructor:Q.PropertyBinding.Composite,getValue:function(J,$){this.bind();var Z=this._targetGroup.nCachedObjects_,K=this._bindings[Z];if(K!==void 0)K.getValue(J,$)},setValue:function(J,$){var Z=this._bindings;for(var K=this._targetGroup.nCachedObjects_,Y=Z.length;K!==Y;++K)Z[K].setValue(J,$)},bind:function(){var J=this._bindings;for(var $=this._targetGroup.nCachedObjects_,Z=J.length;$!==Z;++$)J[$].bind()},unbind:function(){var J=this._bindings;for(var $=this._targetGroup.nCachedObjects_,Z=J.length;$!==Z;++$)J[$].unbind()}};Q.PropertyBinding.create=function(J,$,Z){if(!(J instanceof Q.AnimationObjectGroup))return new Q.PropertyBinding(J,$,Z);else return new Q.PropertyBinding.Composite(J,$,Z)};Q.PropertyBinding.parseTrackName=function(J){var $=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,Z=$.exec(J);if(!Z)throw new Error("cannot parse trackName at all: "+J);if(Z.index===$.lastIndex)$.lastIndex++;var K={nodeName:Z[3],objectName:Z[5],objectIndex:Z[7],propertyName:Z[9],propertyIndex:Z[11]};if(K.propertyName===null||K.propertyName.length===0)throw new Error("can not parse propertyName from trackName: "+J);return K};Q.PropertyBinding.findNode=function(J,$){if(!$||$===""||$==="root"||$==="."||$===-1||$===J.name||$===J.uuid)return J;if(J.skeleton){var Z=function(G){for(var W=0;W<G.bones.length;W++){var U=G.bones[W];if(U.name===$)return U}return null},K=Z(J.skeleton);if(K)return K}if(J.children){var Y=function(G){for(var W=0;W<G.length;W++){var U=G[W];if(U.name===$||U.uuid===$)return U;var D=Y(U.children);if(D)return D}return null},X=Y(J.children);if(X)return X}return null};Q.PropertyMixer=function(J,$,Z){this.binding=J,this.valueSize=Z;var K=Float64Array,Y;switch($){case"quaternion":Y=this._slerp;break;case"string":case"bool":K=Array,Y=this._select;break;default:Y=this._lerp}this.buffer=new K(Z*4),this._mixBufferRegion=Y,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0};Q.PropertyMixer.prototype={constructor:Q.PropertyMixer,accumulate:function(J,$){var Z=this.buffer,K=this.valueSize,Y=J*K+K,X=this.cumulativeWeight;if(X===0){for(var G=0;G!==K;++G)Z[Y+G]=Z[G];X=$}else{X+=$;var W=$/X;this._mixBufferRegion(Z,Y,0,W,K)}this.cumulativeWeight=X},apply:function(J){var $=this.valueSize,Z=this.buffer,K=J*$+$,Y=this.cumulativeWeight,X=this.binding;if(this.cumulativeWeight=0,Y<1){var G=$*3;this._mixBufferRegion(Z,K,G,1-Y,$)}for(var W=$,U=$+$;W!==U;++W)if(Z[W]!==Z[W+$]){X.setValue(Z,K);break}},saveOriginalState:function(){var J=this.binding,$=this.buffer,Z=this.valueSize,K=Z*3;J.getValue($,K);for(var Y=Z,X=K;Y!==X;++Y)$[Y]=$[K+Y%Z];this.cumulativeWeight=0},restoreOriginalState:function(){var J=this.valueSize*3;this.binding.setValue(this.buffer,J)},_select:function(J,$,Z,K,Y){if(K>=0.5)for(var X=0;X!==Y;++X)J[$+X]=J[Z+X]},_slerp:function(J,$,Z,K,Y){Q.Quaternion.slerpFlat(J,$,J,$,J,Z,K)},_lerp:function(J,$,Z,K,Y){var X=1-K;for(var G=0;G!==Y;++G){var W=$+G;J[W]=J[W]*X+J[Z+G]*K}}};Q.BooleanKeyframeTrack=function(J,$,Z){Q.KeyframeTrack.call(this,J,$,Z)};Q.BooleanKeyframeTrack.prototype=Object.assign(Object.create(Q.KeyframeTrack.prototype),{constructor:Q.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Q.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Q.ColorKeyframeTrack=function(J,$,Z,K){Q.KeyframeTrack.call(this,J,$,Z,K)};Q.ColorKeyframeTrack.prototype=Object.assign(Object.create(Q.KeyframeTrack.prototype),{constructor:Q.ColorKeyframeTrack,ValueTypeName:"color"});Q.NumberKeyframeTrack=function(J,$,Z,K){Q.KeyframeTrack.call(this,J,$,Z,K)};Q.NumberKeyframeTrack.prototype=Object.assign(Object.create(Q.KeyframeTrack.prototype),{constructor:Q.NumberKeyframeTrack,ValueTypeName:"number"});Q.QuaternionKeyframeTrack=function(J,$,Z,K){Q.KeyframeTrack.call(this,J,$,Z,K)};Q.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(Q.KeyframeTrack.prototype),{constructor:Q.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:Q.InterpolateLinear,InterpolantFactoryMethodLinear:function(J){return new Q.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),J)},InterpolantFactoryMethodSmooth:void 0});Q.StringKeyframeTrack=function(J,$,Z,K){Q.KeyframeTrack.call(this,J,$,Z,K)};Q.StringKeyframeTrack.prototype=Object.assign(Object.create(Q.KeyframeTrack.prototype),{constructor:Q.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Q.InterpolateDiscrete,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});Q.VectorKeyframeTrack=function(J,$,Z,K){Q.KeyframeTrack.call(this,J,$,Z,K)};Q.VectorKeyframeTrack.prototype=Object.assign(Object.create(Q.KeyframeTrack.prototype),{constructor:Q.VectorKeyframeTrack,ValueTypeName:"vector"});Q.Audio=function(J){Q.Object3D.call(this),this.type="Audio",this.context=J.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(J.getInput()),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]};Q.Audio.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Audio,getOutput:function(){return this.gain},setNodeSource:function(J){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=J,this.connect(),this},setBuffer:function(J){if(this.source.buffer=J,this.sourceType="buffer",this.autoplay)this.play();return this},play:function(){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}var J=this.context.createBufferSource();return J.buffer=this.source.buffer,J.loop=this.source.loop,J.onended=this.source.onended,J.start(0,this.startTime),J.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=J,this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.startTime=this.context.currentTime,this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.startTime=0,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var J=1,$=this.filters.length;J<$;J++)this.filters[J-1].connect(this.filters[J]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var J=1,$=this.filters.length;J<$;J++)this.filters[J-1].disconnect(this.filters[J]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(J){if(!J)J=[];if(this.isPlaying===!0)this.disconnect(),this.filters=J,this.connect();else this.filters=J;return this},getFilter:function(){return this.getFilters()[0]},setFilter:function(J){return this.setFilters(J?[J]:[])},setPlaybackRate:function(J){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}if(this.playbackRate=J,this.isPlaying===!0)this.source.playbackRate.value=this.playbackRate;return this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){if(this.hasPlaybackControl===!1)return console.warn("THREE.Audio: this Audio has no playback control."),!1;return this.source.loop},setLoop:function(J){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.loop=J},getVolume:function(){return this.gain.gain.value},setVolume:function(J){return this.gain.gain.value=J,this}});Q.AudioAnalyser=function(J,$){this.analyser=J.context.createAnalyser(),this.analyser.fftSize=$!==void 0?$:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),J.getOutput().connect(this.analyser)};Object.assign(Q.AudioAnalyser.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){var J=0,$=this.getFrequencyData();for(var Z=0;Z<$.length;Z++)J+=$[Z];return J/$.length}});Object.defineProperty(Q,"AudioContext",{get:function(){var J;return function(){if(J===void 0)J=new(window.AudioContext||window.webkitAudioContext);return J}}()});Q.PositionalAudio=function(J){Q.Audio.call(this,J),this.panner=this.context.createPanner(),this.panner.connect(this.gain)};Q.PositionalAudio.prototype=Object.assign(Object.create(Q.Audio.prototype),{constructor:Q.PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(J){this.panner.refDistance=J},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(J){this.panner.rolloffFactor=J},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(J){this.panner.distanceModel=J},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(J){this.panner.maxDistance=J},updateMatrixWorld:function(){var J=new Q.Vector3;return function $(Z){Q.Object3D.prototype.updateMatrixWorld.call(this,Z),J.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(J.x,J.y,J.z)}}()});Q.AudioListener=function(){Q.Object3D.call(this),this.type="AudioListener",this.context=Q.AudioContext,this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null};Q.AudioListener.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.AudioListener,getInput:function(){return this.gain},removeFilter:function(){if(this.filter!==null)this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null},getFilter:function(){return this.filter},setFilter:function(J){if(this.filter!==null)this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination);else this.gain.disconnect(this.context.destination);this.filter=J,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(J){this.gain.gain.value=J},updateMatrixWorld:function(){var J=new Q.Vector3,$=new Q.Quaternion,Z=new Q.Vector3,K=new Q.Vector3;return function Y(X){Q.Object3D.prototype.updateMatrixWorld.call(this,X);var G=this.context.listener,W=this.up;this.matrixWorld.decompose(J,$,Z),K.set(0,0,-1).applyQuaternion($),G.setPosition(J.x,J.y,J.z),G.setOrientation(K.x,K.y,K.z,W.x,W.y,W.z)}}()});Q.Camera=function(){Q.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new Q.Matrix4,this.projectionMatrix=new Q.Matrix4};Q.Camera.prototype=Object.create(Q.Object3D.prototype);Q.Camera.prototype.constructor=Q.Camera;Q.Camera.prototype.getWorldDirection=function(){var J=new Q.Quaternion;return function($){var Z=$||new Q.Vector3;return this.getWorldQuaternion(J),Z.set(0,0,-1).applyQuaternion(J)}}();Q.Camera.prototype.lookAt=function(){var J=new Q.Matrix4;return function($){J.lookAt(this.position,$,this.up),this.quaternion.setFromRotationMatrix(J)}}();Q.Camera.prototype.clone=function(){return new this.constructor().copy(this)};Q.Camera.prototype.copy=function(J){return Q.Object3D.prototype.copy.call(this,J),this.matrixWorldInverse.copy(J.matrixWorldInverse),this.projectionMatrix.copy(J.projectionMatrix),this};Q.CubeCamera=function(J,$,Z){Q.Object3D.call(this),this.type="CubeCamera";var K=90,Y=1,X=new Q.PerspectiveCamera(K,Y,J,$);X.up.set(0,-1,0),X.lookAt(new Q.Vector3(1,0,0)),this.add(X);var G=new Q.PerspectiveCamera(K,Y,J,$);G.up.set(0,-1,0),G.lookAt(new Q.Vector3(-1,0,0)),this.add(G);var W=new Q.PerspectiveCamera(K,Y,J,$);W.up.set(0,0,1),W.lookAt(new Q.Vector3(0,1,0)),this.add(W);var U=new Q.PerspectiveCamera(K,Y,J,$);U.up.set(0,0,-1),U.lookAt(new Q.Vector3(0,-1,0)),this.add(U);var D=new Q.PerspectiveCamera(K,Y,J,$);D.up.set(0,-1,0),D.lookAt(new Q.Vector3(0,0,1)),this.add(D);var N=new Q.PerspectiveCamera(K,Y,J,$);N.up.set(0,-1,0),N.lookAt(new Q.Vector3(0,0,-1)),this.add(N);var B={format:Q.RGBFormat,magFilter:Q.LinearFilter,minFilter:Q.LinearFilter};this.renderTarget=new Q.WebGLRenderTargetCube(Z,Z,B),this.updateCubeMap=function(q,V){if(this.parent===null)this.updateMatrixWorld();var M=this.renderTarget,z=M.texture.generateMipmaps;M.texture.generateMipmaps=!1,M.activeCubeFace=0,q.render(V,X,M),M.activeCubeFace=1,q.render(V,G,M),M.activeCubeFace=2,q.render(V,W,M),M.activeCubeFace=3,q.render(V,U,M),M.activeCubeFace=4,q.render(V,D,M),M.texture.generateMipmaps=z,M.activeCubeFace=5,q.render(V,N,M),q.setRenderTarget(null)}};Q.CubeCamera.prototype=Object.create(Q.Object3D.prototype);Q.CubeCamera.prototype.constructor=Q.CubeCamera;Q.OrthographicCamera=function(J,$,Z,K,Y,X){Q.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=J,this.right=$,this.top=Z,this.bottom=K,this.near=Y!==void 0?Y:0.1,this.far=X!==void 0?X:2000,this.updateProjectionMatrix()};Q.OrthographicCamera.prototype=Object.assign(Object.create(Q.Camera.prototype),{constructor:Q.OrthographicCamera,copy:function(J){return Q.Camera.prototype.copy.call(this,J),this.left=J.left,this.right=J.right,this.top=J.top,this.bottom=J.bottom,this.near=J.near,this.far=J.far,this.zoom=J.zoom,this},updateProjectionMatrix:function(){var J=(this.right-this.left)/(2*this.zoom),$=(this.top-this.bottom)/(2*this.zoom),Z=(this.right+this.left)/2,K=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(Z-J,Z+J,K+$,K-$,this.near,this.far)},toJSON:function(J){var $=Q.Object3D.prototype.toJSON.call(this,J);return $.object.zoom=this.zoom,$.object.left=this.left,$.object.right=this.right,$.object.top=this.top,$.object.bottom=this.bottom,$.object.near=this.near,$.object.far=this.far,$}});Q.PerspectiveCamera=function(J,$,Z,K){Q.Camera.call(this),this.type="PerspectiveCamera",this.fov=J!==void 0?J:50,this.zoom=1,this.near=Z!==void 0?Z:0.1,this.far=K!==void 0?K:2000,this.focus=10,this.aspect=$!==void 0?$:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()};Q.PerspectiveCamera.prototype=Object.assign(Object.create(Q.Camera.prototype),{constructor:Q.PerspectiveCamera,copy:function(J){return Q.Camera.prototype.copy.call(this,J),this.fov=J.fov,this.zoom=J.zoom,this.near=J.near,this.far=J.far,this.focus=J.focus,this.aspect=J.aspect,this.view=J.view===null?null:Object.assign({},J.view),this.filmGauge=J.filmGauge,this.filmOffset=J.filmOffset,this},setFocalLength:function(J){var $=0.5*this.getFilmHeight()/J;this.fov=Q.Math.RAD2DEG*2*Math.atan($),this.updateProjectionMatrix()},getFocalLength:function(){var J=Math.tan(Q.Math.DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/J},getEffectiveFOV:function(){return Q.Math.RAD2DEG*2*Math.atan(Math.tan(Q.Math.DEG2RAD*0.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(J,$,Z,K,Y,X){this.aspect=J/$,this.view={fullWidth:J,fullHeight:$,offsetX:Z,offsetY:K,width:Y,height:X},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var J=this.near,$=J*Math.tan(Q.Math.DEG2RAD*0.5*this.fov)/this.zoom,Z=2*$,K=this.aspect*Z,Y=-0.5*K,X=this.view;if(X!==null){var{fullWidth:G,fullHeight:W}=X;Y+=X.offsetX*K/G,$-=X.offsetY*Z/W,K*=X.width/G,Z*=X.height/W}var U=this.filmOffset;if(U!==0)Y+=J*U/this.getFilmWidth();this.projectionMatrix.makeFrustum(Y,Y+K,$-Z,$,J,this.far)},toJSON:function(J){var $=Q.Object3D.prototype.toJSON.call(this,J);if($.object.fov=this.fov,$.object.zoom=this.zoom,$.object.near=this.near,$.object.far=this.far,$.object.focus=this.focus,$.object.aspect=this.aspect,this.view!==null)$.object.view=Object.assign({},this.view);return $.object.filmGauge=this.filmGauge,$.object.filmOffset=this.filmOffset,$}});Q.StereoCamera=function(){this.type="StereoCamera",this.aspect=1,this.cameraL=new Q.PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Q.PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1};Object.assign(Q.StereoCamera.prototype,{update:function(){var J,$,Z,K,Y,X=new Q.Matrix4,G=new Q.Matrix4;return function W(U){var D=J!==U.focus||$!==U.fov||Z!==U.aspect*this.aspect||K!==U.near||Y!==U.far;if(D){J=U.focus,$=U.fov,Z=U.aspect*this.aspect,K=U.near,Y=U.far;var N=U.projectionMatrix.clone(),B=0.032,q=B*K/J,V=K*Math.tan(Q.Math.DEG2RAD*$*0.5),M,z;G.elements[12]=-B,X.elements[12]=B,M=-V*Z+q,z=V*Z+q,N.elements[0]=2*K/(z-M),N.elements[8]=(z+M)/(z-M),this.cameraL.projectionMatrix.copy(N),M=-V*Z-q,z=V*Z-q,N.elements[0]=2*K/(z-M),N.elements[8]=(z+M)/(z-M),this.cameraR.projectionMatrix.copy(N)}this.cameraL.matrixWorld.copy(U.matrixWorld).multiply(G),this.cameraR.matrixWorld.copy(U.matrixWorld).multiply(X)}}()});Q.Light=function(J,$){Q.Object3D.call(this),this.type="Light",this.color=new Q.Color(J),this.intensity=$!==void 0?$:1,this.receiveShadow=void 0};Q.Light.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Light,copy:function(J){return Q.Object3D.prototype.copy.call(this,J),this.color.copy(J.color),this.intensity=J.intensity,this},toJSON:function(J){var $=Q.Object3D.prototype.toJSON.call(this,J);if($.object.color=this.color.getHex(),$.object.intensity=this.intensity,this.groundColor!==void 0)$.object.groundColor=this.groundColor.getHex();if(this.distance!==void 0)$.object.distance=this.distance;if(this.angle!==void 0)$.object.angle=this.angle;if(this.decay!==void 0)$.object.decay=this.decay;if(this.penumbra!==void 0)$.object.penumbra=this.penumbra;return $}});Q.LightShadow=function(J){this.camera=J,this.bias=0,this.radius=1,this.mapSize=new Q.Vector2(512,512),this.map=null,this.matrix=new Q.Matrix4};Object.assign(Q.LightShadow.prototype,{copy:function(J){return this.camera=J.camera.clone(),this.bias=J.bias,this.radius=J.radius,this.mapSize.copy(J.mapSize),this},clone:function(){return new this.constructor().copy(this)}});Q.AmbientLight=function(J,$){Q.Light.call(this,J,$),this.type="AmbientLight",this.castShadow=void 0};Q.AmbientLight.prototype=Object.assign(Object.create(Q.Light.prototype),{constructor:Q.AmbientLight});Q.DirectionalLight=function(J,$){Q.Light.call(this,J,$),this.type="DirectionalLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new Q.Object3D,this.shadow=new Q.DirectionalLightShadow};Q.DirectionalLight.prototype=Object.assign(Object.create(Q.Light.prototype),{constructor:Q.DirectionalLight,copy:function(J){return Q.Light.prototype.copy.call(this,J),this.target=J.target.clone(),this.shadow=J.shadow.clone(),this}});Q.DirectionalLightShadow=function(J){Q.LightShadow.call(this,new Q.OrthographicCamera(-5,5,5,-5,0.5,500))};Q.DirectionalLightShadow.prototype=Object.assign(Object.create(Q.LightShadow.prototype),{constructor:Q.DirectionalLightShadow});Q.HemisphereLight=function(J,$,Z){Q.Light.call(this,J,Z),this.type="HemisphereLight",this.castShadow=void 0,this.position.set(0,1,0),this.updateMatrix(),this.groundColor=new Q.Color($)};Q.HemisphereLight.prototype=Object.assign(Object.create(Q.Light.prototype),{constructor:Q.HemisphereLight,copy:function(J){return Q.Light.prototype.copy.call(this,J),this.groundColor.copy(J.groundColor),this}});Q.PointLight=function(J,$,Z,K){Q.Light.call(this,J,$),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(Y){this.intensity=Y/(4*Math.PI)}}),this.distance=Z!==void 0?Z:0,this.decay=K!==void 0?K:1,this.shadow=new Q.LightShadow(new Q.PerspectiveCamera(90,1,0.5,500))};Q.PointLight.prototype=Object.assign(Object.create(Q.Light.prototype),{constructor:Q.PointLight,copy:function(J){return Q.Light.prototype.copy.call(this,J),this.distance=J.distance,this.decay=J.decay,this.shadow=J.shadow.clone(),this}});Q.SpotLight=function(J,$,Z,K,Y,X){Q.Light.call(this,J,$),this.type="SpotLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new Q.Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(G){this.intensity=G/Math.PI}}),this.distance=Z!==void 0?Z:0,this.angle=K!==void 0?K:Math.PI/3,this.penumbra=Y!==void 0?Y:0,this.decay=X!==void 0?X:1,this.shadow=new Q.SpotLightShadow};Q.SpotLight.prototype=Object.assign(Object.create(Q.Light.prototype),{constructor:Q.SpotLight,copy:function(J){return Q.Light.prototype.copy.call(this,J),this.distance=J.distance,this.angle=J.angle,this.penumbra=J.penumbra,this.decay=J.decay,this.target=J.target.clone(),this.shadow=J.shadow.clone(),this}});Q.SpotLightShadow=function(){Q.LightShadow.call(this,new Q.PerspectiveCamera(50,1,0.5,500))};Q.SpotLightShadow.prototype=Object.assign(Object.create(Q.LightShadow.prototype),{constructor:Q.SpotLightShadow,update:function(J){var $=Q.Math.RAD2DEG*2*J.angle,Z=this.mapSize.width/this.mapSize.height,K=J.distance||500,Y=this.camera;if($!==Y.fov||Z!==Y.aspect||K!==Y.far)Y.fov=$,Y.aspect=Z,Y.far=K,Y.updateProjectionMatrix()}});Q.AudioLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager};Q.AudioLoader.prototype={constructor:Q.AudioLoader,load:function(J,$,Z,K){var Y=new Q.XHRLoader(this.manager);Y.setResponseType("arraybuffer"),Y.load(J,function(X){var G=Q.AudioContext;G.decodeAudioData(X,function(W){$(W)})},Z,K)}};Q.Cache={enabled:!1,files:{},add:function(J,$){if(this.enabled===!1)return;this.files[J]=$},get:function(J){if(this.enabled===!1)return;return this.files[J]},remove:function(J){delete this.files[J]},clear:function(){this.files={}}};Q.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}};Q.Loader.prototype={constructor:Q.Loader,crossOrigin:void 0,extractUrlBase:function(J){var $=J.split("/");if($.length===1)return"./";return $.pop(),$.join("/")+"/"},initMaterials:function(J,$,Z){var K=[];for(var Y=0;Y<J.length;++Y)K[Y]=this.createMaterial(J[Y],$,Z);return K},createMaterial:function(){var J,$,Z;return function(K,Y,X){if(J===void 0)J=new Q.Color;if($===void 0)$=new Q.TextureLoader;if(Z===void 0)Z=new Q.MaterialLoader;var G={};function W(B,q,V,M,z){var F=Y+B,L=Q.Loader.Handlers.get(F),A;if(L!==null)A=L.load(F);else $.setCrossOrigin(X),A=$.load(F);if(q!==void 0){if(A.repeat.fromArray(q),q[0]!==1)A.wrapS=Q.RepeatWrapping;if(q[1]!==1)A.wrapT=Q.RepeatWrapping}if(V!==void 0)A.offset.fromArray(V);if(M!==void 0){if(M[0]==="repeat")A.wrapS=Q.RepeatWrapping;if(M[0]==="mirror")A.wrapS=Q.MirroredRepeatWrapping;if(M[1]==="repeat")A.wrapT=Q.RepeatWrapping;if(M[1]==="mirror")A.wrapT=Q.MirroredRepeatWrapping}if(z!==void 0)A.anisotropy=z;var C=Q.Math.generateUUID();return G[C]=A,C}var U={uuid:Q.Math.generateUUID(),type:"MeshLambertMaterial"};for(var D in K){var N=K[D];switch(D){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":U.name=N;break;case"blending":U.blending=Q[N];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",D,"is no longer supported.");break;case"colorDiffuse":U.color=J.fromArray(N).getHex();break;case"colorSpecular":U.specular=J.fromArray(N).getHex();break;case"colorEmissive":U.emissive=J.fromArray(N).getHex();break;case"specularCoef":U.shininess=N;break;case"shading":if(N.toLowerCase()==="basic")U.type="MeshBasicMaterial";if(N.toLowerCase()==="phong")U.type="MeshPhongMaterial";break;case"mapDiffuse":U.map=W(N,K.mapDiffuseRepeat,K.mapDiffuseOffset,K.mapDiffuseWrap,K.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":U.lightMap=W(N,K.mapLightRepeat,K.mapLightOffset,K.mapLightWrap,K.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":U.aoMap=W(N,K.mapAORepeat,K.mapAOOffset,K.mapAOWrap,K.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":U.bumpMap=W(N,K.mapBumpRepeat,K.mapBumpOffset,K.mapBumpWrap,K.mapBumpAnisotropy);break;case"mapBumpScale":U.bumpScale=N;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":U.normalMap=W(N,K.mapNormalRepeat,K.mapNormalOffset,K.mapNormalWrap,K.mapNormalAnisotropy);break;case"mapNormalFactor":U.normalScale=[N,N];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":U.specularMap=W(N,K.mapSpecularRepeat,K.mapSpecularOffset,K.mapSpecularWrap,K.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":U.alphaMap=W(N,K.mapAlphaRepeat,K.mapAlphaOffset,K.mapAlphaWrap,K.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":U.side=Q.BackSide;break;case"doubleSided":U.side=Q.DoubleSide;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),U.opacity=N;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":U[D]=N;break;case"vertexColors":if(N===!0)U.vertexColors=Q.VertexColors;if(N==="face")U.vertexColors=Q.FaceColors;break;default:console.error("THREE.Loader.createMaterial: Unsupported",D,N);break}}if(U.type==="MeshBasicMaterial")delete U.emissive;if(U.type!=="MeshPhongMaterial")delete U.specular;if(U.opacity<1)U.transparent=!0;return Z.setTextures(G),Z.parse(U)}}()};Q.Loader.Handlers={handlers:[],add:function(J,$){this.handlers.push(J,$)},get:function(J){var $=this.handlers;for(var Z=0,K=$.length;Z<K;Z+=2){var Y=$[Z],X=$[Z+1];if(Y.test(J))return X}return null}};Q.XHRLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager};Q.XHRLoader.prototype={constructor:Q.XHRLoader,load:function(J,$,Z,K){if(this.path!==void 0)J=this.path+J;var Y=this,X=Q.Cache.get(J);if(X!==void 0){if($)setTimeout(function(){$(X)},0);return X}var G=new XMLHttpRequest;if(G.overrideMimeType("text/plain"),G.open("GET",J,!0),G.addEventListener("load",function(W){var U=W.target.response;if(Q.Cache.add(J,U),this.status===200){if($)$(U);Y.manager.itemEnd(J)}else if(this.status===0){if(console.warn("THREE.XHRLoader: HTTP Status 0 received."),$)$(U);Y.manager.itemEnd(J)}else{if(K)K(W);Y.manager.itemError(J)}},!1),Z!==void 0)G.addEventListener("progress",function(W){Z(W)},!1);if(G.addEventListener("error",function(W){if(K)K(W);Y.manager.itemError(J)},!1),this.responseType!==void 0)G.responseType=this.responseType;if(this.withCredentials!==void 0)G.withCredentials=this.withCredentials;return G.send(null),Y.manager.itemStart(J),G},setPath:function(J){this.path=J},setResponseType:function(J){this.responseType=J},setWithCredentials:function(J){this.withCredentials=J}};Q.FontLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager};Q.FontLoader.prototype={constructor:Q.FontLoader,load:function(J,$,Z,K){var Y=this,X=new Q.XHRLoader(this.manager);X.load(J,function(G){var W;try{W=JSON.parse(G)}catch(D){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),W=JSON.parse(G.substring(65,G.length-2))}var U=Y.parse(W);if($)$(U)},Z,K)},parse:function(J){return new Q.Font(J)}};Q.ImageLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager};Q.ImageLoader.prototype={constructor:Q.ImageLoader,load:function(J,$,Z,K){if(this.path!==void 0)J=this.path+J;var Y=this,X=Q.Cache.get(J);if(X!==void 0){if(Y.manager.itemStart(J),$)setTimeout(function(){$(X),Y.manager.itemEnd(J)},0);else Y.manager.itemEnd(J);return X}var G=document.createElement("img");if(G.addEventListener("load",function(W){if(Q.Cache.add(J,this),$)$(this);Y.manager.itemEnd(J)},!1),Z!==void 0)G.addEventListener("progress",function(W){Z(W)},!1);if(G.addEventListener("error",function(W){if(K)K(W);Y.manager.itemError(J)},!1),this.crossOrigin!==void 0)G.crossOrigin=this.crossOrigin;return Y.manager.itemStart(J),G.src=J,G},setCrossOrigin:function(J){this.crossOrigin=J},setPath:function(J){this.path=J}};Q.JSONLoader=function(J){if(typeof J==="boolean")console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),J=void 0;this.manager=J!==void 0?J:Q.DefaultLoadingManager,this.withCredentials=!1};Q.JSONLoader.prototype={constructor:Q.JSONLoader,get statusDomElement(){if(this._statusDomElement===void 0)this._statusDomElement=document.createElement("div");return console.warn("THREE.JSONLoader: .statusDomElement has been removed."),this._statusDomElement},load:function(J,$,Z,K){var Y=this,X=this.texturePath&&typeof this.texturePath==="string"?this.texturePath:Q.Loader.prototype.extractUrlBase(J),G=new Q.XHRLoader(this.manager);G.setWithCredentials(this.withCredentials),G.load(J,function(W){var U=JSON.parse(W),D=U.metadata;if(D!==void 0){var N=D.type;if(N!==void 0){if(N.toLowerCase()==="object"){console.error("THREE.JSONLoader: "+J+" should be loaded with THREE.ObjectLoader instead.");return}if(N.toLowerCase()==="scene"){console.error("THREE.JSONLoader: "+J+" should be loaded with THREE.SceneLoader instead.");return}}}var B=Y.parse(U,X);$(B.geometry,B.materials)},Z,K)},setTexturePath:function(J){this.texturePath=J},parse:function(J,$){var Z=new Q.Geometry,K=J.scale!==void 0?1/J.scale:1;Y(K),X(),G(K),W(),Z.computeFaceNormals(),Z.computeBoundingSphere();function Y(D){function N(i,QJ){return i&1<<QJ}var B,q,V,M,z,F,L,A,C,w,_,x,H,v,b,R,u,E,h,c,S,T,f,l,s,r,n,j=J.faces,P=J.vertices,d=J.normals,m=J.colors,o=0;if(J.uvs!==void 0){for(B=0;B<J.uvs.length;B++)if(J.uvs[B].length)o++;for(B=0;B<o;B++)Z.faceVertexUvs[B]=[]}M=0,z=P.length;while(M<z)E=new Q.Vector3,E.x=P[M++]*D,E.y=P[M++]*D,E.z=P[M++]*D,Z.vertices.push(E);M=0,z=j.length;while(M<z)if(w=j[M++],_=N(w,0),x=N(w,1),H=N(w,3),v=N(w,4),b=N(w,5),R=N(w,6),u=N(w,7),_){if(c=new Q.Face3,c.a=j[M],c.b=j[M+1],c.c=j[M+3],S=new Q.Face3,S.a=j[M+1],S.b=j[M+2],S.c=j[M+3],M+=4,x)C=j[M++],c.materialIndex=C,S.materialIndex=C;if(V=Z.faces.length,H)for(B=0;B<o;B++){l=J.uvs[B],Z.faceVertexUvs[B][V]=[],Z.faceVertexUvs[B][V+1]=[];for(q=0;q<4;q++){if(A=j[M++],r=l[A*2],n=l[A*2+1],s=new Q.Vector2(r,n),q!==2)Z.faceVertexUvs[B][V].push(s);if(q!==0)Z.faceVertexUvs[B][V+1].push(s)}}if(v)L=j[M++]*3,c.normal.set(d[L++],d[L++],d[L]),S.normal.copy(c.normal);if(b)for(B=0;B<4;B++){if(L=j[M++]*3,f=new Q.Vector3(d[L++],d[L++],d[L]),B!==2)c.vertexNormals.push(f);if(B!==0)S.vertexNormals.push(f)}if(R)F=j[M++],T=m[F],c.color.setHex(T),S.color.setHex(T);if(u)for(B=0;B<4;B++){if(F=j[M++],T=m[F],B!==2)c.vertexColors.push(new Q.Color(T));if(B!==0)S.vertexColors.push(new Q.Color(T))}Z.faces.push(c),Z.faces.push(S)}else{if(h=new Q.Face3,h.a=j[M++],h.b=j[M++],h.c=j[M++],x)C=j[M++],h.materialIndex=C;if(V=Z.faces.length,H)for(B=0;B<o;B++){l=J.uvs[B],Z.faceVertexUvs[B][V]=[];for(q=0;q<3;q++)A=j[M++],r=l[A*2],n=l[A*2+1],s=new Q.Vector2(r,n),Z.faceVertexUvs[B][V].push(s)}if(v)L=j[M++]*3,h.normal.set(d[L++],d[L++],d[L]);if(b)for(B=0;B<3;B++)L=j[M++]*3,f=new Q.Vector3(d[L++],d[L++],d[L]),h.vertexNormals.push(f);if(R)F=j[M++],h.color.setHex(m[F]);if(u)for(B=0;B<3;B++)F=j[M++],h.vertexColors.push(new Q.Color(m[F]));Z.faces.push(h)}}function X(){var D=J.influencesPerVertex!==void 0?J.influencesPerVertex:2;if(J.skinWeights)for(var N=0,B=J.skinWeights.length;N<B;N+=D){var q=J.skinWeights[N],V=D>1?J.skinWeights[N+1]:0,M=D>2?J.skinWeights[N+2]:0,z=D>3?J.skinWeights[N+3]:0;Z.skinWeights.push(new Q.Vector4(q,V,M,z))}if(J.skinIndices)for(var N=0,B=J.skinIndices.length;N<B;N+=D){var F=J.skinIndices[N],L=D>1?J.skinIndices[N+1]:0,A=D>2?J.skinIndices[N+2]:0,C=D>3?J.skinIndices[N+3]:0;Z.skinIndices.push(new Q.Vector4(F,L,A,C))}if(Z.bones=J.bones,Z.bones&&Z.bones.length>0&&(Z.skinWeights.length!==Z.skinIndices.length||Z.skinIndices.length!==Z.vertices.length))console.warn("When skinning, number of vertices ("+Z.vertices.length+"), skinIndices ("+Z.skinIndices.length+"), and skinWeights ("+Z.skinWeights.length+") should match.")}function G(D){if(J.morphTargets!==void 0)for(var N=0,B=J.morphTargets.length;N<B;N++){Z.morphTargets[N]={},Z.morphTargets[N].name=J.morphTargets[N].name,Z.morphTargets[N].vertices=[];var q=Z.morphTargets[N].vertices,V=J.morphTargets[N].vertices;for(var M=0,z=V.length;M<z;M+=3){var F=new Q.Vector3;F.x=V[M]*D,F.y=V[M+1]*D,F.z=V[M+2]*D,q.push(F)}}if(J.morphColors!==void 0&&J.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var L=Z.faces,A=J.morphColors[0].colors;for(var N=0,B=L.length;N<B;N++)L[N].color.fromArray(A,N*3)}}function W(){var D=[],N=[];if(J.animation!==void 0)N.push(J.animation);if(J.animations!==void 0)if(J.animations.length)N=N.concat(J.animations);else N.push(J.animations);for(var B=0;B<N.length;B++){var q=Q.AnimationClip.parseAnimation(N[B],Z.bones);if(q)D.push(q)}if(Z.morphTargets){var V=Q.AnimationClip.CreateClipsFromMorphTargetSequences(Z.morphTargets,10);D=D.concat(V)}if(D.length>0)Z.animations=D}if(J.materials===void 0||J.materials.length===0)return{geometry:Z};else{var U=Q.Loader.prototype.initMaterials(J.materials,$,this.crossOrigin);return{geometry:Z,materials:U}}}};Q.LoadingManager=function(J,$,Z){var K=this,Y=!1,X=0,G=0;this.onStart=void 0,this.onLoad=J,this.onProgress=$,this.onError=Z,this.itemStart=function(W){if(G++,Y===!1){if(K.onStart!==void 0)K.onStart(W,X,G)}Y=!0},this.itemEnd=function(W){if(X++,K.onProgress!==void 0)K.onProgress(W,X,G);if(X===G){if(Y=!1,K.onLoad!==void 0)K.onLoad()}},this.itemError=function(W){if(K.onError!==void 0)K.onError(W)}};Q.DefaultLoadingManager=new Q.LoadingManager;Q.BufferGeometryLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager};Q.BufferGeometryLoader.prototype={constructor:Q.BufferGeometryLoader,load:function(J,$,Z,K){var Y=this,X=new Q.XHRLoader(Y.manager);X.load(J,function(G){$(Y.parse(JSON.parse(G)))},Z,K)},parse:function(J){var $=new Q.BufferGeometry,Z=J.data.index,K={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};if(Z!==void 0){var Y=new K[Z.type](Z.array);$.setIndex(new Q.BufferAttribute(Y,1))}var X=J.data.attributes;for(var G in X){var W=X[G],Y=new K[W.type](W.array);$.addAttribute(G,new Q.BufferAttribute(Y,W.itemSize,W.normalized))}var U=J.data.groups||J.data.drawcalls||J.data.offsets;if(U!==void 0)for(var D=0,N=U.length;D!==N;++D){var B=U[D];$.addGroup(B.start,B.count,B.materialIndex)}var q=J.data.boundingSphere;if(q!==void 0){var V=new Q.Vector3;if(q.center!==void 0)V.fromArray(q.center);$.boundingSphere=new Q.Sphere(V,q.radius)}return $}};Q.MaterialLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager,this.textures={}};Q.MaterialLoader.prototype={constructor:Q.MaterialLoader,load:function(J,$,Z,K){var Y=this,X=new Q.XHRLoader(Y.manager);X.load(J,function(G){$(Y.parse(JSON.parse(G)))},Z,K)},setTextures:function(J){this.textures=J},getTexture:function(J){var $=this.textures;if($[J]===void 0)console.warn("THREE.MaterialLoader: Undefined texture",J);return $[J]},parse:function(J){var $=new Q[J.type];if(J.uuid!==void 0)$.uuid=J.uuid;if(J.name!==void 0)$.name=J.name;if(J.color!==void 0)$.color.setHex(J.color);if(J.roughness!==void 0)$.roughness=J.roughness;if(J.metalness!==void 0)$.metalness=J.metalness;if(J.emissive!==void 0)$.emissive.setHex(J.emissive);if(J.specular!==void 0)$.specular.setHex(J.specular);if(J.shininess!==void 0)$.shininess=J.shininess;if(J.uniforms!==void 0)$.uniforms=J.uniforms;if(J.vertexShader!==void 0)$.vertexShader=J.vertexShader;if(J.fragmentShader!==void 0)$.fragmentShader=J.fragmentShader;if(J.vertexColors!==void 0)$.vertexColors=J.vertexColors;if(J.shading!==void 0)$.shading=J.shading;if(J.blending!==void 0)$.blending=J.blending;if(J.side!==void 0)$.side=J.side;if(J.opacity!==void 0)$.opacity=J.opacity;if(J.transparent!==void 0)$.transparent=J.transparent;if(J.alphaTest!==void 0)$.alphaTest=J.alphaTest;if(J.depthTest!==void 0)$.depthTest=J.depthTest;if(J.depthWrite!==void 0)$.depthWrite=J.depthWrite;if(J.colorWrite!==void 0)$.colorWrite=J.colorWrite;if(J.wireframe!==void 0)$.wireframe=J.wireframe;if(J.wireframeLinewidth!==void 0)$.wireframeLinewidth=J.wireframeLinewidth;if(J.size!==void 0)$.size=J.size;if(J.sizeAttenuation!==void 0)$.sizeAttenuation=J.sizeAttenuation;if(J.map!==void 0)$.map=this.getTexture(J.map);if(J.alphaMap!==void 0)$.alphaMap=this.getTexture(J.alphaMap),$.transparent=!0;if(J.bumpMap!==void 0)$.bumpMap=this.getTexture(J.bumpMap);if(J.bumpScale!==void 0)$.bumpScale=J.bumpScale;if(J.normalMap!==void 0)$.normalMap=this.getTexture(J.normalMap);if(J.normalScale!==void 0){var Z=J.normalScale;if(Array.isArray(Z)===!1)Z=[Z,Z];$.normalScale=new Q.Vector2().fromArray(Z)}if(J.displacementMap!==void 0)$.displacementMap=this.getTexture(J.displacementMap);if(J.displacementScale!==void 0)$.displacementScale=J.displacementScale;if(J.displacementBias!==void 0)$.displacementBias=J.displacementBias;if(J.roughnessMap!==void 0)$.roughnessMap=this.getTexture(J.roughnessMap);if(J.metalnessMap!==void 0)$.metalnessMap=this.getTexture(J.metalnessMap);if(J.emissiveMap!==void 0)$.emissiveMap=this.getTexture(J.emissiveMap);if(J.emissiveIntensity!==void 0)$.emissiveIntensity=J.emissiveIntensity;if(J.specularMap!==void 0)$.specularMap=this.getTexture(J.specularMap);if(J.envMap!==void 0)$.envMap=this.getTexture(J.envMap),$.combine=Q.MultiplyOperation;if(J.reflectivity)$.reflectivity=J.reflectivity;if(J.lightMap!==void 0)$.lightMap=this.getTexture(J.lightMap);if(J.lightMapIntensity!==void 0)$.lightMapIntensity=J.lightMapIntensity;if(J.aoMap!==void 0)$.aoMap=this.getTexture(J.aoMap);if(J.aoMapIntensity!==void 0)$.aoMapIntensity=J.aoMapIntensity;if(J.materials!==void 0)for(var K=0,Y=J.materials.length;K<Y;K++)$.materials.push(this.parse(J.materials[K]));return $}};Q.ObjectLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager,this.texturePath=""};Q.ObjectLoader.prototype={constructor:Q.ObjectLoader,load:function(J,$,Z,K){if(this.texturePath==="")this.texturePath=J.substring(0,J.lastIndexOf("/")+1);var Y=this,X=new Q.XHRLoader(Y.manager);X.load(J,function(G){Y.parse(JSON.parse(G),$)},Z,K)},setTexturePath:function(J){this.texturePath=J},setCrossOrigin:function(J){this.crossOrigin=J},parse:function(J,$){var Z=this.parseGeometries(J.geometries),K=this.parseImages(J.images,function(){if($!==void 0)$(G)}),Y=this.parseTextures(J.textures,K),X=this.parseMaterials(J.materials,Y),G=this.parseObject(J.object,Z,X);if(J.animations)G.animations=this.parseAnimations(J.animations);if(J.images===void 0||J.images.length===0){if($!==void 0)$(G)}return G},parseGeometries:function(J){var $={};if(J!==void 0){var Z=new Q.JSONLoader,K=new Q.BufferGeometryLoader;for(var Y=0,X=J.length;Y<X;Y++){var G,W=J[Y];switch(W.type){case"PlaneGeometry":case"PlaneBufferGeometry":G=new Q[W.type](W.width,W.height,W.widthSegments,W.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":G=new Q[W.type](W.width,W.height,W.depth,W.widthSegments,W.heightSegments,W.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":G=new Q[W.type](W.radius,W.segments,W.thetaStart,W.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":G=new Q[W.type](W.radiusTop,W.radiusBottom,W.height,W.radialSegments,W.heightSegments,W.openEnded,W.thetaStart,W.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":G=new Q[W.type](W.radius,W.height,W.radialSegments,W.heightSegments,W.openEnded,W.thetaStart,W.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":G=new Q[W.type](W.radius,W.widthSegments,W.heightSegments,W.phiStart,W.phiLength,W.thetaStart,W.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":G=new Q[W.type](W.radius,W.detail);break;case"RingGeometry":case"RingBufferGeometry":G=new Q[W.type](W.innerRadius,W.outerRadius,W.thetaSegments,W.phiSegments,W.thetaStart,W.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":G=new Q[W.type](W.radius,W.tube,W.radialSegments,W.tubularSegments,W.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":G=new Q[W.type](W.radius,W.tube,W.tubularSegments,W.radialSegments,W.p,W.q);break;case"LatheGeometry":case"LatheBufferGeometry":G=new Q[W.type](W.points,W.segments,W.phiStart,W.phiLength);break;case"BufferGeometry":G=K.parse(W);break;case"Geometry":G=Z.parse(W.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+W.type+'"');continue}if(G.uuid=W.uuid,W.name!==void 0)G.name=W.name;$[W.uuid]=G}}return $},parseMaterials:function(J,$){var Z={};if(J!==void 0){var K=new Q.MaterialLoader;K.setTextures($);for(var Y=0,X=J.length;Y<X;Y++){var G=K.parse(J[Y]);Z[G.uuid]=G}}return Z},parseAnimations:function(J){var $=[];for(var Z=0;Z<J.length;Z++){var K=Q.AnimationClip.parse(J[Z]);$.push(K)}return $},parseImages:function(J,$){var Z=this,K={};function Y(B){return Z.manager.itemStart(B),G.load(B,function(){Z.manager.itemEnd(B)})}if(J!==void 0&&J.length>0){var X=new Q.LoadingManager($),G=new Q.ImageLoader(X);G.setCrossOrigin(this.crossOrigin);for(var W=0,U=J.length;W<U;W++){var D=J[W],N=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(D.url)?D.url:Z.texturePath+D.url;K[D.uuid]=Y(N)}}return K},parseTextures:function(J,$){function Z(U){if(typeof U==="number")return U;return console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",U),Q[U]}var K={};if(J!==void 0)for(var Y=0,X=J.length;Y<X;Y++){var G=J[Y];if(G.image===void 0)console.warn('THREE.ObjectLoader: No "image" specified for',G.uuid);if($[G.image]===void 0)console.warn("THREE.ObjectLoader: Undefined image",G.image);var W=new Q.Texture($[G.image]);if(W.needsUpdate=!0,W.uuid=G.uuid,G.name!==void 0)W.name=G.name;if(G.mapping!==void 0)W.mapping=Z(G.mapping);if(G.offset!==void 0)W.offset=new Q.Vector2(G.offset[0],G.offset[1]);if(G.repeat!==void 0)W.repeat=new Q.Vector2(G.repeat[0],G.repeat[1]);if(G.minFilter!==void 0)W.minFilter=Z(G.minFilter);if(G.magFilter!==void 0)W.magFilter=Z(G.magFilter);if(G.anisotropy!==void 0)W.anisotropy=G.anisotropy;if(Array.isArray(G.wrap))W.wrapS=Z(G.wrap[0]),W.wrapT=Z(G.wrap[1]);K[G.uuid]=W}return K},parseObject:function(){var J=new Q.Matrix4;return function($,Z,K){var Y;function X(V){if(Z[V]===void 0)console.warn("THREE.ObjectLoader: Undefined geometry",V);return Z[V]}function G(V){if(V===void 0)return;if(K[V]===void 0)console.warn("THREE.ObjectLoader: Undefined material",V);return K[V]}switch($.type){case"Scene":Y=new Q.Scene;break;case"PerspectiveCamera":if(Y=new Q.PerspectiveCamera($.fov,$.aspect,$.near,$.far),$.focus!==void 0)Y.focus=$.focus;if($.zoom!==void 0)Y.zoom=$.zoom;if($.filmGauge!==void 0)Y.filmGauge=$.filmGauge;if($.filmOffset!==void 0)Y.filmOffset=$.filmOffset;if($.view!==void 0)Y.view=Object.assign({},$.view);break;case"OrthographicCamera":Y=new Q.OrthographicCamera($.left,$.right,$.top,$.bottom,$.near,$.far);break;case"AmbientLight":Y=new Q.AmbientLight($.color,$.intensity);break;case"DirectionalLight":Y=new Q.DirectionalLight($.color,$.intensity);break;case"PointLight":Y=new Q.PointLight($.color,$.intensity,$.distance,$.decay);break;case"SpotLight":Y=new Q.SpotLight($.color,$.intensity,$.distance,$.angle,$.penumbra,$.decay);break;case"HemisphereLight":Y=new Q.HemisphereLight($.color,$.groundColor,$.intensity);break;case"Mesh":var W=X($.geometry),U=G($.material);if(W.bones&&W.bones.length>0)Y=new Q.SkinnedMesh(W,U);else Y=new Q.Mesh(W,U);break;case"LOD":Y=new Q.LOD;break;case"Line":Y=new Q.Line(X($.geometry),G($.material),$.mode);break;case"PointCloud":case"Points":Y=new Q.Points(X($.geometry),G($.material));break;case"Sprite":Y=new Q.Sprite(G($.material));break;case"Group":Y=new Q.Group;break;default:Y=new Q.Object3D}if(Y.uuid=$.uuid,$.name!==void 0)Y.name=$.name;if($.matrix!==void 0)J.fromArray($.matrix),J.decompose(Y.position,Y.quaternion,Y.scale);else{if($.position!==void 0)Y.position.fromArray($.position);if($.rotation!==void 0)Y.rotation.fromArray($.rotation);if($.scale!==void 0)Y.scale.fromArray($.scale)}if($.castShadow!==void 0)Y.castShadow=$.castShadow;if($.receiveShadow!==void 0)Y.receiveShadow=$.receiveShadow;if($.visible!==void 0)Y.visible=$.visible;if($.userData!==void 0)Y.userData=$.userData;if($.children!==void 0)for(var D in $.children)Y.add(this.parseObject($.children[D],Z,K));if($.type==="LOD"){var N=$.levels;for(var B=0;B<N.length;B++){var q=N[B],D=Y.getObjectByProperty("uuid",q.object);if(D!==void 0)Y.addLevel(D,q.distance)}}return Y}}()};Q.TextureLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager};Q.TextureLoader.prototype={constructor:Q.TextureLoader,load:function(J,$,Z,K){var Y=new Q.Texture,X=new Q.ImageLoader(this.manager);return X.setCrossOrigin(this.crossOrigin),X.setPath(this.path),X.load(J,function(G){if(Y.image=G,Y.needsUpdate=!0,$!==void 0)$(Y)},Z,K),Y},setCrossOrigin:function(J){this.crossOrigin=J},setPath:function(J){this.path=J}};Q.CubeTextureLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager};Q.CubeTextureLoader.prototype={constructor:Q.CubeTextureLoader,load:function(J,$,Z,K){var Y=new Q.CubeTexture,X=new Q.ImageLoader(this.manager);X.setCrossOrigin(this.crossOrigin),X.setPath(this.path);var G=0;function W(D){X.load(J[D],function(N){if(Y.images[D]=N,G++,G===6){if(Y.needsUpdate=!0,$)$(Y)}},void 0,K)}for(var U=0;U<J.length;++U)W(U);return Y},setCrossOrigin:function(J){this.crossOrigin=J},setPath:function(J){this.path=J}};Q.DataTextureLoader=Q.BinaryTextureLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager,this._parser=null};Q.BinaryTextureLoader.prototype={constructor:Q.BinaryTextureLoader,load:function(J,$,Z,K){var Y=this,X=new Q.DataTexture,G=new Q.XHRLoader(this.manager);return G.setResponseType("arraybuffer"),G.load(J,function(W){var U=Y._parser(W);if(!U)return;if(U.image!==void 0)X.image=U.image;else if(U.data!==void 0)X.image.width=U.width,X.image.height=U.height,X.image.data=U.data;if(X.wrapS=U.wrapS!==void 0?U.wrapS:Q.ClampToEdgeWrapping,X.wrapT=U.wrapT!==void 0?U.wrapT:Q.ClampToEdgeWrapping,X.magFilter=U.magFilter!==void 0?U.magFilter:Q.LinearFilter,X.minFilter=U.minFilter!==void 0?U.minFilter:Q.LinearMipMapLinearFilter,X.anisotropy=U.anisotropy!==void 0?U.anisotropy:1,U.format!==void 0)X.format=U.format;if(U.type!==void 0)X.type=U.type;if(U.mipmaps!==void 0)X.mipmaps=U.mipmaps;if(U.mipmapCount===1)X.minFilter=Q.LinearFilter;if(X.needsUpdate=!0,$)$(X,U)},Z,K),X}};Q.CompressedTextureLoader=function(J){this.manager=J!==void 0?J:Q.DefaultLoadingManager,this._parser=null};Q.CompressedTextureLoader.prototype={constructor:Q.CompressedTextureLoader,load:function(J,$,Z,K){var Y=this,X=[],G=new Q.CompressedTexture;G.image=X;var W=new Q.XHRLoader(this.manager);W.setPath(this.path),W.setResponseType("arraybuffer");function U(q){W.load(J[q],function(V){var M=Y._parser(V,!0);if(X[q]={width:M.width,height:M.height,format:M.format,mipmaps:M.mipmaps},D+=1,D===6){if(M.mipmapCount===1)G.minFilter=Q.LinearFilter;if(G.format=M.format,G.needsUpdate=!0,$)$(G)}},Z,K)}if(Array.isArray(J)){var D=0;for(var N=0,B=J.length;N<B;++N)U(N)}else W.load(J,function(q){var V=Y._parser(q,!0);if(V.isCubemap){var M=V.mipmaps.length/V.mipmapCount;for(var z=0;z<M;z++){X[z]={mipmaps:[]};for(var F=0;F<V.mipmapCount;F++)X[z].mipmaps.push(V.mipmaps[z*V.mipmapCount+F]),X[z].format=V.format,X[z].width=V.width,X[z].height=V.height}}else G.image.width=V.width,G.image.height=V.height,G.mipmaps=V.mipmaps;if(V.mipmapCount===1)G.minFilter=Q.LinearFilter;if(G.format=V.format,G.needsUpdate=!0,$)$(G)},Z,K);return G},setPath:function(J){this.path=J}};Q.Material=function(){Object.defineProperty(this,"id",{value:Q.MaterialIdCount++}),this.uuid=Q.Math.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=Q.NormalBlending,this.side=Q.FrontSide,this.shading=Q.SmoothShading,this.vertexColors=Q.NoColors,this.opacity=1,this.transparent=!1,this.blendSrc=Q.SrcAlphaFactor,this.blendDst=Q.OneMinusSrcAlphaFactor,this.blendEquation=Q.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Q.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0};Q.Material.prototype={constructor:Q.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(J){if(J===!0)this.update();this._needsUpdate=J},setValues:function(J){if(J===void 0)return;for(var $ in J){var Z=J[$];if(Z===void 0){console.warn("THREE.Material: '"+$+"' parameter is undefined.");continue}var K=this[$];if(K===void 0){console.warn("THREE."+this.type+": '"+$+"' is not a property of this material.");continue}if(K instanceof Q.Color)K.set(Z);else if(K instanceof Q.Vector3&&Z instanceof Q.Vector3)K.copy(Z);else if($==="overdraw")this[$]=Number(Z);else this[$]=Z}},toJSON:function(J){var $=J===void 0;if($)J={textures:{},images:{}};var Z={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};if(Z.uuid=this.uuid,Z.type=this.type,this.name!=="")Z.name=this.name;if(this.color instanceof Q.Color)Z.color=this.color.getHex();if(this.roughness!==0.5)Z.roughness=this.roughness;if(this.metalness!==0.5)Z.metalness=this.metalness;if(this.emissive instanceof Q.Color)Z.emissive=this.emissive.getHex();if(this.specular instanceof Q.Color)Z.specular=this.specular.getHex();if(this.shininess!==void 0)Z.shininess=this.shininess;if(this.map instanceof Q.Texture)Z.map=this.map.toJSON(J).uuid;if(this.alphaMap instanceof Q.Texture)Z.alphaMap=this.alphaMap.toJSON(J).uuid;if(this.lightMap instanceof Q.Texture)Z.lightMap=this.lightMap.toJSON(J).uuid;if(this.bumpMap instanceof Q.Texture)Z.bumpMap=this.bumpMap.toJSON(J).uuid,Z.bumpScale=this.bumpScale;if(this.normalMap instanceof Q.Texture)Z.normalMap=this.normalMap.toJSON(J).uuid,Z.normalScale=this.normalScale.toArray();if(this.displacementMap instanceof Q.Texture)Z.displacementMap=this.displacementMap.toJSON(J).uuid,Z.displacementScale=this.displacementScale,Z.displacementBias=this.displacementBias;if(this.roughnessMap instanceof Q.Texture)Z.roughnessMap=this.roughnessMap.toJSON(J).uuid;if(this.metalnessMap instanceof Q.Texture)Z.metalnessMap=this.metalnessMap.toJSON(J).uuid;if(this.emissiveMap instanceof Q.Texture)Z.emissiveMap=this.emissiveMap.toJSON(J).uuid;if(this.specularMap instanceof Q.Texture)Z.specularMap=this.specularMap.toJSON(J).uuid;if(this.envMap instanceof Q.Texture)Z.envMap=this.envMap.toJSON(J).uuid,Z.reflectivity=this.reflectivity;if(this.size!==void 0)Z.size=this.size;if(this.sizeAttenuation!==void 0)Z.sizeAttenuation=this.sizeAttenuation;if(this.blending!==Q.NormalBlending)Z.blending=this.blending;if(this.shading!==Q.SmoothShading)Z.shading=this.shading;if(this.side!==Q.FrontSide)Z.side=this.side;if(this.vertexColors!==Q.NoColors)Z.vertexColors=this.vertexColors;if(this.opacity<1)Z.opacity=this.opacity;if(this.transparent===!0)Z.transparent=this.transparent;if(this.alphaTest>0)Z.alphaTest=this.alphaTest;if(this.premultipliedAlpha===!0)Z.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===!0)Z.wireframe=this.wireframe;if(this.wireframeLinewidth>1)Z.wireframeLinewidth=this.wireframeLinewidth;function K(G){var W=[];for(var U in G){var D=G[U];delete D.metadata,W.push(D)}return W}if($){var Y=K(J.textures),X=K(J.images);if(Y.length>0)Z.textures=Y;if(X.length>0)Z.images=X}return Z},clone:function(){return new this.constructor().copy(this)},copy:function(J){this.name=J.name,this.fog=J.fog,this.lights=J.lights,this.blending=J.blending,this.side=J.side,this.vertexColors=J.vertexColors,this.opacity=J.opacity,this.transparent=J.transparent,this.blendSrc=J.blendSrc,this.blendDst=J.blendDst,this.blendEquation=J.blendEquation,this.blendSrcAlpha=J.blendSrcAlpha,this.blendDstAlpha=J.blendDstAlpha,this.blendEquationAlpha=J.blendEquationAlpha,this.depthFunc=J.depthFunc,this.depthTest=J.depthTest,this.depthWrite=J.depthWrite,this.colorWrite=J.colorWrite,this.precision=J.precision,this.polygonOffset=J.polygonOffset,this.polygonOffsetFactor=J.polygonOffsetFactor,this.polygonOffsetUnits=J.polygonOffsetUnits,this.alphaTest=J.alphaTest,this.premultipliedAlpha=J.premultipliedAlpha,this.overdraw=J.overdraw,this.visible=J.visible,this.clipShadows=J.clipShadows;var $=J.clippingPlanes,Z=null;if($!==null){var K=$.length;Z=new Array(K);for(var Y=0;Y!==K;++Y)Z[Y]=$[Y].clone()}return this.clippingPlanes=Z,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};Object.assign(Q.Material.prototype,Q.EventDispatcher.prototype);Q.MaterialIdCount=0;Q.LineBasicMaterial=function(J){Q.Material.call(this),this.type="LineBasicMaterial",this.color=new Q.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(J)};Q.LineBasicMaterial.prototype=Object.create(Q.Material.prototype);Q.LineBasicMaterial.prototype.constructor=Q.LineBasicMaterial;Q.LineBasicMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.color.copy(J.color),this.linewidth=J.linewidth,this.linecap=J.linecap,this.linejoin=J.linejoin,this};Q.LineDashedMaterial=function(J){Q.Material.call(this),this.type="LineDashedMaterial",this.color=new Q.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.lights=!1,this.setValues(J)};Q.LineDashedMaterial.prototype=Object.create(Q.Material.prototype);Q.LineDashedMaterial.prototype.constructor=Q.LineDashedMaterial;Q.LineDashedMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.color.copy(J.color),this.linewidth=J.linewidth,this.scale=J.scale,this.dashSize=J.dashSize,this.gapSize=J.gapSize,this};Q.MeshBasicMaterial=function(J){Q.Material.call(this),this.type="MeshBasicMaterial",this.color=new Q.Color(16777215),this.map=null,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Q.MultiplyOperation,this.reflectivity=1,this.refractionRatio=0.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(J)};Q.MeshBasicMaterial.prototype=Object.create(Q.Material.prototype);Q.MeshBasicMaterial.prototype.constructor=Q.MeshBasicMaterial;Q.MeshBasicMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.color.copy(J.color),this.map=J.map,this.aoMap=J.aoMap,this.aoMapIntensity=J.aoMapIntensity,this.specularMap=J.specularMap,this.alphaMap=J.alphaMap,this.envMap=J.envMap,this.combine=J.combine,this.reflectivity=J.reflectivity,this.refractionRatio=J.refractionRatio,this.wireframe=J.wireframe,this.wireframeLinewidth=J.wireframeLinewidth,this.wireframeLinecap=J.wireframeLinecap,this.wireframeLinejoin=J.wireframeLinejoin,this.skinning=J.skinning,this.morphTargets=J.morphTargets,this};Q.MeshDepthMaterial=function(J){Q.Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=Q.BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(J)};Q.MeshDepthMaterial.prototype=Object.create(Q.Material.prototype);Q.MeshDepthMaterial.prototype.constructor=Q.MeshDepthMaterial;Q.MeshDepthMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.depthPacking=J.depthPacking,this.skinning=J.skinning,this.morphTargets=J.morphTargets,this.map=J.map,this.alphaMap=J.alphaMap,this.displacementMap=J.displacementMap,this.displacementScale=J.displacementScale,this.displacementBias=J.displacementBias,this.wireframe=J.wireframe,this.wireframeLinewidth=J.wireframeLinewidth,this};Q.MeshLambertMaterial=function(J){Q.Material.call(this),this.type="MeshLambertMaterial",this.color=new Q.Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Q.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Q.MultiplyOperation,this.reflectivity=1,this.refractionRatio=0.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(J)};Q.MeshLambertMaterial.prototype=Object.create(Q.Material.prototype);Q.MeshLambertMaterial.prototype.constructor=Q.MeshLambertMaterial;Q.MeshLambertMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.color.copy(J.color),this.map=J.map,this.lightMap=J.lightMap,this.lightMapIntensity=J.lightMapIntensity,this.aoMap=J.aoMap,this.aoMapIntensity=J.aoMapIntensity,this.emissive.copy(J.emissive),this.emissiveMap=J.emissiveMap,this.emissiveIntensity=J.emissiveIntensity,this.specularMap=J.specularMap,this.alphaMap=J.alphaMap,this.envMap=J.envMap,this.combine=J.combine,this.reflectivity=J.reflectivity,this.refractionRatio=J.refractionRatio,this.wireframe=J.wireframe,this.wireframeLinewidth=J.wireframeLinewidth,this.wireframeLinecap=J.wireframeLinecap,this.wireframeLinejoin=J.wireframeLinejoin,this.skinning=J.skinning,this.morphTargets=J.morphTargets,this.morphNormals=J.morphNormals,this};Q.MeshNormalMaterial=function(J){Q.Material.call(this,J),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.morphTargets=!1,this.setValues(J)};Q.MeshNormalMaterial.prototype=Object.create(Q.Material.prototype);Q.MeshNormalMaterial.prototype.constructor=Q.MeshNormalMaterial;Q.MeshNormalMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.wireframe=J.wireframe,this.wireframeLinewidth=J.wireframeLinewidth,this};Q.MeshPhongMaterial=function(J){Q.Material.call(this),this.type="MeshPhongMaterial",this.color=new Q.Color(16777215),this.specular=new Q.Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Q.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Q.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Q.MultiplyOperation,this.reflectivity=1,this.refractionRatio=0.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(J)};Q.MeshPhongMaterial.prototype=Object.create(Q.Material.prototype);Q.MeshPhongMaterial.prototype.constructor=Q.MeshPhongMaterial;Q.MeshPhongMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.color.copy(J.color),this.specular.copy(J.specular),this.shininess=J.shininess,this.map=J.map,this.lightMap=J.lightMap,this.lightMapIntensity=J.lightMapIntensity,this.aoMap=J.aoMap,this.aoMapIntensity=J.aoMapIntensity,this.emissive.copy(J.emissive),this.emissiveMap=J.emissiveMap,this.emissiveIntensity=J.emissiveIntensity,this.bumpMap=J.bumpMap,this.bumpScale=J.bumpScale,this.normalMap=J.normalMap,this.normalScale.copy(J.normalScale),this.displacementMap=J.displacementMap,this.displacementScale=J.displacementScale,this.displacementBias=J.displacementBias,this.specularMap=J.specularMap,this.alphaMap=J.alphaMap,this.envMap=J.envMap,this.combine=J.combine,this.reflectivity=J.reflectivity,this.refractionRatio=J.refractionRatio,this.wireframe=J.wireframe,this.wireframeLinewidth=J.wireframeLinewidth,this.wireframeLinecap=J.wireframeLinecap,this.wireframeLinejoin=J.wireframeLinejoin,this.skinning=J.skinning,this.morphTargets=J.morphTargets,this.morphNormals=J.morphNormals,this};Q.MeshStandardMaterial=function(J){Q.Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Q.Color(16777215),this.roughness=0.5,this.metalness=0.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Q.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Q.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=0.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(J)};Q.MeshStandardMaterial.prototype=Object.create(Q.Material.prototype);Q.MeshStandardMaterial.prototype.constructor=Q.MeshStandardMaterial;Q.MeshStandardMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.defines={STANDARD:""},this.color.copy(J.color),this.roughness=J.roughness,this.metalness=J.metalness,this.map=J.map,this.lightMap=J.lightMap,this.lightMapIntensity=J.lightMapIntensity,this.aoMap=J.aoMap,this.aoMapIntensity=J.aoMapIntensity,this.emissive.copy(J.emissive),this.emissiveMap=J.emissiveMap,this.emissiveIntensity=J.emissiveIntensity,this.bumpMap=J.bumpMap,this.bumpScale=J.bumpScale,this.normalMap=J.normalMap,this.normalScale.copy(J.normalScale),this.displacementMap=J.displacementMap,this.displacementScale=J.displacementScale,this.displacementBias=J.displacementBias,this.roughnessMap=J.roughnessMap,this.metalnessMap=J.metalnessMap,this.alphaMap=J.alphaMap,this.envMap=J.envMap,this.envMapIntensity=J.envMapIntensity,this.refractionRatio=J.refractionRatio,this.wireframe=J.wireframe,this.wireframeLinewidth=J.wireframeLinewidth,this.wireframeLinecap=J.wireframeLinecap,this.wireframeLinejoin=J.wireframeLinejoin,this.skinning=J.skinning,this.morphTargets=J.morphTargets,this.morphNormals=J.morphNormals,this};Q.MeshPhysicalMaterial=function(J){Q.MeshStandardMaterial.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=0.5,this.setValues(J)};Q.MeshPhysicalMaterial.prototype=Object.create(Q.MeshStandardMaterial.prototype);Q.MeshPhysicalMaterial.prototype.constructor=Q.MeshPhysicalMaterial;Q.MeshPhysicalMaterial.prototype.copy=function(J){return Q.MeshStandardMaterial.prototype.copy.call(this,J),this.defines={PHYSICAL:""},this.reflectivity=J.reflectivity,this};Q.MultiMaterial=function(J){this.uuid=Q.Math.generateUUID(),this.type="MultiMaterial",this.materials=J instanceof Array?J:[],this.visible=!0};Q.MultiMaterial.prototype={constructor:Q.MultiMaterial,toJSON:function(J){var $={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},Z=this.materials;for(var K=0,Y=Z.length;K<Y;K++){var X=Z[K].toJSON(J);delete X.metadata,$.materials.push(X)}return $.visible=this.visible,$},clone:function(){var J=new this.constructor;for(var $=0;$<this.materials.length;$++)J.materials.push(this.materials[$].clone());return J.visible=this.visible,J}};Q.PointsMaterial=function(J){Q.Material.call(this),this.type="PointsMaterial",this.color=new Q.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(J)};Q.PointsMaterial.prototype=Object.create(Q.Material.prototype);Q.PointsMaterial.prototype.constructor=Q.PointsMaterial;Q.PointsMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.color.copy(J.color),this.map=J.map,this.size=J.size,this.sizeAttenuation=J.sizeAttenuation,this};Q.ShaderMaterial=function(J){if(Q.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,this.fragmentShader=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,J!==void 0){if(J.attributes!==void 0)console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.");this.setValues(J)}};Q.ShaderMaterial.prototype=Object.create(Q.Material.prototype);Q.ShaderMaterial.prototype.constructor=Q.ShaderMaterial;Q.ShaderMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.fragmentShader=J.fragmentShader,this.vertexShader=J.vertexShader,this.uniforms=Q.UniformsUtils.clone(J.uniforms),this.defines=J.defines,this.wireframe=J.wireframe,this.wireframeLinewidth=J.wireframeLinewidth,this.lights=J.lights,this.clipping=J.clipping,this.skinning=J.skinning,this.morphTargets=J.morphTargets,this.morphNormals=J.morphNormals,this.extensions=J.extensions,this};Q.ShaderMaterial.prototype.toJSON=function(J){var $=Q.Material.prototype.toJSON.call(this,J);return $.uniforms=this.uniforms,$.vertexShader=this.vertexShader,$.fragmentShader=this.fragmentShader,$};Q.RawShaderMaterial=function(J){Q.ShaderMaterial.call(this,J),this.type="RawShaderMaterial"};Q.RawShaderMaterial.prototype=Object.create(Q.ShaderMaterial.prototype);Q.RawShaderMaterial.prototype.constructor=Q.RawShaderMaterial;Q.SpriteMaterial=function(J){Q.Material.call(this),this.type="SpriteMaterial",this.color=new Q.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(J)};Q.SpriteMaterial.prototype=Object.create(Q.Material.prototype);Q.SpriteMaterial.prototype.constructor=Q.SpriteMaterial;Q.SpriteMaterial.prototype.copy=function(J){return Q.Material.prototype.copy.call(this,J),this.color.copy(J.color),this.map=J.map,this.rotation=J.rotation,this};Q.ShadowMaterial=function(){Q.ShaderMaterial.call(this,{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.lights,{opacity:{value:1}}]),vertexShader:Q.ShaderChunk.shadow_vert,fragmentShader:Q.ShaderChunk.shadow_frag}),this.lights=!0,this.transparent=!0,Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(J){this.uniforms.opacity.value=J}}})};Q.ShadowMaterial.prototype=Object.create(Q.ShaderMaterial.prototype);Q.ShadowMaterial.prototype.constructor=Q.ShadowMaterial;Q.Texture=function(J,$,Z,K,Y,X,G,W,U,D){Object.defineProperty(this,"id",{value:Q.TextureIdCount++}),this.uuid=Q.Math.generateUUID(),this.name="",this.sourceFile="",this.image=J!==void 0?J:Q.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=$!==void 0?$:Q.Texture.DEFAULT_MAPPING,this.wrapS=Z!==void 0?Z:Q.ClampToEdgeWrapping,this.wrapT=K!==void 0?K:Q.ClampToEdgeWrapping,this.magFilter=Y!==void 0?Y:Q.LinearFilter,this.minFilter=X!==void 0?X:Q.LinearMipMapLinearFilter,this.anisotropy=U!==void 0?U:1,this.format=G!==void 0?G:Q.RGBAFormat,this.type=W!==void 0?W:Q.UnsignedByteType,this.offset=new Q.Vector2(0,0),this.repeat=new Q.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=D!==void 0?D:Q.LinearEncoding,this.version=0,this.onUpdate=null};Q.Texture.DEFAULT_IMAGE=void 0;Q.Texture.DEFAULT_MAPPING=Q.UVMapping;Q.Texture.prototype={constructor:Q.Texture,set needsUpdate(J){if(J===!0)this.version++},clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.image=J.image,this.mipmaps=J.mipmaps.slice(0),this.mapping=J.mapping,this.wrapS=J.wrapS,this.wrapT=J.wrapT,this.magFilter=J.magFilter,this.minFilter=J.minFilter,this.anisotropy=J.anisotropy,this.format=J.format,this.type=J.type,this.offset.copy(J.offset),this.repeat.copy(J.repeat),this.generateMipmaps=J.generateMipmaps,this.premultiplyAlpha=J.premultiplyAlpha,this.flipY=J.flipY,this.unpackAlignment=J.unpackAlignment,this.encoding=J.encoding,this},toJSON:function(J){if(J.textures[this.uuid]!==void 0)return J.textures[this.uuid];function $(Y){var X;if(Y.toDataURL!==void 0)X=Y;else X=document.createElement("canvas"),X.width=Y.width,X.height=Y.height,X.getContext("2d").drawImage(Y,0,0,Y.width,Y.height);if(X.width>2048||X.height>2048)return X.toDataURL("image/jpeg",0.6);else return X.toDataURL("image/png")}var Z={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(this.image!==void 0){var K=this.image;if(K.uuid===void 0)K.uuid=Q.Math.generateUUID();if(J.images[K.uuid]===void 0)J.images[K.uuid]={uuid:K.uuid,url:$(K)};Z.image=K.uuid}return J.textures[this.uuid]=Z,Z},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(J){if(this.mapping!==Q.UVMapping)return;if(J.multiply(this.repeat),J.add(this.offset),J.x<0||J.x>1)switch(this.wrapS){case Q.RepeatWrapping:J.x=J.x-Math.floor(J.x);break;case Q.ClampToEdgeWrapping:J.x=J.x<0?0:1;break;case Q.MirroredRepeatWrapping:if(Math.abs(Math.floor(J.x)%2)===1)J.x=Math.ceil(J.x)-J.x;else J.x=J.x-Math.floor(J.x);break}if(J.y<0||J.y>1)switch(this.wrapT){case Q.RepeatWrapping:J.y=J.y-Math.floor(J.y);break;case Q.ClampToEdgeWrapping:J.y=J.y<0?0:1;break;case Q.MirroredRepeatWrapping:if(Math.abs(Math.floor(J.y)%2)===1)J.y=Math.ceil(J.y)-J.y;else J.y=J.y-Math.floor(J.y);break}if(this.flipY)J.y=1-J.y}};Object.assign(Q.Texture.prototype,Q.EventDispatcher.prototype);Q.TextureIdCount=0;Q.DepthTexture=function(J,$,Z,K,Y,X,G,W,U){Q.Texture.call(this,null,K,Y,X,G,W,Q.DepthFormat,Z,U),this.image={width:J,height:$},this.type=Z!==void 0?Z:Q.UnsignedShortType,this.magFilter=G!==void 0?G:Q.NearestFilter,this.minFilter=W!==void 0?W:Q.NearestFilter,this.flipY=!1,this.generateMipmaps=!1};Q.DepthTexture.prototype=Object.create(Q.Texture.prototype);Q.DepthTexture.prototype.constructor=Q.DepthTexture;Q.CanvasTexture=function(J,$,Z,K,Y,X,G,W,U){Q.Texture.call(this,J,$,Z,K,Y,X,G,W,U),this.needsUpdate=!0};Q.CanvasTexture.prototype=Object.create(Q.Texture.prototype);Q.CanvasTexture.prototype.constructor=Q.CanvasTexture;Q.CubeTexture=function(J,$,Z,K,Y,X,G,W,U,D){J=J!==void 0?J:[],$=$!==void 0?$:Q.CubeReflectionMapping,Q.Texture.call(this,J,$,Z,K,Y,X,G,W,U,D),this.flipY=!1};Q.CubeTexture.prototype=Object.create(Q.Texture.prototype);Q.CubeTexture.prototype.constructor=Q.CubeTexture;Object.defineProperty(Q.CubeTexture.prototype,"images",{get:function(){return this.image},set:function(J){this.image=J}});Q.CompressedTexture=function(J,$,Z,K,Y,X,G,W,U,D,N,B){Q.Texture.call(this,null,X,G,W,U,D,K,Y,N,B),this.image={width:$,height:Z},this.mipmaps=J,this.flipY=!1,this.generateMipmaps=!1};Q.CompressedTexture.prototype=Object.create(Q.Texture.prototype);Q.CompressedTexture.prototype.constructor=Q.CompressedTexture;Q.DataTexture=function(J,$,Z,K,Y,X,G,W,U,D,N,B){Q.Texture.call(this,null,X,G,W,U,D,K,Y,N,B),this.image={data:J,width:$,height:Z},this.magFilter=U!==void 0?U:Q.NearestFilter,this.minFilter=D!==void 0?D:Q.NearestFilter,this.flipY=!1,this.generateMipmaps=!1};Q.DataTexture.prototype=Object.create(Q.Texture.prototype);Q.DataTexture.prototype.constructor=Q.DataTexture;Q.VideoTexture=function(J,$,Z,K,Y,X,G,W,U){Q.Texture.call(this,J,$,Z,K,Y,X,G,W,U),this.generateMipmaps=!1;var D=this;function N(){if(requestAnimationFrame(N),J.readyState>=J.HAVE_CURRENT_DATA)D.needsUpdate=!0}N()};Q.VideoTexture.prototype=Object.create(Q.Texture.prototype);Q.VideoTexture.prototype.constructor=Q.VideoTexture;Q.Group=function(){Q.Object3D.call(this),this.type="Group"};Q.Group.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Group});Q.Points=function(J,$){Q.Object3D.call(this),this.type="Points",this.geometry=J!==void 0?J:new Q.BufferGeometry,this.material=$!==void 0?$:new Q.PointsMaterial({color:Math.random()*16777215})};Q.Points.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Points,raycast:function(){var J=new Q.Matrix4,$=new Q.Ray,Z=new Q.Sphere;return function K(Y,X){var G=this,W=this.geometry,U=this.matrixWorld,D=Y.params.Points.threshold;if(W.boundingSphere===null)W.computeBoundingSphere();if(Z.copy(W.boundingSphere),Z.applyMatrix4(U),Y.ray.intersectsSphere(Z)===!1)return;J.getInverse(U),$.copy(Y.ray).applyMatrix4(J);var N=D/((this.scale.x+this.scale.y+this.scale.z)/3),B=N*N,q=new Q.Vector3;function V(H,v){var b=$.distanceSqToPoint(H);if(b<B){var R=$.closestPointToPoint(H);R.applyMatrix4(U);var u=Y.ray.origin.distanceTo(R);if(u<Y.near||u>Y.far)return;X.push({distance:u,distanceToRay:Math.sqrt(b),point:R.clone(),index:v,face:null,object:G})}}if(W instanceof Q.BufferGeometry){var{index:M,attributes:z}=W,F=z.position.array;if(M!==null){var L=M.array;for(var A=0,C=L.length;A<C;A++){var w=L[A];q.fromArray(F,w*3),V(q,w)}}else for(var A=0,_=F.length/3;A<_;A++)q.fromArray(F,A*3),V(q,A)}else{var x=W.vertices;for(var A=0,_=x.length;A<_;A++)V(x[A],A)}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});Q.Line=function(J,$,Z){if(Z===1)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new Q.LineSegments(J,$);Q.Object3D.call(this),this.type="Line",this.geometry=J!==void 0?J:new Q.BufferGeometry,this.material=$!==void 0?$:new Q.LineBasicMaterial({color:Math.random()*16777215})};Q.Line.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Line,raycast:function(){var J=new Q.Matrix4,$=new Q.Ray,Z=new Q.Sphere;return function K(Y,X){var G=Y.linePrecision,W=G*G,U=this.geometry,D=this.matrixWorld;if(U.boundingSphere===null)U.computeBoundingSphere();if(Z.copy(U.boundingSphere),Z.applyMatrix4(D),Y.ray.intersectsSphere(Z)===!1)return;J.getInverse(D),$.copy(Y.ray).applyMatrix4(J);var N=new Q.Vector3,B=new Q.Vector3,q=new Q.Vector3,V=new Q.Vector3,M=this instanceof Q.LineSegments?2:1;if(U instanceof Q.BufferGeometry){var{index:z,attributes:F}=U,L=F.position.array;if(z!==null){var A=z.array;for(var C=0,w=A.length-1;C<w;C+=M){var _=A[C],x=A[C+1];N.fromArray(L,_*3),B.fromArray(L,x*3);var H=$.distanceSqToSegment(N,B,V,q);if(H>W)continue;V.applyMatrix4(this.matrixWorld);var v=Y.ray.origin.distanceTo(V);if(v<Y.near||v>Y.far)continue;X.push({distance:v,point:q.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}else for(var C=0,w=L.length/3-1;C<w;C+=M){N.fromArray(L,3*C),B.fromArray(L,3*C+3);var H=$.distanceSqToSegment(N,B,V,q);if(H>W)continue;V.applyMatrix4(this.matrixWorld);var v=Y.ray.origin.distanceTo(V);if(v<Y.near||v>Y.far)continue;X.push({distance:v,point:q.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}else if(U instanceof Q.Geometry){var b=U.vertices,R=b.length;for(var C=0;C<R-1;C+=M){var H=$.distanceSqToSegment(b[C],b[C+1],V,q);if(H>W)continue;V.applyMatrix4(this.matrixWorld);var v=Y.ray.origin.distanceTo(V);if(v<Y.near||v>Y.far)continue;X.push({distance:v,point:q.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});Q.LineSegments=function(J,$){Q.Line.call(this,J,$),this.type="LineSegments"};Q.LineSegments.prototype=Object.assign(Object.create(Q.Line.prototype),{constructor:Q.LineSegments});Q.Mesh=function(J,$){Q.Object3D.call(this),this.type="Mesh",this.geometry=J!==void 0?J:new Q.BufferGeometry,this.material=$!==void 0?$:new Q.MeshBasicMaterial({color:Math.random()*16777215}),this.drawMode=Q.TrianglesDrawMode,this.updateMorphTargets()};Q.Mesh.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Mesh,setDrawMode:function(J){this.drawMode=J},updateMorphTargets:function(){if(this.geometry.morphTargets!==void 0&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var J=0,$=this.geometry.morphTargets.length;J<$;J++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[J].name]=J}},getMorphTargetIndexByName:function(J){if(this.morphTargetDictionary[J]!==void 0)return this.morphTargetDictionary[J];return console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+J+" does not exist. Returning 0."),0},raycast:function(){var J=new Q.Matrix4,$=new Q.Ray,Z=new Q.Sphere,K=new Q.Vector3,Y=new Q.Vector3,X=new Q.Vector3,G=new Q.Vector3,W=new Q.Vector3,U=new Q.Vector3,D=new Q.Vector2,N=new Q.Vector2,B=new Q.Vector2,q=new Q.Vector3,V=new Q.Vector3,M=new Q.Vector3;function z(A,C,w,_,x,H,v){return Q.Triangle.barycoordFromPoint(A,C,w,_,q),x.multiplyScalar(q.x),H.multiplyScalar(q.y),v.multiplyScalar(q.z),x.add(H).add(v),x.clone()}function F(A,C,w,_,x,H,v){var b,R=A.material;if(R.side===Q.BackSide)b=w.intersectTriangle(H,x,_,!0,v);else b=w.intersectTriangle(_,x,H,R.side!==Q.DoubleSide,v);if(b===null)return null;M.copy(v),M.applyMatrix4(A.matrixWorld);var u=C.ray.origin.distanceTo(M);if(u<C.near||u>C.far)return null;return{distance:u,point:M.clone(),object:A}}function L(A,C,w,_,x,H,v,b){K.fromArray(_,H*3),Y.fromArray(_,v*3),X.fromArray(_,b*3);var R=F(A,C,w,K,Y,X,V);if(R){if(x)D.fromArray(x,H*2),N.fromArray(x,v*2),B.fromArray(x,b*2),R.uv=z(V,K,Y,X,D,N,B);R.face=new Q.Face3(H,v,b,Q.Triangle.normal(K,Y,X)),R.faceIndex=H}return R}return function A(C,w){var _=this.geometry,x=this.material,H=this.matrixWorld;if(x===void 0)return;if(_.boundingSphere===null)_.computeBoundingSphere();if(Z.copy(_.boundingSphere),Z.applyMatrix4(H),C.ray.intersectsSphere(Z)===!1)return;if(J.getInverse(H),$.copy(C.ray).applyMatrix4(J),_.boundingBox!==null){if($.intersectsBox(_.boundingBox)===!1)return}var v,b;if(_ instanceof Q.BufferGeometry){var R,u,E,h=_.index,c=_.attributes,S=c.position.array;if(c.uv!==void 0)v=c.uv.array;if(h!==null){var T=h.array;for(var f=0,l=T.length;f<l;f+=3)if(R=T[f],u=T[f+1],E=T[f+2],b=L(this,C,$,S,v,R,u,E),b)b.faceIndex=Math.floor(f/3),w.push(b)}else for(var f=0,l=S.length;f<l;f+=9)if(R=f/3,u=R+1,E=R+2,b=L(this,C,$,S,v,R,u,E),b)b.index=R,w.push(b)}else if(_ instanceof Q.Geometry){var s,r,n,j=x instanceof Q.MultiMaterial,P=j===!0?x.materials:null,d=_.vertices,m=_.faces,o=_.faceVertexUvs[0];if(o.length>0)v=o;for(var i=0,QJ=m.length;i<QJ;i++){var KJ=m[i],I=j===!0?P[KJ.materialIndex]:x;if(I===void 0)continue;if(s=d[KJ.a],r=d[KJ.b],n=d[KJ.c],I.morphTargets===!0){var qJ=_.morphTargets,kJ=this.morphTargetInfluences;K.set(0,0,0),Y.set(0,0,0),X.set(0,0,0);for(var WJ=0,BJ=qJ.length;WJ<BJ;WJ++){var a=kJ[WJ];if(a===0)continue;var DJ=qJ[WJ].vertices;K.addScaledVector(G.subVectors(DJ[KJ.a],s),a),Y.addScaledVector(W.subVectors(DJ[KJ.b],r),a),X.addScaledVector(U.subVectors(DJ[KJ.c],n),a)}K.add(s),Y.add(r),X.add(n),s=K,r=Y,n=X}if(b=F(this,C,$,s,r,n,V),b){if(v){var UJ=v[i];D.copy(UJ[0]),N.copy(UJ[1]),B.copy(UJ[2]),b.uv=z(V,s,r,n,D,N,B)}b.face=KJ,b.faceIndex=i,w.push(b)}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});Q.Bone=function(J){Q.Object3D.call(this),this.type="Bone",this.skin=J};Q.Bone.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Bone,copy:function(J){return Q.Object3D.prototype.copy.call(this,J),this.skin=J.skin,this}});Q.Skeleton=function(J,$,Z){if(this.useVertexTexture=Z!==void 0?Z:!0,this.identityMatrix=new Q.Matrix4,J=J||[],this.bones=J.slice(0),this.useVertexTexture){var K=Math.sqrt(this.bones.length*4);K=Q.Math.nextPowerOfTwo(Math.ceil(K)),K=Math.max(K,4),this.boneTextureWidth=K,this.boneTextureHeight=K,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new Q.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,Q.RGBAFormat,Q.FloatType)}else this.boneMatrices=new Float32Array(16*this.bones.length);if($===void 0)this.calculateInverses();else if(this.bones.length===$.length)this.boneInverses=$.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var Y=0,X=this.bones.length;Y<X;Y++)this.boneInverses.push(new Q.Matrix4)}};Object.assign(Q.Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var J=0,$=this.bones.length;J<$;J++){var Z=new Q.Matrix4;if(this.bones[J])Z.getInverse(this.bones[J].matrixWorld);this.boneInverses.push(Z)}},pose:function(){var J;for(var $=0,Z=this.bones.length;$<Z;$++)if(J=this.bones[$],J)J.matrixWorld.getInverse(this.boneInverses[$]);for(var $=0,Z=this.bones.length;$<Z;$++)if(J=this.bones[$],J){if(J.parent)J.matrix.getInverse(J.parent.matrixWorld),J.matrix.multiply(J.matrixWorld);else J.matrix.copy(J.matrixWorld);J.matrix.decompose(J.position,J.quaternion,J.scale)}},update:function(){var J=new Q.Matrix4;return function $(){for(var Z=0,K=this.bones.length;Z<K;Z++){var Y=this.bones[Z]?this.bones[Z].matrixWorld:this.identityMatrix;J.multiplyMatrices(Y,this.boneInverses[Z]),J.toArray(this.boneMatrices,Z*16)}if(this.useVertexTexture)this.boneTexture.needsUpdate=!0}}(),clone:function(){return new Q.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)}});Q.SkinnedMesh=function(J,$,Z){Q.Mesh.call(this,J,$),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Q.Matrix4,this.bindMatrixInverse=new Q.Matrix4;var K=[];if(this.geometry&&this.geometry.bones!==void 0){var Y,X;for(var G=0,W=this.geometry.bones.length;G<W;++G)if(X=this.geometry.bones[G],Y=new Q.Bone(this),K.push(Y),Y.name=X.name,Y.position.fromArray(X.pos),Y.quaternion.fromArray(X.rotq),X.scl!==void 0)Y.scale.fromArray(X.scl);for(var G=0,W=this.geometry.bones.length;G<W;++G)if(X=this.geometry.bones[G],X.parent!==-1&&X.parent!==null&&K[X.parent]!==void 0)K[X.parent].add(K[G]);else this.add(K[G])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new Q.Skeleton(K,void 0,Z),this.matrixWorld)};Q.SkinnedMesh.prototype=Object.assign(Object.create(Q.Mesh.prototype),{constructor:Q.SkinnedMesh,bind:function(J,$){if(this.skeleton=J,$===void 0)this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),$=this.matrixWorld;this.bindMatrix.copy($),this.bindMatrixInverse.getInverse($)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry instanceof Q.Geometry)for(var J=0;J<this.geometry.skinWeights.length;J++){var $=this.geometry.skinWeights[J],Z=1/$.lengthManhattan();if(Z!==1/0)$.multiplyScalar(Z);else $.set(1,0,0,0)}else if(this.geometry instanceof Q.BufferGeometry){var K=new Q.Vector4,Y=this.geometry.attributes.skinWeight;for(var J=0;J<Y.count;J++){K.x=Y.getX(J),K.y=Y.getY(J),K.z=Y.getZ(J),K.w=Y.getW(J);var Z=1/K.lengthManhattan();if(Z!==1/0)K.multiplyScalar(Z);else K.set(1,0,0,0);Y.setXYZW(J,K.x,K.y,K.z,K.w)}}},updateMatrixWorld:function(J){if(Q.Mesh.prototype.updateMatrixWorld.call(this,!0),this.bindMode==="attached")this.bindMatrixInverse.getInverse(this.matrixWorld);else if(this.bindMode==="detached")this.bindMatrixInverse.getInverse(this.bindMatrix);else console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)}});Q.LOD=function(){Q.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})};Q.LOD.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.LOD,copy:function(J){Q.Object3D.prototype.copy.call(this,J,!1);var $=J.levels;for(var Z=0,K=$.length;Z<K;Z++){var Y=$[Z];this.addLevel(Y.object.clone(),Y.distance)}return this},addLevel:function(J,$){if($===void 0)$=0;$=Math.abs($);var Z=this.levels;for(var K=0;K<Z.length;K++)if($<Z[K].distance)break;Z.splice(K,0,{distance:$,object:J}),this.add(J)},getObjectForDistance:function(J){var $=this.levels;for(var Z=1,K=$.length;Z<K;Z++)if(J<$[Z].distance)break;return $[Z-1].object},raycast:function(){var J=new Q.Vector3;return function $(Z,K){J.setFromMatrixPosition(this.matrixWorld);var Y=Z.ray.origin.distanceTo(J);this.getObjectForDistance(Y).raycast(Z,K)}}(),update:function(){var J=new Q.Vector3,$=new Q.Vector3;return function Z(K){var Y=this.levels;if(Y.length>1){J.setFromMatrixPosition(K.matrixWorld),$.setFromMatrixPosition(this.matrixWorld);var X=J.distanceTo($);Y[0].object.visible=!0;for(var G=1,W=Y.length;G<W;G++)if(X>=Y[G].distance)Y[G-1].object.visible=!1,Y[G].object.visible=!0;else break;for(;G<W;G++)Y[G].object.visible=!1}}}(),toJSON:function(J){var $=Q.Object3D.prototype.toJSON.call(this,J);$.object.levels=[];var Z=this.levels;for(var K=0,Y=Z.length;K<Y;K++){var X=Z[K];$.object.levels.push({object:X.object.uuid,distance:X.distance})}return $}});Q.Sprite=function(J){Q.Object3D.call(this),this.type="Sprite",this.material=J!==void 0?J:new Q.SpriteMaterial};Q.Sprite.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.Sprite,raycast:function(){var J=new Q.Vector3;return function $(Z,K){J.setFromMatrixPosition(this.matrixWorld);var Y=Z.ray.distanceSqToPoint(J),X=this.scale.x*this.scale.y/4;if(Y>X)return;K.push({distance:Math.sqrt(Y),point:this.position,face:null,object:this})}}(),clone:function(){return new this.constructor(this.material).copy(this)}});Q.LensFlare=function(J,$,Z,K,Y){if(Q.Object3D.call(this),this.lensFlares=[],this.positionScreen=new Q.Vector3,this.customUpdateCallback=void 0,J!==void 0)this.add(J,$,Z,K,Y)};Q.LensFlare.prototype=Object.assign(Object.create(Q.Object3D.prototype),{constructor:Q.LensFlare,copy:function(J){Q.Object3D.prototype.copy.call(this,J),this.positionScreen.copy(J.positionScreen),this.customUpdateCallback=J.customUpdateCallback;for(var $=0,Z=J.lensFlares.length;$<Z;$++)this.lensFlares.push(J.lensFlares[$]);return this},add:function(J,$,Z,K,Y,X){if($===void 0)$=-1;if(Z===void 0)Z=0;if(X===void 0)X=1;if(Y===void 0)Y=new Q.Color(16777215);if(K===void 0)K=Q.NormalBlending;Z=Math.min(Z,Math.max(0,Z)),this.lensFlares.push({texture:J,size:$,distance:Z,x:0,y:0,z:0,scale:1,rotation:0,opacity:X,color:Y,blending:K})},updateLensFlares:function(){var J,$=this.lensFlares.length,Z,K=-this.positionScreen.x*2,Y=-this.positionScreen.y*2;for(J=0;J<$;J++)Z=this.lensFlares[J],Z.x=this.positionScreen.x+K*Z.distance,Z.y=this.positionScreen.y+Y*Z.distance,Z.wantedRotation=Z.x*Math.PI*0.25,Z.rotation+=(Z.wantedRotation-Z.rotation)*0.25}});Q.Scene=function(){Q.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0};Q.Scene.prototype=Object.create(Q.Object3D.prototype);Q.Scene.prototype.constructor=Q.Scene;Q.Scene.prototype.copy=function(J,$){if(Q.Object3D.prototype.copy.call(this,J,$),J.fog!==null)this.fog=J.fog.clone();if(J.overrideMaterial!==null)this.overrideMaterial=J.overrideMaterial.clone();return this.autoUpdate=J.autoUpdate,this.matrixAutoUpdate=J.matrixAutoUpdate,this};Q.Fog=function(J,$,Z){this.name="",this.color=new Q.Color(J),this.near=$!==void 0?$:1,this.far=Z!==void 0?Z:1000};Q.Fog.prototype.clone=function(){return new Q.Fog(this.color.getHex(),this.near,this.far)};Q.FogExp2=function(J,$){this.name="",this.color=new Q.Color(J),this.density=$!==void 0?$:0.00025};Q.FogExp2.prototype.clone=function(){return new Q.FogExp2(this.color.getHex(),this.density)};Q.ShaderChunk={};Q.ShaderChunk.alphamap_fragment=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif
`;Q.ShaderChunk.alphamap_pars_fragment=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif
`;Q.ShaderChunk.alphatest_fragment=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif
`;Q.ShaderChunk.aomap_fragment=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif
`;Q.ShaderChunk.aomap_pars_fragment=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`;Q.ShaderChunk.begin_vertex=`
vec3 transformed = vec3( position );
`;Q.ShaderChunk.beginnormal_vertex=`
vec3 objectNormal = vec3( normal );
`;Q.ShaderChunk.bsdfs=`bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {
	return any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );
}
float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
		if( decayExponent > 0.0 ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
			float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
			float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
			return distanceFalloff * maxDistanceCutoffFactor;
#else
			return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
#endif
		}
		return 1.0;
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
`;Q.ShaderChunk.bumpmap_pars_fragment=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = dFdx( surf_pos );
		vec3 vSigmaY = dFdy( surf_pos );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif
`;Q.ShaderChunk.clipping_planes_fragment=`#if NUM_CLIPPING_PLANES > 0
	for ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {
		vec4 plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
#endif
`;Q.ShaderChunk.clipping_planes_pars_fragment=`#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif
`;Q.ShaderChunk.clipping_planes_pars_vertex=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	varying vec3 vViewPosition;
#endif
`;Q.ShaderChunk.clipping_planes_vertex=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	vViewPosition = - mvPosition.xyz;
#endif
`;Q.ShaderChunk.color_fragment=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`;Q.ShaderChunk.color_pars_fragment=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif
`;Q.ShaderChunk.color_pars_vertex=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`;Q.ShaderChunk.color_vertex=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`;Q.ShaderChunk.common=`#define PI 3.14159265359
#define PI2 6.28318530718
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
`;Q.ShaderChunk.cube_uv_reflection_fragment=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif
`;Q.ShaderChunk.defaultnormal_vertex=`#ifdef FLIP_SIDED
	objectNormal = -objectNormal;
#endif
vec3 transformedNormal = normalMatrix * objectNormal;
`;Q.ShaderChunk.displacementmap_vertex=`#ifdef USE_DISPLACEMENTMAP
	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif
`;Q.ShaderChunk.displacementmap_pars_vertex=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif
`;Q.ShaderChunk.emissivemap_fragment=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif
`;Q.ShaderChunk.emissivemap_pars_fragment=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif
`;Q.ShaderChunk.encodings_pars_fragment=`
vec4 LinearToLinear( in vec4 value ) {
  return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );
}
vec4 sRGBToLinear( in vec4 value ) {
  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );
}
vec4 LinearTosRGB( in vec4 value ) {
  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );
}
vec4 RGBEToLinear( in vec4 value ) {
  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
  float maxComponent = max( max( value.r, value.g ), value.b );
  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
  return vec4( value.xyz * value.w * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
  float maxRGB = max( value.x, max( value.g, value.b ) );
  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );
  M            = ceil( M * 255.0 ) / 255.0;
  return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
    float maxRGB = max( value.x, max( value.g, value.b ) );
    float D      = max( maxRange / maxRGB, 1.0 );
    D            = min( floor( D ) / 255.0, 1.0 );
    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));
  vec4 vResult;
  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
  vResult.w = fract(Le);
  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;
  return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
  float Le = value.z * 255.0 + value.w;
  vec3 Xp_Y_XYZp;
  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);
  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
  return vec4( max(vRGB, 0.0), 1.0 );
}
`;Q.ShaderChunk.encodings_fragment=`  gl_FragColor = linearToOutputTexel( gl_FragColor );
`;Q.ShaderChunk.envmap_fragment=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef DOUBLE_SIDED
		float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );
	#else
		float flipNormal = 1.0;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );
		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif
`;Q.ShaderChunk.envmap_pars_fragment=`#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntenstiy;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif
`;Q.ShaderChunk.envmap_pars_vertex=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif
`;Q.ShaderChunk.envmap_vertex=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif
`;Q.ShaderChunk.fog_fragment=`#ifdef USE_FOG
	#ifdef USE_LOGDEPTHBUF_EXT
		float depth = gl_FragDepthEXT / gl_FragCoord.w;
	#else
		float depth = gl_FragCoord.z / gl_FragCoord.w;
	#endif
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, depth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif
`;Q.ShaderChunk.fog_pars_fragment=`#ifdef USE_FOG
	uniform vec3 fogColor;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`;Q.ShaderChunk.lightmap_fragment=`#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif
`;Q.ShaderChunk.lightmap_pars_fragment=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`;Q.ShaderChunk.lights_lambert_vertex=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_DIR_LIGHTS > 0
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif
`;Q.ShaderChunk.lights_pars=`uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		if ( testLightInRange( lightDistance, pointLight.distance ) ) {
			directLight.color = pointLight.color;
			directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif
#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		#ifdef DOUBLE_SIDED
			float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#else
			float flipNormal = 1.0;
		#endif
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		#ifdef DOUBLE_SIDED
			float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );
		#else
			float flipNormal = 1.0;
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );
			sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif
`;Q.ShaderChunk.lights_phong_fragment=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`;Q.ShaderChunk.lights_phong_pars_fragment=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)
`;Q.ShaderChunk.lights_physical_fragment=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
#endif
`;Q.ShaderChunk.lights_physical_pars_fragment=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
	#endif
};
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
}
#define RE_Direct				RE_Direct_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}
`;Q.ShaderChunk.lights_template=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
	 	irradiance += getLightProbeIndirectIrradiance( geometry, 8 );
	#endif
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );
	RE_IndirectSpecular( radiance, geometry, material, reflectedLight );
#endif
`;Q.ShaderChunk.logdepthbuf_fragment=`#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)
	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;
#endif`;Q.ShaderChunk.logdepthbuf_pars_fragment=`#ifdef USE_LOGDEPTHBUF
	uniform float logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
#endif
`;Q.ShaderChunk.logdepthbuf_pars_vertex=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
	uniform float logDepthBufFC;
#endif`;Q.ShaderChunk.logdepthbuf_vertex=`#ifdef USE_LOGDEPTHBUF
	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;
	#endif
#endif
`;Q.ShaderChunk.map_fragment=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif
`;Q.ShaderChunk.map_pars_fragment=`#ifdef USE_MAP
	uniform sampler2D map;
#endif
`;Q.ShaderChunk.map_particle_fragment=`#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
`;Q.ShaderChunk.map_particle_pars_fragment=`#ifdef USE_MAP
	uniform vec4 offsetRepeat;
	uniform sampler2D map;
#endif
`;Q.ShaderChunk.metalnessmap_fragment=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.r;
#endif
`;Q.ShaderChunk.metalnessmap_pars_fragment=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`;Q.ShaderChunk.morphnormal_vertex=`#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif
`;Q.ShaderChunk.morphtarget_pars_vertex=`#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`;Q.ShaderChunk.morphtarget_vertex=`#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif
`;Q.ShaderChunk.normal_fragment=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );
	#endif
#endif
#ifdef USE_NORMALMAP
	normal = perturbNormal2Arb( -vViewPosition, normal );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif
`;Q.ShaderChunk.normalmap_pars_fragment=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 S = normalize( q0 * st1.t - q1 * st0.t );
		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );
		vec3 N = normalize( surf_norm );
		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		mapN.xy = normalScale * mapN.xy;
		mat3 tsn = mat3( S, T, N );
		return normalize( tsn * mapN );
	}
#endif
`;Q.ShaderChunk.packing=`vec3 packNormalToRGB( const in vec3 normal ) {
  return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
  return 1.0 - 2.0 * rgb.xyz;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {
  return ( viewZ + near ) / ( near - far );
}
float OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
  return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
  return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`;Q.ShaderChunk.premultiplied_alpha_fragment=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif
`;Q.ShaderChunk.project_vertex=`#ifdef USE_SKINNING
	vec4 mvPosition = modelViewMatrix * skinned;
#else
	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
#endif
gl_Position = projectionMatrix * mvPosition;
`;Q.ShaderChunk.roughnessmap_fragment=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.r;
#endif
`;Q.ShaderChunk.roughnessmap_pars_fragment=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`;Q.ShaderChunk.shadowmap_pars_fragment=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			return (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			return (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return 1.0;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		vec3 bd3D = normalize( lightToPosition );
		float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif
`;Q.ShaderChunk.shadowmap_pars_vertex=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
#endif
`;Q.ShaderChunk.shadowmap_vertex=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
#endif
`;Q.ShaderChunk.shadowmask_pars_fragment=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#endif
	return shadow;
}
`;Q.ShaderChunk.skinbase_vertex=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`;Q.ShaderChunk.skinning_pars_vertex=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureWidth;
		uniform int boneTextureHeight;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureWidth ) );
			float y = floor( j / float( boneTextureWidth ) );
			float dx = 1.0 / float( boneTextureWidth );
			float dy = 1.0 / float( boneTextureHeight );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif
`;Q.ShaderChunk.skinning_vertex=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	skinned  = bindMatrixInverse * skinned;
#endif
`;Q.ShaderChunk.skinnormal_vertex=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif
`;Q.ShaderChunk.specularmap_fragment=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`;Q.ShaderChunk.specularmap_pars_fragment=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`;Q.ShaderChunk.tonemapping_fragment=`#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif
`;Q.ShaderChunk.tonemapping_pars_fragment=`#define saturate(a) clamp( a, 0.0, 1.0 )
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
  return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
  color *= toneMappingExposure;
  return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
  color *= toneMappingExposure;
  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
  color *= toneMappingExposure;
  color = max( vec3( 0.0 ), color - 0.004 );
  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
`;Q.ShaderChunk.uv2_pars_fragment=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`;Q.ShaderChunk.uv2_pars_vertex=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`;Q.ShaderChunk.uv2_vertex=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`;Q.ShaderChunk.uv_pars_fragment=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`;Q.ShaderChunk.uv_pars_vertex=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform vec4 offsetRepeat;
#endif
`;Q.ShaderChunk.uv_vertex=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;
#endif`;Q.ShaderChunk.worldpos_vertex=`#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )
	#ifdef USE_SKINNING
		vec4 worldPosition = modelMatrix * skinned;
	#else
		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
	#endif
#endif
`;Q.UniformsUtils={merge:function(J){var $={};for(var Z=0;Z<J.length;Z++){var K=this.clone(J[Z]);for(var Y in K)$[Y]=K[Y]}return $},clone:function(J){var $={};for(var Z in J){$[Z]={};for(var K in J[Z]){var Y=J[Z][K];if(Y instanceof Q.Color||Y instanceof Q.Vector2||Y instanceof Q.Vector3||Y instanceof Q.Vector4||Y instanceof Q.Matrix3||Y instanceof Q.Matrix4||Y instanceof Q.Texture)$[Z][K]=Y.clone();else if(Array.isArray(Y))$[Z][K]=Y.slice();else $[Z][K]=Y}}return $}};Q.UniformsLib={common:{diffuse:{type:"c",value:new Q.Color(15658734)},opacity:{type:"1f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new Q.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"1f",value:-1},reflectivity:{type:"1f",value:1},refractionRatio:{type:"1f",value:0.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"1f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"1f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"1f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new Q.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"1f",value:1},displacementBias:{type:"1f",value:0}},roughnessmap:{roughnessMap:{type:"t",value:null}},metalnessmap:{metalnessMap:{type:"t",value:null}},fog:{fogDensity:{type:"1f",value:0.00025},fogNear:{type:"1f",value:1},fogFar:{type:"1f",value:2000},fogColor:{type:"c",value:new Q.Color(16777215)}},lights:{ambientLightColor:{type:"3fv",value:[]},directionalLights:{type:"sa",value:[],properties:{direction:{type:"v3"},color:{type:"c"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},directionalShadowMap:{type:"tv",value:[]},directionalShadowMatrix:{type:"m4v",value:[]},spotLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},direction:{type:"v3"},distance:{type:"1f"},coneCos:{type:"1f"},penumbraCos:{type:"1f"},decay:{type:"1f"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},spotShadowMap:{type:"tv",value:[]},spotShadowMatrix:{type:"m4v",value:[]},pointLights:{type:"sa",value:[],properties:{color:{type:"c"},position:{type:"v3"},decay:{type:"1f"},distance:{type:"1f"},shadow:{type:"1i"},shadowBias:{type:"1f"},shadowRadius:{type:"1f"},shadowMapSize:{type:"v2"}}},pointShadowMap:{type:"tv",value:[]},pointShadowMatrix:{type:"m4v",value:[]},hemisphereLights:{type:"sa",value:[],properties:{direction:{type:"v3"},skyColor:{type:"c"},groundColor:{type:"c"}}}},points:{diffuse:{type:"c",value:new Q.Color(15658734)},opacity:{type:"1f",value:1},size:{type:"1f",value:1},scale:{type:"1f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new Q.Vector4(0,0,1,1)}}};Q.ShaderChunk.cube_frag=`uniform samplerCube tCube;
uniform float tFlip;
varying vec3 vWorldPosition;
#include <common>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );
	#include <logdepthbuf_fragment>
}
`;Q.ShaderChunk.cube_vert=`varying vec3 vWorldPosition;
#include <common>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`;Q.ShaderChunk.depth_frag=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}
`;Q.ShaderChunk.depth_vert=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#include <begin_vertex>
	#include <displacementmap_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`;Q.ShaderChunk.distanceRGBA_frag=`uniform vec3 lightPos;
varying vec4 vWorldPosition;
#include <common>
#include <packing>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	gl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );
}
`;Q.ShaderChunk.distanceRGBA_vert=`varying vec4 vWorldPosition;
#include <common>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <skinbase_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition;
}
`;Q.ShaderChunk.equirect_frag=`uniform sampler2D tEquirect;
uniform float tFlip;
varying vec3 vWorldPosition;
#include <common>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 direction = normalize( vWorldPosition );
	vec2 sampleUV;
	sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <logdepthbuf_fragment>
}
`;Q.ShaderChunk.equirect_vert=`varying vec3 vWorldPosition;
#include <common>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`;Q.ShaderChunk.linedashed_frag=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`;Q.ShaderChunk.linedashed_vert=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`;Q.ShaderChunk.meshbasic_frag=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight;
	reflectedLight.directDiffuse = vec3( 0.0 );
	reflectedLight.directSpecular = vec3( 0.0 );
	reflectedLight.indirectDiffuse = diffuseColor.rgb;
	reflectedLight.indirectSpecular = vec3( 0.0 );
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`;Q.ShaderChunk.meshbasic_vert=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
}
`;Q.ShaderChunk.meshlambert_frag=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`;Q.ShaderChunk.meshlambert_vert=`#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
}
`;Q.ShaderChunk.meshphong_frag=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_template>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`;Q.ShaderChunk.meshphong_vert=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <displacementmap_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
}
`;Q.ShaderChunk.meshphysical_frag=`#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
uniform float envMapIntensity;
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <lights_pars>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_template>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`;Q.ShaderChunk.meshphysical_vert=`#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <displacementmap_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
}
`;Q.ShaderChunk.normal_frag=`uniform float opacity;
varying vec3 vNormal;
#include <common>
#include <packing>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	gl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );
	#include <logdepthbuf_fragment>
}
`;Q.ShaderChunk.normal_vert=`varying vec3 vNormal;
#include <common>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vNormal = normalize( normalMatrix * normal );
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`;Q.ShaderChunk.points_frag=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`;Q.ShaderChunk.points_vert=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <project_vertex>
	#ifdef USE_SIZEATTENUATION
		gl_PointSize = size * ( scale / - mvPosition.z );
	#else
		gl_PointSize = size;
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
}
`;Q.ShaderChunk.shadow_frag=`uniform float opacity;
#include <common>
#include <packing>
#include <bsdfs>
#include <lights_pars>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );
}
`;Q.ShaderChunk.shadow_vert=`#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
}
`;Q.ShaderLib={basic:{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.common,Q.UniformsLib.aomap,Q.UniformsLib.fog]),vertexShader:Q.ShaderChunk.meshbasic_vert,fragmentShader:Q.ShaderChunk.meshbasic_frag},lambert:{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.common,Q.UniformsLib.aomap,Q.UniformsLib.lightmap,Q.UniformsLib.emissivemap,Q.UniformsLib.fog,Q.UniformsLib.lights,{emissive:{type:"c",value:new Q.Color(0)}}]),vertexShader:Q.ShaderChunk.meshlambert_vert,fragmentShader:Q.ShaderChunk.meshlambert_frag},phong:{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.common,Q.UniformsLib.aomap,Q.UniformsLib.lightmap,Q.UniformsLib.emissivemap,Q.UniformsLib.bumpmap,Q.UniformsLib.normalmap,Q.UniformsLib.displacementmap,Q.UniformsLib.fog,Q.UniformsLib.lights,{emissive:{type:"c",value:new Q.Color(0)},specular:{type:"c",value:new Q.Color(1118481)},shininess:{type:"1f",value:30}}]),vertexShader:Q.ShaderChunk.meshphong_vert,fragmentShader:Q.ShaderChunk.meshphong_frag},standard:{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.common,Q.UniformsLib.aomap,Q.UniformsLib.lightmap,Q.UniformsLib.emissivemap,Q.UniformsLib.bumpmap,Q.UniformsLib.normalmap,Q.UniformsLib.displacementmap,Q.UniformsLib.roughnessmap,Q.UniformsLib.metalnessmap,Q.UniformsLib.fog,Q.UniformsLib.lights,{emissive:{type:"c",value:new Q.Color(0)},roughness:{type:"1f",value:0.5},metalness:{type:"1f",value:0},envMapIntensity:{type:"1f",value:1}}]),vertexShader:Q.ShaderChunk.meshphysical_vert,fragmentShader:Q.ShaderChunk.meshphysical_frag},points:{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.points,Q.UniformsLib.fog]),vertexShader:Q.ShaderChunk.points_vert,fragmentShader:Q.ShaderChunk.points_frag},dashed:{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.common,Q.UniformsLib.fog,{scale:{type:"1f",value:1},dashSize:{type:"1f",value:1},totalSize:{type:"1f",value:2}}]),vertexShader:Q.ShaderChunk.linedashed_vert,fragmentShader:Q.ShaderChunk.linedashed_frag},depth:{uniforms:Q.UniformsUtils.merge([Q.UniformsLib.common,Q.UniformsLib.displacementmap]),vertexShader:Q.ShaderChunk.depth_vert,fragmentShader:Q.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{type:"1f",value:1}},vertexShader:Q.ShaderChunk.normal_vert,fragmentShader:Q.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"1f",value:-1}},vertexShader:Q.ShaderChunk.cube_vert,fragmentShader:Q.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"1f",value:-1}},vertexShader:Q.ShaderChunk.equirect_vert,fragmentShader:Q.ShaderChunk.equirect_frag},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new Q.Vector3}},vertexShader:Q.ShaderChunk.distanceRGBA_vert,fragmentShader:Q.ShaderChunk.distanceRGBA_frag}};Q.ShaderLib.physical={uniforms:Q.UniformsUtils.merge([Q.ShaderLib.standard.uniforms,{}]),vertexShader:Q.ShaderChunk.meshphysical_vert,fragmentShader:Q.ShaderChunk.meshphysical_frag};Q.WebGLRenderer=function(J){console.log("THREE.WebGLRenderer",Q.REVISION),J=J||{};var $=J.canvas!==void 0?J.canvas:document.createElement("canvas"),Z=J.context!==void 0?J.context:null,K=J.alpha!==void 0?J.alpha:!1,Y=J.depth!==void 0?J.depth:!0,X=J.stencil!==void 0?J.stencil:!0,G=J.antialias!==void 0?J.antialias:!1,W=J.premultipliedAlpha!==void 0?J.premultipliedAlpha:!0,U=J.preserveDrawingBuffer!==void 0?J.preserveDrawingBuffer:!1,D=[],N=[],B=-1,q=[],V=-1,M=new Float32Array(8),z=[],F=[];this.domElement=$,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=Q.LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var L=this,A=null,C=null,w=null,_=-1,x="",H=null,v=new Q.Vector4,b=null,R=new Q.Vector4,u=0,E=new Q.Color(0),h=0,c=$.width,S=$.height,T=1,f=new Q.Vector4(0,0,c,S),l=!1,s=new Q.Vector4(0,0,c,S),r=new Q.Frustum,n=new Q.WebGLClipping,j=!1,P=!1,d=new Q.Sphere,m=new Q.Matrix4,o=new Q.Vector3,i={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},QJ={geometries:0,textures:0},KJ={calls:0,vertices:0,faces:0,points:0};this.info={render:KJ,memory:QJ,programs:null};var I;try{var qJ={alpha:K,depth:Y,stencil:X,antialias:G,premultipliedAlpha:W,preserveDrawingBuffer:U};if(I=Z||$.getContext("webgl",qJ)||$.getContext("experimental-webgl",qJ),I===null)if($.getContext("webgl")!==null)throw"Error creating WebGL context with your selected attributes.";else throw"Error creating WebGL context.";if(I.getShaderPrecisionFormat===void 0)I.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}};$.addEventListener("webglcontextlost",fJ,!1)}catch(O){console.error("THREE.WebGLRenderer: "+O)}var kJ=typeof WebGL2RenderingContext!=="undefined"&&I instanceof WebGL2RenderingContext,WJ=new Q.WebGLExtensions(I);if(WJ.get("WEBGL_depth_texture"),WJ.get("OES_texture_float"),WJ.get("OES_texture_float_linear"),WJ.get("OES_texture_half_float"),WJ.get("OES_texture_half_float_linear"),WJ.get("OES_standard_derivatives"),WJ.get("ANGLE_instanced_arrays"),WJ.get("OES_element_index_uint"))Q.BufferGeometry.MaxIndex=4294967296;var BJ=new Q.WebGLCapabilities(I,WJ,J),a=new Q.WebGLState(I,WJ,SJ),DJ=new Q.WebGLProperties,UJ=new Q.WebGLObjects(I,DJ,this.info),NJ=new Q.WebGLPrograms(this,BJ),VJ=new Q.WebGLLights;this.info.programs=NJ.programs;var FJ=new Q.WebGLBufferRenderer(I,WJ,KJ),AJ=new Q.WebGLIndexedBufferRenderer(I,WJ,KJ);function PJ(){return C===null?T:1}function zJ(O,k,y,p){if(W===!0)O*=p,k*=p,y*=p;a.clearColor(O,k,y,p)}function wJ(){a.init(),a.scissor(v.copy(f).multiplyScalar(T)),a.viewport(R.copy(s).multiplyScalar(T)),zJ(E.r,E.g,E.b,h)}function _J(){A=null,H=null,x="",_=-1,a.reset()}wJ(),this.context=I,this.capabilities=BJ,this.extensions=WJ,this.properties=DJ,this.state=a;var CJ=new Q.WebGLShadowMap(this,i,UJ);this.shadowMap=CJ;var bJ=new Q.SpritePlugin(this,z),hJ=new Q.LensFlarePlugin(this,F);this.getContext=function(){return I},this.getContextAttributes=function(){return I.getContextAttributes()},this.forceContextLoss=function(){WJ.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){var O;return function k(){if(O!==void 0)return O;var y=WJ.get("EXT_texture_filter_anisotropic");if(y!==null)O=I.getParameter(y.MAX_TEXTURE_MAX_ANISOTROPY_EXT);else O=0;return O}}(),this.getPrecision=function(){return BJ.precision},this.getPixelRatio=function(){return T},this.setPixelRatio=function(O){if(O===void 0)return;T=O,this.setSize(s.z,s.w,!1)},this.getSize=function(){return{width:c,height:S}},this.setSize=function(O,k,y){if(c=O,S=k,$.width=O*T,$.height=k*T,y!==!1)$.style.width=O+"px",$.style.height=k+"px";this.setViewport(0,0,O,k)},this.setViewport=function(O,k,y,p){a.viewport(s.set(O,k,y,p))},this.setScissor=function(O,k,y,p){a.scissor(f.set(O,k,y,p))},this.setScissorTest=function(O){a.setScissorTest(l=O)},this.getClearColor=function(){return E},this.setClearColor=function(O,k){E.set(O),h=k!==void 0?k:1,zJ(E.r,E.g,E.b,h)},this.getClearAlpha=function(){return h},this.setClearAlpha=function(O){h=O,zJ(E.r,E.g,E.b,h)},this.clear=function(O,k,y){var p=0;if(O===void 0||O)p|=I.COLOR_BUFFER_BIT;if(k===void 0||k)p|=I.DEPTH_BUFFER_BIT;if(y===void 0||y)p|=I.STENCIL_BUFFER_BIT;I.clear(p)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(O,k,y,p){this.setRenderTarget(O),this.clear(k,y,p)},this.resetGLState=_J,this.dispose=function(){$.removeEventListener("webglcontextlost",fJ,!1)};function fJ(O){O.preventDefault(),_J(),wJ(),DJ.clear()}function HJ(O){var k=O.target;k.removeEventListener("dispose",HJ),iJ(k),QJ.textures--}function TJ(O){var k=O.target;k.removeEventListener("dispose",TJ),rJ(k),QJ.textures--}function uJ(O){var k=O.target;k.removeEventListener("dispose",uJ),EJ(k)}function iJ(O){var k=DJ.get(O);if(O.image&&k.__image__webglTextureCube)I.deleteTexture(k.__image__webglTextureCube);else{if(k.__webglInit===void 0)return;I.deleteTexture(k.__webglTexture)}DJ.delete(O)}function rJ(O){var k=DJ.get(O),y=DJ.get(O.texture);if(!O)return;if(y.__webglTexture!==void 0)I.deleteTexture(y.__webglTexture);if(O.depthTexture)O.depthTexture.dispose();if(O instanceof Q.WebGLRenderTargetCube){for(var p=0;p<6;p++)if(I.deleteFramebuffer(k.__webglFramebuffer[p]),k.__webglDepthbuffer)I.deleteRenderbuffer(k.__webglDepthbuffer[p])}else if(I.deleteFramebuffer(k.__webglFramebuffer),k.__webglDepthbuffer)I.deleteRenderbuffer(k.__webglDepthbuffer);DJ.delete(O.texture),DJ.delete(O)}function EJ(O){pJ(O),DJ.delete(O)}function pJ(O){var k=DJ.get(O).program;if(O.program=void 0,k!==void 0)NJ.releaseProgram(k)}this.renderBufferImmediate=function(O,k,y){a.initAttributes();var p=DJ.get(O);if(O.hasPositions&&!p.position)p.position=I.createBuffer();if(O.hasNormals&&!p.normal)p.normal=I.createBuffer();if(O.hasUvs&&!p.uv)p.uv=I.createBuffer();if(O.hasColors&&!p.color)p.color=I.createBuffer();var g=k.getAttributes();if(O.hasPositions)I.bindBuffer(I.ARRAY_BUFFER,p.position),I.bufferData(I.ARRAY_BUFFER,O.positionArray,I.DYNAMIC_DRAW),a.enableAttribute(g.position),I.vertexAttribPointer(g.position,3,I.FLOAT,!1,0,0);if(O.hasNormals){if(I.bindBuffer(I.ARRAY_BUFFER,p.normal),y.type!=="MeshPhongMaterial"&&y.type!=="MeshStandardMaterial"&&y.type!=="MeshPhysicalMaterial"&&y.shading===Q.FlatShading)for(var t=0,ZJ=O.count*3;t<ZJ;t+=9){var e=O.normalArray,GJ=(e[t+0]+e[t+3]+e[t+6])/3,XJ=(e[t+1]+e[t+4]+e[t+7])/3,$J=(e[t+2]+e[t+5]+e[t+8])/3;e[t+0]=GJ,e[t+1]=XJ,e[t+2]=$J,e[t+3]=GJ,e[t+4]=XJ,e[t+5]=$J,e[t+6]=GJ,e[t+7]=XJ,e[t+8]=$J}I.bufferData(I.ARRAY_BUFFER,O.normalArray,I.DYNAMIC_DRAW),a.enableAttribute(g.normal),I.vertexAttribPointer(g.normal,3,I.FLOAT,!1,0,0)}if(O.hasUvs&&y.map)I.bindBuffer(I.ARRAY_BUFFER,p.uv),I.bufferData(I.ARRAY_BUFFER,O.uvArray,I.DYNAMIC_DRAW),a.enableAttribute(g.uv),I.vertexAttribPointer(g.uv,2,I.FLOAT,!1,0,0);if(O.hasColors&&y.vertexColors!==Q.NoColors)I.bindBuffer(I.ARRAY_BUFFER,p.color),I.bufferData(I.ARRAY_BUFFER,O.colorArray,I.DYNAMIC_DRAW),a.enableAttribute(g.color),I.vertexAttribPointer(g.color,3,I.FLOAT,!1,0,0);a.disableUnusedAttributes(),I.drawArrays(I.TRIANGLES,0,O.count),O.count=0},this.renderBufferDirect=function(O,k,y,p,g,t){X0(p);var ZJ=G0(O,k,p,g),e=!1,GJ=y.id+"_"+ZJ.id+"_"+p.wireframe;if(GJ!==x)x=GJ,e=!0;var XJ=g.morphTargetInfluences;if(XJ!==void 0){var $J=[];for(var JJ=0,OJ=XJ.length;JJ<OJ;JJ++){var MJ=XJ[JJ];$J.push([MJ,JJ])}if($J.sort(k0),$J.length>8)$J.length=8;var LJ=y.morphAttributes;for(var JJ=0,OJ=$J.length;JJ<OJ;JJ++){var MJ=$J[JJ];if(M[JJ]=MJ[0],MJ[0]!==0){var IJ=MJ[1];if(p.morphTargets===!0&&LJ.position)y.addAttribute("morphTarget"+JJ,LJ.position[IJ]);if(p.morphNormals===!0&&LJ.normal)y.addAttribute("morphNormal"+JJ,LJ.normal[IJ])}else{if(p.morphTargets===!0)y.removeAttribute("morphTarget"+JJ);if(p.morphNormals===!0)y.removeAttribute("morphNormal"+JJ)}}ZJ.getUniforms().setValue(I,"morphTargetInfluences",M),e=!0}var IJ=y.index,jJ=y.attributes.position;if(p.wireframe===!0)IJ=UJ.getWireframeAttribute(y);var YJ;if(IJ!==null)YJ=AJ,YJ.setIndex(IJ);else YJ=FJ;if(e){if(RJ(p,ZJ,y),IJ!==null)I.bindBuffer(I.ELEMENT_ARRAY_BUFFER,UJ.getAttributeBuffer(IJ))}var lJ=0,yJ=1/0;if(IJ!==null)yJ=IJ.count;else if(jJ!==void 0)yJ=jJ.count;var V0=y.drawRange.start,n0=y.drawRange.count,M0=t!==null?t.start:0,s0=t!==null?t.count:1/0,tJ=Math.max(lJ,V0,M0),i0=Math.min(lJ+yJ,V0+n0,M0+s0)-1,O0=Math.max(0,i0-tJ+1);if(g instanceof Q.Mesh)if(p.wireframe===!0)a.setLineWidth(p.wireframeLinewidth*PJ()),YJ.setMode(I.LINES);else switch(g.drawMode){case Q.TrianglesDrawMode:YJ.setMode(I.TRIANGLES);break;case Q.TriangleStripDrawMode:YJ.setMode(I.TRIANGLE_STRIP);break;case Q.TriangleFanDrawMode:YJ.setMode(I.TRIANGLE_FAN);break}else if(g instanceof Q.Line){var eJ=p.linewidth;if(eJ===void 0)eJ=1;if(a.setLineWidth(eJ*PJ()),g instanceof Q.LineSegments)YJ.setMode(I.LINES);else YJ.setMode(I.LINE_STRIP)}else if(g instanceof Q.Points)YJ.setMode(I.POINTS);if(y instanceof Q.InstancedBufferGeometry){if(y.maxInstancedCount>0)YJ.renderInstances(y,tJ,O0)}else YJ.render(tJ,O0)};function RJ(O,k,y,p){var g;if(y instanceof Q.InstancedBufferGeometry){if(g=WJ.get("ANGLE_instanced_arrays"),g===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}if(p===void 0)p=0;a.initAttributes();var t=y.attributes,ZJ=k.getAttributes(),e=O.defaultAttributeValues;for(var GJ in ZJ){var XJ=ZJ[GJ];if(XJ>=0){var $J=t[GJ];if($J!==void 0){var JJ=I.FLOAT,OJ=$J.array,MJ=$J.normalized;if(OJ instanceof Float32Array)JJ=I.FLOAT;else if(OJ instanceof Float64Array)console.warn("Unsupported data buffer format: Float64Array");else if(OJ instanceof Uint16Array)JJ=I.UNSIGNED_SHORT;else if(OJ instanceof Int16Array)JJ=I.SHORT;else if(OJ instanceof Uint32Array)JJ=I.UNSIGNED_INT;else if(OJ instanceof Int32Array)JJ=I.INT;else if(OJ instanceof Int8Array)JJ=I.BYTE;else if(OJ instanceof Uint8Array)JJ=I.UNSIGNED_BYTE;var LJ=$J.itemSize,IJ=UJ.getAttributeBuffer($J);if($J instanceof Q.InterleavedBufferAttribute){var jJ=$J.data,YJ=jJ.stride,lJ=$J.offset;if(jJ instanceof Q.InstancedInterleavedBuffer){if(a.enableAttributeAndDivisor(XJ,jJ.meshPerAttribute,g),y.maxInstancedCount===void 0)y.maxInstancedCount=jJ.meshPerAttribute*jJ.count}else a.enableAttribute(XJ);I.bindBuffer(I.ARRAY_BUFFER,IJ),I.vertexAttribPointer(XJ,LJ,JJ,MJ,YJ*jJ.array.BYTES_PER_ELEMENT,(p*YJ+lJ)*jJ.array.BYTES_PER_ELEMENT)}else{if($J instanceof Q.InstancedBufferAttribute){if(a.enableAttributeAndDivisor(XJ,$J.meshPerAttribute,g),y.maxInstancedCount===void 0)y.maxInstancedCount=$J.meshPerAttribute*$J.count}else a.enableAttribute(XJ);I.bindBuffer(I.ARRAY_BUFFER,IJ),I.vertexAttribPointer(XJ,LJ,JJ,MJ,0,p*LJ*$J.array.BYTES_PER_ELEMENT)}}else if(e!==void 0){var yJ=e[GJ];if(yJ!==void 0)switch(yJ.length){case 2:I.vertexAttrib2fv(XJ,yJ);break;case 3:I.vertexAttrib3fv(XJ,yJ);break;case 4:I.vertexAttrib4fv(XJ,yJ);break;default:I.vertexAttrib1fv(XJ,yJ)}}}}a.disableUnusedAttributes()}function k0(O,k){return Math.abs(k[0])-Math.abs(O[0])}function A0(O,k){if(O.object.renderOrder!==k.object.renderOrder)return O.object.renderOrder-k.object.renderOrder;else if(O.material.id!==k.material.id)return O.material.id-k.material.id;else if(O.z!==k.z)return O.z-k.z;else return O.id-k.id}function C0(O,k){if(O.object.renderOrder!==k.object.renderOrder)return O.object.renderOrder-k.object.renderOrder;if(O.z!==k.z)return k.z-O.z;else return O.id-k.id}this.render=function(O,k,y,p){if(k instanceof Q.Camera===!1){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var g=O.fog;if(x="",_=-1,H=null,O.autoUpdate===!0)O.updateMatrixWorld();if(k.parent===null)k.updateMatrixWorld();if(k.matrixWorldInverse.getInverse(k.matrixWorld),m.multiplyMatrices(k.projectionMatrix,k.matrixWorldInverse),r.setFromMatrix(m),D.length=0,B=-1,V=-1,z.length=0,F.length=0,P=this.localClippingEnabled,j=n.init(this.clippingPlanes,P,k),Y0(O,k),N.length=B+1,q.length=V+1,L.sortObjects===!0)N.sort(A0),q.sort(C0);if(j)n.beginShadows();if(x0(D),CJ.render(O,k),h0(D,k),j)n.endShadows();if(KJ.calls=0,KJ.vertices=0,KJ.faces=0,KJ.points=0,y===void 0)y=null;if(this.setRenderTarget(y),this.autoClear||p)this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);if(O.overrideMaterial){var t=O.overrideMaterial;gJ(N,k,g,t),gJ(q,k,g,t)}else a.setBlending(Q.NoBlending),gJ(N,k,g),gJ(q,k,g);if(bJ.render(O,k),hJ.render(O,k,R),y){var ZJ=y.texture;if(ZJ.generateMipmaps&&mJ(y)&&ZJ.minFilter!==Q.NearestFilter&&ZJ.minFilter!==Q.LinearFilter)o0(y)}a.setDepthTest(!0),a.setDepthWrite(!0),a.setColorWrite(!0)};function aJ(O,k,y,p,g){var t,ZJ;if(y.transparent)t=q,ZJ=++V;else t=N,ZJ=++B;var e=t[ZJ];if(e!==void 0)e.id=O.id,e.object=O,e.geometry=k,e.material=y,e.z=o.z,e.group=g;else e={id:O.id,object:O,geometry:k,material:y,z:o.z,group:g},t.push(e)}function I0(O){var k=O.geometry;if(k.boundingSphere===null)k.computeBoundingSphere();return d.copy(k.boundingSphere).applyMatrix4(O.matrixWorld),K0(d)}function w0(O){return d.center.set(0,0,0),d.radius=0.7071067811865476,d.applyMatrix4(O.matrixWorld),K0(d)}function K0(O){if(!r.intersectsSphere(O))return!1;var k=n.numPlanes;if(k===0)return!0;var y=L.clippingPlanes,p=O.center,g=-O.radius,t=0;do if(y[t].distanceToPoint(p)<g)return!1;while(++t!==k);return!0}function Y0(O,k){if(O.visible===!1)return;if(O.layers.test(k.layers)){if(O instanceof Q.Light)D.push(O);else if(O instanceof Q.Sprite){if(O.frustumCulled===!1||w0(O)===!0)z.push(O)}else if(O instanceof Q.LensFlare)F.push(O);else if(O instanceof Q.ImmediateRenderObject){if(L.sortObjects===!0)o.setFromMatrixPosition(O.matrixWorld),o.applyProjection(m);aJ(O,null,O.material,o.z,null)}else if(O instanceof Q.Mesh||O instanceof Q.Line||O instanceof Q.Points){if(O instanceof Q.SkinnedMesh)O.skeleton.update();if(O.frustumCulled===!1||I0(O)===!0){var y=O.material;if(y.visible===!0){if(L.sortObjects===!0)o.setFromMatrixPosition(O.matrixWorld),o.applyProjection(m);var p=UJ.update(O);if(y instanceof Q.MultiMaterial){var g=p.groups,t=y.materials;for(var ZJ=0,e=g.length;ZJ<e;ZJ++){var GJ=g[ZJ],XJ=t[GJ.materialIndex];if(XJ.visible===!0)aJ(O,p,XJ,o.z,GJ)}}else aJ(O,p,y,o.z,null)}}}}var $J=O.children;for(var ZJ=0,e=$J.length;ZJ<e;ZJ++)Y0($J[ZJ],k)}function gJ(O,k,y,p){for(var g=0,t=O.length;g<t;g++){var ZJ=O[g],e=ZJ.object,GJ=ZJ.geometry,XJ=p===void 0?ZJ.material:p,$J=ZJ.group;if(e.modelViewMatrix.multiplyMatrices(k.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),e instanceof Q.ImmediateRenderObject){X0(XJ);var JJ=G0(k,y,XJ,e);x="",e.render(function(OJ){L.renderBufferImmediate(OJ,JJ,XJ)})}else L.renderBufferDirect(k,y,GJ,XJ,e,$J)}}function _0(O,k,y){var p=DJ.get(O),g=NJ.getParameters(O,i,k,n.numPlanes,y),t=NJ.getProgramCode(O,g),ZJ=p.program,e=!0;if(ZJ===void 0)O.addEventListener("dispose",uJ);else if(ZJ.code!==t)pJ(O);else if(g.shaderID!==void 0)return;else e=!1;if(e){if(g.shaderID){var GJ=Q.ShaderLib[g.shaderID];p.__webglShader={name:O.type,uniforms:Q.UniformsUtils.clone(GJ.uniforms),vertexShader:GJ.vertexShader,fragmentShader:GJ.fragmentShader}}else p.__webglShader={name:O.type,uniforms:O.uniforms,vertexShader:O.vertexShader,fragmentShader:O.fragmentShader};O.__webglShader=p.__webglShader,ZJ=NJ.acquireProgram(O,g,t),p.program=ZJ,O.program=ZJ}var XJ=ZJ.getAttributes();if(O.morphTargets){O.numSupportedMorphTargets=0;for(var $J=0;$J<L.maxMorphTargets;$J++)if(XJ["morphTarget"+$J]>=0)O.numSupportedMorphTargets++}if(O.morphNormals){O.numSupportedMorphNormals=0;for(var $J=0;$J<L.maxMorphNormals;$J++)if(XJ["morphNormal"+$J]>=0)O.numSupportedMorphNormals++}var JJ=p.__webglShader.uniforms;if(!(O instanceof Q.ShaderMaterial)&&!(O instanceof Q.RawShaderMaterial)||O.clipping===!0)p.numClippingPlanes=n.numPlanes,JJ.clippingPlanes=n.uniform;if(O.lights)p.lightsHash=i.hash,JJ.ambientLightColor.value=i.ambient,JJ.directionalLights.value=i.directional,JJ.spotLights.value=i.spot,JJ.pointLights.value=i.point,JJ.hemisphereLights.value=i.hemi,JJ.directionalShadowMap.value=i.directionalShadowMap,JJ.directionalShadowMatrix.value=i.directionalShadowMatrix,JJ.spotShadowMap.value=i.spotShadowMap,JJ.spotShadowMatrix.value=i.spotShadowMatrix,JJ.pointShadowMap.value=i.pointShadowMap,JJ.pointShadowMatrix.value=i.pointShadowMatrix;var OJ=p.program.getUniforms(),MJ=Q.WebGLUniforms.seqWithValue(OJ.seq,JJ);p.uniformsList=MJ,p.dynamicUniforms=Q.WebGLUniforms.splitDynamic(MJ,JJ)}function X0(O){if(O.side!==Q.DoubleSide)a.enable(I.CULL_FACE);else a.disable(I.CULL_FACE);if(a.setFlipSided(O.side===Q.BackSide),O.transparent===!0)a.setBlending(O.blending,O.blendEquation,O.blendSrc,O.blendDst,O.blendEquationAlpha,O.blendSrcAlpha,O.blendDstAlpha,O.premultipliedAlpha);else a.setBlending(Q.NoBlending);a.setDepthFunc(O.depthFunc),a.setDepthTest(O.depthTest),a.setDepthWrite(O.depthWrite),a.setColorWrite(O.colorWrite),a.setPolygonOffset(O.polygonOffset,O.polygonOffsetFactor,O.polygonOffsetUnits)}function G0(O,k,y,p){u=0;var g=DJ.get(y);if(j){if(P||O!==H){var t=O===H&&y.id===_;n.setState(y.clippingPlanes,y.clipShadows,O,g,t)}if(g.numClippingPlanes!==void 0&&g.numClippingPlanes!==n.numPlanes)y.needsUpdate=!0}if(g.program===void 0)y.needsUpdate=!0;if(g.lightsHash!==void 0&&g.lightsHash!==i.hash)y.needsUpdate=!0;if(y.needsUpdate)_0(y,k,p),y.needsUpdate=!1;var ZJ=!1,e=!1,GJ=!1,XJ=g.program,$J=XJ.getUniforms(),JJ=g.__webglShader.uniforms;if(XJ.id!==A)I.useProgram(XJ.program),A=XJ.id,ZJ=!0,e=!0,GJ=!0;if(y.id!==_)_=y.id,e=!0;if(ZJ||O!==H){if($J.set(I,O,"projectionMatrix"),BJ.logarithmicDepthBuffer)$J.setValue(I,"logDepthBufFC",2/(Math.log(O.far+1)/Math.LN2));if(O!==H)H=O,e=!0,GJ=!0;if(y instanceof Q.ShaderMaterial||y instanceof Q.MeshPhongMaterial||y instanceof Q.MeshStandardMaterial||y.envMap){var OJ=$J.map.cameraPosition;if(OJ!==void 0)OJ.setValue(I,o.setFromMatrixPosition(O.matrixWorld))}if(y instanceof Q.MeshPhongMaterial||y instanceof Q.MeshLambertMaterial||y instanceof Q.MeshBasicMaterial||y instanceof Q.MeshStandardMaterial||y instanceof Q.ShaderMaterial||y.skinning)$J.setValue(I,"viewMatrix",O.matrixWorldInverse);$J.set(I,L,"toneMappingExposure"),$J.set(I,L,"toneMappingWhitePoint")}if(y.skinning){$J.setOptional(I,p,"bindMatrix"),$J.setOptional(I,p,"bindMatrixInverse");var MJ=p.skeleton;if(MJ)if(BJ.floatVertexTextures&&MJ.useVertexTexture)$J.set(I,MJ,"boneTexture"),$J.set(I,MJ,"boneTextureWidth"),$J.set(I,MJ,"boneTextureHeight");else $J.setOptional(I,MJ,"boneMatrices")}if(e){if(y.lights)v0(JJ,GJ);if(k&&y.fog)y0(JJ,k);if(y instanceof Q.MeshBasicMaterial||y instanceof Q.MeshLambertMaterial||y instanceof Q.MeshPhongMaterial||y instanceof Q.MeshStandardMaterial||y instanceof Q.MeshDepthMaterial)P0(JJ,y);if(y instanceof Q.LineBasicMaterial)W0(JJ,y);else if(y instanceof Q.LineDashedMaterial)W0(JJ,y),S0(JJ,y);else if(y instanceof Q.PointsMaterial)j0(JJ,y);else if(y instanceof Q.MeshLambertMaterial)b0(JJ,y);else if(y instanceof Q.MeshPhongMaterial)H0(JJ,y);else if(y instanceof Q.MeshPhysicalMaterial)R0(JJ,y);else if(y instanceof Q.MeshStandardMaterial)U0(JJ,y);else if(y instanceof Q.MeshDepthMaterial){if(y.displacementMap)JJ.displacementMap.value=y.displacementMap,JJ.displacementScale.value=y.displacementScale,JJ.displacementBias.value=y.displacementBias}else if(y instanceof Q.MeshNormalMaterial)JJ.opacity.value=y.opacity;Q.WebGLUniforms.upload(I,g.uniformsList,JJ,L)}$J.set(I,p,"modelViewMatrix"),$J.set(I,p,"normalMatrix"),$J.setValue(I,"modelMatrix",p.matrixWorld);var LJ=g.dynamicUniforms;if(LJ!==null)Q.WebGLUniforms.evalDynamic(LJ,JJ,p,O),Q.WebGLUniforms.upload(I,LJ,JJ,L);return XJ}function P0(O,k){if(O.opacity.value=k.opacity,O.diffuse.value=k.color,k.emissive)O.emissive.value.copy(k.emissive).multiplyScalar(k.emissiveIntensity);if(O.map.value=k.map,O.specularMap.value=k.specularMap,O.alphaMap.value=k.alphaMap,k.aoMap)O.aoMap.value=k.aoMap,O.aoMapIntensity.value=k.aoMapIntensity;var y;if(k.map)y=k.map;else if(k.specularMap)y=k.specularMap;else if(k.displacementMap)y=k.displacementMap;else if(k.normalMap)y=k.normalMap;else if(k.bumpMap)y=k.bumpMap;else if(k.roughnessMap)y=k.roughnessMap;else if(k.metalnessMap)y=k.metalnessMap;else if(k.alphaMap)y=k.alphaMap;else if(k.emissiveMap)y=k.emissiveMap;if(y!==void 0){if(y instanceof Q.WebGLRenderTarget)y=y.texture;var{offset:p,repeat:g}=y;O.offsetRepeat.value.set(p.x,p.y,g.x,g.y)}O.envMap.value=k.envMap,O.flipEnvMap.value=!(k.envMap instanceof Q.CubeTexture)?1:-1,O.reflectivity.value=k.reflectivity,O.refractionRatio.value=k.refractionRatio}function W0(O,k){O.diffuse.value=k.color,O.opacity.value=k.opacity}function S0(O,k){O.dashSize.value=k.dashSize,O.totalSize.value=k.dashSize+k.gapSize,O.scale.value=k.scale}function j0(O,k){if(O.diffuse.value=k.color,O.opacity.value=k.opacity,O.size.value=k.size*T,O.scale.value=$.clientHeight*0.5,O.map.value=k.map,k.map!==null){var y=k.map.offset,p=k.map.repeat;O.offsetRepeat.value.set(y.x,y.y,p.x,p.y)}}function y0(O,k){if(O.fogColor.value=k.color,k instanceof Q.Fog)O.fogNear.value=k.near,O.fogFar.value=k.far;else if(k instanceof Q.FogExp2)O.fogDensity.value=k.density}function b0(O,k){if(k.lightMap)O.lightMap.value=k.lightMap,O.lightMapIntensity.value=k.lightMapIntensity;if(k.emissiveMap)O.emissiveMap.value=k.emissiveMap}function H0(O,k){if(O.specular.value=k.specular,O.shininess.value=Math.max(k.shininess,0.0001),k.lightMap)O.lightMap.value=k.lightMap,O.lightMapIntensity.value=k.lightMapIntensity;if(k.emissiveMap)O.emissiveMap.value=k.emissiveMap;if(k.bumpMap)O.bumpMap.value=k.bumpMap,O.bumpScale.value=k.bumpScale;if(k.normalMap)O.normalMap.value=k.normalMap,O.normalScale.value.copy(k.normalScale);if(k.displacementMap)O.displacementMap.value=k.displacementMap,O.displacementScale.value=k.displacementScale,O.displacementBias.value=k.displacementBias}function U0(O,k){if(O.roughness.value=k.roughness,O.metalness.value=k.metalness,k.roughnessMap)O.roughnessMap.value=k.roughnessMap;if(k.metalnessMap)O.metalnessMap.value=k.metalnessMap;if(k.lightMap)O.lightMap.value=k.lightMap,O.lightMapIntensity.value=k.lightMapIntensity;if(k.emissiveMap)O.emissiveMap.value=k.emissiveMap;if(k.bumpMap)O.bumpMap.value=k.bumpMap,O.bumpScale.value=k.bumpScale;if(k.normalMap)O.normalMap.value=k.normalMap,O.normalScale.value.copy(k.normalScale);if(k.displacementMap)O.displacementMap.value=k.displacementMap,O.displacementScale.value=k.displacementScale,O.displacementBias.value=k.displacementBias;if(k.envMap)O.envMapIntensity.value=k.envMapIntensity}function R0(O,k){U0(O,k)}function v0(O,k){O.ambientLightColor.needsUpdate=k,O.directionalLights.needsUpdate=k,O.pointLights.needsUpdate=k,O.spotLights.needsUpdate=k,O.hemisphereLights.needsUpdate=k}function x0(O){var k=0;for(var y=0,p=O.length;y<p;y++){var g=O[y];if(g.castShadow)i.shadows[k++]=g}i.shadows.length=k}function h0(O,k){var y,p,g,t=0,ZJ=0,e=0,GJ,XJ,$J,JJ,OJ=k.matrixWorldInverse,MJ=0,LJ=0,IJ=0,jJ=0;for(y=0,p=O.length;y<p;y++)if(g=O[y],GJ=g.color,XJ=g.intensity,$J=g.distance,JJ=g.shadow&&g.shadow.map?g.shadow.map.texture:null,g instanceof Q.AmbientLight)t+=GJ.r*XJ,ZJ+=GJ.g*XJ,e+=GJ.b*XJ;else if(g instanceof Q.DirectionalLight){var YJ=VJ.get(g);if(YJ.color.copy(g.color).multiplyScalar(g.intensity),YJ.direction.setFromMatrixPosition(g.matrixWorld),o.setFromMatrixPosition(g.target.matrixWorld),YJ.direction.sub(o),YJ.direction.transformDirection(OJ),YJ.shadow=g.castShadow,g.castShadow)YJ.shadowBias=g.shadow.bias,YJ.shadowRadius=g.shadow.radius,YJ.shadowMapSize=g.shadow.mapSize;i.directionalShadowMap[MJ]=JJ,i.directionalShadowMatrix[MJ]=g.shadow.matrix,i.directional[MJ++]=YJ}else if(g instanceof Q.SpotLight){var YJ=VJ.get(g);if(YJ.position.setFromMatrixPosition(g.matrixWorld),YJ.position.applyMatrix4(OJ),YJ.color.copy(GJ).multiplyScalar(XJ),YJ.distance=$J,YJ.direction.setFromMatrixPosition(g.matrixWorld),o.setFromMatrixPosition(g.target.matrixWorld),YJ.direction.sub(o),YJ.direction.transformDirection(OJ),YJ.coneCos=Math.cos(g.angle),YJ.penumbraCos=Math.cos(g.angle*(1-g.penumbra)),YJ.decay=g.distance===0?0:g.decay,YJ.shadow=g.castShadow,g.castShadow)YJ.shadowBias=g.shadow.bias,YJ.shadowRadius=g.shadow.radius,YJ.shadowMapSize=g.shadow.mapSize;i.spotShadowMap[IJ]=JJ,i.spotShadowMatrix[IJ]=g.shadow.matrix,i.spot[IJ++]=YJ}else if(g instanceof Q.PointLight){var YJ=VJ.get(g);if(YJ.position.setFromMatrixPosition(g.matrixWorld),YJ.position.applyMatrix4(OJ),YJ.color.copy(g.color).multiplyScalar(g.intensity),YJ.distance=g.distance,YJ.decay=g.distance===0?0:g.decay,YJ.shadow=g.castShadow,g.castShadow)YJ.shadowBias=g.shadow.bias,YJ.shadowRadius=g.shadow.radius,YJ.shadowMapSize=g.shadow.mapSize;if(i.pointShadowMap[LJ]=JJ,i.pointShadowMatrix[LJ]===void 0)i.pointShadowMatrix[LJ]=new Q.Matrix4;o.setFromMatrixPosition(g.matrixWorld).negate(),i.pointShadowMatrix[LJ].identity().setPosition(o),i.point[LJ++]=YJ}else if(g instanceof Q.HemisphereLight){var YJ=VJ.get(g);YJ.direction.setFromMatrixPosition(g.matrixWorld),YJ.direction.transformDirection(OJ),YJ.direction.normalize(),YJ.skyColor.copy(g.color).multiplyScalar(XJ),YJ.groundColor.copy(g.groundColor).multiplyScalar(XJ),i.hemi[jJ++]=YJ}i.ambient[0]=t,i.ambient[1]=ZJ,i.ambient[2]=e,i.directional.length=MJ,i.spot.length=IJ,i.point.length=LJ,i.hemi.length=jJ,i.hash=MJ+","+LJ+","+IJ+","+jJ+","+i.shadows.length}this.setFaceCulling=function(O,k){a.setCullFace(O),a.setFlipSided(k===Q.FrontFaceDirectionCW)};function f0(){var O=u;if(O>=BJ.maxTextures)console.warn("WebGLRenderer: trying to use "+O+" texture units while this GPU supports only "+BJ.maxTextures);return u+=1,O}function cJ(O,k,y){var p;if(y)I.texParameteri(O,I.TEXTURE_WRAP_S,SJ(k.wrapS)),I.texParameteri(O,I.TEXTURE_WRAP_T,SJ(k.wrapT)),I.texParameteri(O,I.TEXTURE_MAG_FILTER,SJ(k.magFilter)),I.texParameteri(O,I.TEXTURE_MIN_FILTER,SJ(k.minFilter));else{if(I.texParameteri(O,I.TEXTURE_WRAP_S,I.CLAMP_TO_EDGE),I.texParameteri(O,I.TEXTURE_WRAP_T,I.CLAMP_TO_EDGE),k.wrapS!==Q.ClampToEdgeWrapping||k.wrapT!==Q.ClampToEdgeWrapping)console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",k);if(I.texParameteri(O,I.TEXTURE_MAG_FILTER,B0(k.magFilter)),I.texParameteri(O,I.TEXTURE_MIN_FILTER,B0(k.minFilter)),k.minFilter!==Q.NearestFilter&&k.minFilter!==Q.LinearFilter)console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",k)}if(p=WJ.get("EXT_texture_filter_anisotropic"),p){if(k.type===Q.FloatType&&WJ.get("OES_texture_float_linear")===null)return;if(k.type===Q.HalfFloatType&&WJ.get("OES_texture_half_float_linear")===null)return;if(k.anisotropy>1||DJ.get(k).__currentAnisotropy)I.texParameterf(O,p.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(k.anisotropy,L.getMaxAnisotropy())),DJ.get(k).__currentAnisotropy=k.anisotropy}}function T0(O,k,y){if(O.__webglInit===void 0)O.__webglInit=!0,k.addEventListener("dispose",HJ),O.__webglTexture=I.createTexture(),QJ.textures++;a.activeTexture(I.TEXTURE0+y),a.bindTexture(I.TEXTURE_2D,O.__webglTexture),I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,k.flipY),I.pixelStorei(I.UNPACK_PREMULTIPLY_ALPHA_WEBGL,k.premultiplyAlpha),I.pixelStorei(I.UNPACK_ALIGNMENT,k.unpackAlignment);var p=D0(k.image,BJ.maxTextureSize);if(p0(k)&&mJ(p)===!1)p=d0(p);var g=mJ(p),t=SJ(k.format),ZJ=SJ(k.type);cJ(I.TEXTURE_2D,k,g);var e,GJ=k.mipmaps;if(k instanceof Q.DepthTexture){var XJ=I.DEPTH_COMPONENT;if(k.type===Q.FloatType){if(!kJ)throw new Error("Float Depth Texture only supported in WebGL2.0");XJ=I.DEPTH_COMPONENT32F}else if(kJ)XJ=I.DEPTH_COMPONENT16;a.texImage2D(I.TEXTURE_2D,0,XJ,p.width,p.height,0,t,ZJ,null)}else if(k instanceof Q.DataTexture)if(GJ.length>0&&g){for(var $J=0,JJ=GJ.length;$J<JJ;$J++)e=GJ[$J],a.texImage2D(I.TEXTURE_2D,$J,t,e.width,e.height,0,t,ZJ,e.data);k.generateMipmaps=!1}else a.texImage2D(I.TEXTURE_2D,0,t,p.width,p.height,0,t,ZJ,p.data);else if(k instanceof Q.CompressedTexture)for(var $J=0,JJ=GJ.length;$J<JJ;$J++)if(e=GJ[$J],k.format!==Q.RGBAFormat&&k.format!==Q.RGBFormat)if(a.getCompressedTextureFormats().indexOf(t)>-1)a.compressedTexImage2D(I.TEXTURE_2D,$J,t,e.width,e.height,0,e.data);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else a.texImage2D(I.TEXTURE_2D,$J,t,e.width,e.height,0,t,ZJ,e.data);else if(GJ.length>0&&g){for(var $J=0,JJ=GJ.length;$J<JJ;$J++)e=GJ[$J],a.texImage2D(I.TEXTURE_2D,$J,t,t,ZJ,e);k.generateMipmaps=!1}else a.texImage2D(I.TEXTURE_2D,0,t,t,ZJ,p);if(k.generateMipmaps&&g)I.generateMipmap(I.TEXTURE_2D);if(O.__version=k.version,k.onUpdate)k.onUpdate(k)}function u0(O,k){var y=DJ.get(O);if(O.version>0&&y.__version!==O.version){var p=O.image;if(p===void 0){console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",O);return}if(p.complete===!1){console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",O);return}T0(y,O,k);return}a.activeTexture(I.TEXTURE0+k),a.bindTexture(I.TEXTURE_2D,y.__webglTexture)}function D0(O,k){if(O.width>k||O.height>k){var y=k/Math.max(O.width,O.height),p=document.createElement("canvas");p.width=Math.floor(O.width*y),p.height=Math.floor(O.height*y);var g=p.getContext("2d");return g.drawImage(O,0,0,O.width,O.height,0,0,p.width,p.height),console.warn("THREE.WebGLRenderer: image is too big ("+O.width+"x"+O.height+"). Resized to "+p.width+"x"+p.height,O),p}return O}function mJ(O){return Q.Math.isPowerOfTwo(O.width)&&Q.Math.isPowerOfTwo(O.height)}function p0(O){if(O.wrapS!==Q.ClampToEdgeWrapping||O.wrapT!==Q.ClampToEdgeWrapping)return!0;if(O.minFilter!==Q.NearestFilter&&O.minFilter!==Q.LinearFilter)return!0;return!1}function d0(O){if(O instanceof HTMLImageElement||O instanceof HTMLCanvasElement){var k=document.createElement("canvas");k.width=Q.Math.nearestPowerOfTwo(O.width),k.height=Q.Math.nearestPowerOfTwo(O.height);var y=k.getContext("2d");return y.drawImage(O,0,0,k.width,k.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+O.width+"x"+O.height+"). Resized to "+k.width+"x"+k.height,O),k}return O}function E0(O,k){var y=DJ.get(O);if(O.image.length===6)if(O.version>0&&y.__version!==O.version){if(!y.__image__webglTextureCube)O.addEventListener("dispose",HJ),y.__image__webglTextureCube=I.createTexture(),QJ.textures++;a.activeTexture(I.TEXTURE0+k),a.bindTexture(I.TEXTURE_CUBE_MAP,y.__image__webglTextureCube),I.pixelStorei(I.UNPACK_FLIP_Y_WEBGL,O.flipY);var p=O instanceof Q.CompressedTexture,g=O.image[0]instanceof Q.DataTexture,t=[];for(var ZJ=0;ZJ<6;ZJ++)if(L.autoScaleCubemaps&&!p&&!g)t[ZJ]=D0(O.image[ZJ],BJ.maxCubemapSize);else t[ZJ]=g?O.image[ZJ].image:O.image[ZJ];var e=t[0],GJ=mJ(e),XJ=SJ(O.format),$J=SJ(O.type);cJ(I.TEXTURE_CUBE_MAP,O,GJ);for(var ZJ=0;ZJ<6;ZJ++)if(!p)if(g)a.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+ZJ,0,XJ,t[ZJ].width,t[ZJ].height,0,XJ,$J,t[ZJ].data);else a.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+ZJ,0,XJ,XJ,$J,t[ZJ]);else{var JJ,OJ=t[ZJ].mipmaps;for(var MJ=0,LJ=OJ.length;MJ<LJ;MJ++)if(JJ=OJ[MJ],O.format!==Q.RGBAFormat&&O.format!==Q.RGBFormat)if(a.getCompressedTextureFormats().indexOf(XJ)>-1)a.compressedTexImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+ZJ,MJ,XJ,JJ.width,JJ.height,0,JJ.data);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()");else a.texImage2D(I.TEXTURE_CUBE_MAP_POSITIVE_X+ZJ,MJ,XJ,JJ.width,JJ.height,0,XJ,$J,JJ.data)}if(O.generateMipmaps&&GJ)I.generateMipmap(I.TEXTURE_CUBE_MAP);if(y.__version=O.version,O.onUpdate)O.onUpdate(O)}else a.activeTexture(I.TEXTURE0+k),a.bindTexture(I.TEXTURE_CUBE_MAP,y.__image__webglTextureCube)}function g0(O,k){a.activeTexture(I.TEXTURE0+k),a.bindTexture(I.TEXTURE_CUBE_MAP,DJ.get(O).__webglTexture)}this.allocTextureUnit=f0,this.setTexture2D=function(){var O=!1;return function(k,y){if(k instanceof Q.WebGLRenderTarget){if(!O)console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),O=!0;k=k.texture}u0(k,y)}}(),this.setTexture=function(){var O=!1;return function(k,y){if(!O)console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),O=!0;L.setTexture2D(k,y)}}(),this.setTextureCube=function(){var O=!1;return function(k,y){if(k instanceof Q.WebGLRenderTargetCube){if(!O)console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),O=!0;k=k.texture}if(k instanceof Q.CubeTexture||Array.isArray(k.image)&&k.image.length===6)E0(k,y);else g0(k,y)}}();function N0(O,k,y,p){var g=SJ(k.texture.format),t=SJ(k.texture.type);a.texImage2D(p,0,g,k.width,k.height,0,g,t,null),I.bindFramebuffer(I.FRAMEBUFFER,O),I.framebufferTexture2D(I.FRAMEBUFFER,y,p,DJ.get(k.texture).__webglTexture,0),I.bindFramebuffer(I.FRAMEBUFFER,null)}function q0(O,k){if(I.bindRenderbuffer(I.RENDERBUFFER,O),k.depthBuffer&&!k.stencilBuffer)I.renderbufferStorage(I.RENDERBUFFER,I.DEPTH_COMPONENT16,k.width,k.height),I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_ATTACHMENT,I.RENDERBUFFER,O);else if(k.depthBuffer&&k.stencilBuffer)I.renderbufferStorage(I.RENDERBUFFER,I.DEPTH_STENCIL,k.width,k.height),I.framebufferRenderbuffer(I.FRAMEBUFFER,I.DEPTH_STENCIL_ATTACHMENT,I.RENDERBUFFER,O);else I.renderbufferStorage(I.RENDERBUFFER,I.RGBA4,k.width,k.height);I.bindRenderbuffer(I.RENDERBUFFER,null)}function c0(O,k){var y=k instanceof Q.WebGLRenderTargetCube;if(y)throw new Error("Depth Texture with cube render targets is not supported!");if(I.bindFramebuffer(I.FRAMEBUFFER,O),!(k.depthTexture instanceof Q.DepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(!DJ.get(k.depthTexture).__webglTexture||k.depthTexture.image.width!==k.width||k.depthTexture.image.height!==k.height)k.depthTexture.image.width=k.width,k.depthTexture.image.height=k.height,k.depthTexture.needsUpdate=!0;L.setTexture2D(k.depthTexture,0);var p=DJ.get(k.depthTexture).__webglTexture;I.framebufferTexture2D(I.FRAMEBUFFER,I.DEPTH_ATTACHMENT,I.TEXTURE_2D,p,0)}function m0(O){var k=DJ.get(O),y=O instanceof Q.WebGLRenderTargetCube;if(O.depthTexture){if(y)throw new Error("target.depthTexture not supported in Cube render targets");c0(k.__webglFramebuffer,O)}else if(y){k.__webglDepthbuffer=[];for(var p=0;p<6;p++)I.bindFramebuffer(I.FRAMEBUFFER,k.__webglFramebuffer[p]),k.__webglDepthbuffer[p]=I.createRenderbuffer(),q0(k.__webglDepthbuffer[p],O)}else I.bindFramebuffer(I.FRAMEBUFFER,k.__webglFramebuffer),k.__webglDepthbuffer=I.createRenderbuffer(),q0(k.__webglDepthbuffer,O);I.bindFramebuffer(I.FRAMEBUFFER,null)}function l0(O){var k=DJ.get(O),y=DJ.get(O.texture);O.addEventListener("dispose",TJ),y.__webglTexture=I.createTexture(),QJ.textures++;var p=O instanceof Q.WebGLRenderTargetCube,g=Q.Math.isPowerOfTwo(O.width)&&Q.Math.isPowerOfTwo(O.height);if(p){k.__webglFramebuffer=[];for(var t=0;t<6;t++)k.__webglFramebuffer[t]=I.createFramebuffer()}else k.__webglFramebuffer=I.createFramebuffer();if(p){a.bindTexture(I.TEXTURE_CUBE_MAP,y.__webglTexture),cJ(I.TEXTURE_CUBE_MAP,O.texture,g);for(var t=0;t<6;t++)N0(k.__webglFramebuffer[t],O,I.COLOR_ATTACHMENT0,I.TEXTURE_CUBE_MAP_POSITIVE_X+t);if(O.texture.generateMipmaps&&g)I.generateMipmap(I.TEXTURE_CUBE_MAP);a.bindTexture(I.TEXTURE_CUBE_MAP,null)}else{if(a.bindTexture(I.TEXTURE_2D,y.__webglTexture),cJ(I.TEXTURE_2D,O.texture,g),N0(k.__webglFramebuffer,O,I.COLOR_ATTACHMENT0,I.TEXTURE_2D),O.texture.generateMipmaps&&g)I.generateMipmap(I.TEXTURE_2D);a.bindTexture(I.TEXTURE_2D,null)}if(O.depthBuffer)m0(O)}this.getCurrentRenderTarget=function(){return C},this.setRenderTarget=function(O){if(C=O,O&&DJ.get(O).__webglFramebuffer===void 0)l0(O);var k=O instanceof Q.WebGLRenderTargetCube,y;if(O){var p=DJ.get(O);if(k)y=p.__webglFramebuffer[O.activeCubeFace];else y=p.__webglFramebuffer;v.copy(O.scissor),b=O.scissorTest,R.copy(O.viewport)}else y=null,v.copy(f).multiplyScalar(T),b=l,R.copy(s).multiplyScalar(T);if(w!==y)I.bindFramebuffer(I.FRAMEBUFFER,y),w=y;if(a.scissor(v),a.setScissorTest(b),a.viewport(R),k){var g=DJ.get(O.texture);I.framebufferTexture2D(I.FRAMEBUFFER,I.COLOR_ATTACHMENT0,I.TEXTURE_CUBE_MAP_POSITIVE_X+O.activeCubeFace,g.__webglTexture,O.activeMipMapLevel)}},this.readRenderTargetPixels=function(O,k,y,p,g,t){if(O instanceof Q.WebGLRenderTarget===!1){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var ZJ=DJ.get(O).__webglFramebuffer;if(ZJ){var e=!1;if(ZJ!==w)I.bindFramebuffer(I.FRAMEBUFFER,ZJ),e=!0;try{var GJ=O.texture;if(GJ.format!==Q.RGBAFormat&&SJ(GJ.format)!==I.getParameter(I.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(GJ.type!==Q.UnsignedByteType&&SJ(GJ.type)!==I.getParameter(I.IMPLEMENTATION_COLOR_READ_TYPE)&&!(GJ.type===Q.FloatType&&WJ.get("WEBGL_color_buffer_float"))&&!(GJ.type===Q.HalfFloatType&&WJ.get("EXT_color_buffer_half_float"))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}if(I.checkFramebufferStatus(I.FRAMEBUFFER)===I.FRAMEBUFFER_COMPLETE){if(k>=0&&k<=O.width-p&&(y>=0&&y<=O.height-g))I.readPixels(k,y,p,g,SJ(GJ.format),SJ(GJ.type),t)}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{if(e)I.bindFramebuffer(I.FRAMEBUFFER,w)}}};function o0(O){var k=O instanceof Q.WebGLRenderTargetCube?I.TEXTURE_CUBE_MAP:I.TEXTURE_2D,y=DJ.get(O.texture).__webglTexture;a.bindTexture(k,y),I.generateMipmap(k),a.bindTexture(k,null)}function B0(O){if(O===Q.NearestFilter||O===Q.NearestMipMapNearestFilter||O===Q.NearestMipMapLinearFilter)return I.NEAREST;return I.LINEAR}function SJ(O){var k;if(O===Q.RepeatWrapping)return I.REPEAT;if(O===Q.ClampToEdgeWrapping)return I.CLAMP_TO_EDGE;if(O===Q.MirroredRepeatWrapping)return I.MIRRORED_REPEAT;if(O===Q.NearestFilter)return I.NEAREST;if(O===Q.NearestMipMapNearestFilter)return I.NEAREST_MIPMAP_NEAREST;if(O===Q.NearestMipMapLinearFilter)return I.NEAREST_MIPMAP_LINEAR;if(O===Q.LinearFilter)return I.LINEAR;if(O===Q.LinearMipMapNearestFilter)return I.LINEAR_MIPMAP_NEAREST;if(O===Q.LinearMipMapLinearFilter)return I.LINEAR_MIPMAP_LINEAR;if(O===Q.UnsignedByteType)return I.UNSIGNED_BYTE;if(O===Q.UnsignedShort4444Type)return I.UNSIGNED_SHORT_4_4_4_4;if(O===Q.UnsignedShort5551Type)return I.UNSIGNED_SHORT_5_5_5_1;if(O===Q.UnsignedShort565Type)return I.UNSIGNED_SHORT_5_6_5;if(O===Q.ByteType)return I.BYTE;if(O===Q.ShortType)return I.SHORT;if(O===Q.UnsignedShortType)return I.UNSIGNED_SHORT;if(O===Q.IntType)return I.INT;if(O===Q.UnsignedIntType)return I.UNSIGNED_INT;if(O===Q.FloatType)return I.FLOAT;if(k=WJ.get("OES_texture_half_float"),k!==null){if(O===Q.HalfFloatType)return k.HALF_FLOAT_OES}if(O===Q.AlphaFormat)return I.ALPHA;if(O===Q.RGBFormat)return I.RGB;if(O===Q.RGBAFormat)return I.RGBA;if(O===Q.LuminanceFormat)return I.LUMINANCE;if(O===Q.LuminanceAlphaFormat)return I.LUMINANCE_ALPHA;if(O===Q.DepthFormat)return I.DEPTH_COMPONENT;if(O===Q.AddEquation)return I.FUNC_ADD;if(O===Q.SubtractEquation)return I.FUNC_SUBTRACT;if(O===Q.ReverseSubtractEquation)return I.FUNC_REVERSE_SUBTRACT;if(O===Q.ZeroFactor)return I.ZERO;if(O===Q.OneFactor)return I.ONE;if(O===Q.SrcColorFactor)return I.SRC_COLOR;if(O===Q.OneMinusSrcColorFactor)return I.ONE_MINUS_SRC_COLOR;if(O===Q.SrcAlphaFactor)return I.SRC_ALPHA;if(O===Q.OneMinusSrcAlphaFactor)return I.ONE_MINUS_SRC_ALPHA;if(O===Q.DstAlphaFactor)return I.DST_ALPHA;if(O===Q.OneMinusDstAlphaFactor)return I.ONE_MINUS_DST_ALPHA;if(O===Q.DstColorFactor)return I.DST_COLOR;if(O===Q.OneMinusDstColorFactor)return I.ONE_MINUS_DST_COLOR;if(O===Q.SrcAlphaSaturateFactor)return I.SRC_ALPHA_SATURATE;if(k=WJ.get("WEBGL_compressed_texture_s3tc"),k!==null){if(O===Q.RGB_S3TC_DXT1_Format)return k.COMPRESSED_RGB_S3TC_DXT1_EXT;if(O===Q.RGBA_S3TC_DXT1_Format)return k.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(O===Q.RGBA_S3TC_DXT3_Format)return k.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(O===Q.RGBA_S3TC_DXT5_Format)return k.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(k=WJ.get("WEBGL_compressed_texture_pvrtc"),k!==null){if(O===Q.RGB_PVRTC_4BPPV1_Format)return k.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(O===Q.RGB_PVRTC_2BPPV1_Format)return k.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(O===Q.RGBA_PVRTC_4BPPV1_Format)return k.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(O===Q.RGBA_PVRTC_2BPPV1_Format)return k.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(k=WJ.get("WEBGL_compressed_texture_etc1"),k!==null){if(O===Q.RGB_ETC1_Format)return k.COMPRESSED_RGB_ETC1_WEBGL}if(k=WJ.get("EXT_blend_minmax"),k!==null){if(O===Q.MinEquation)return k.MIN_EXT;if(O===Q.MaxEquation)return k.MAX_EXT}return 0}};Q.WebGLRenderTarget=function(J,$,Z){if(this.uuid=Q.Math.generateUUID(),this.width=J,this.height=$,this.scissor=new Q.Vector4(0,0,J,$),this.scissorTest=!1,this.viewport=new Q.Vector4(0,0,J,$),Z=Z||{},Z.minFilter===void 0)Z.minFilter=Q.LinearFilter;this.texture=new Q.Texture(void 0,void 0,Z.wrapS,Z.wrapT,Z.magFilter,Z.minFilter,Z.format,Z.type,Z.anisotropy,Z.encoding),this.depthBuffer=Z.depthBuffer!==void 0?Z.depthBuffer:!0,this.stencilBuffer=Z.stencilBuffer!==void 0?Z.stencilBuffer:!0,this.depthTexture=null};Object.assign(Q.WebGLRenderTarget.prototype,Q.EventDispatcher.prototype,{setSize:function(J,$){if(this.width!==J||this.height!==$)this.width=J,this.height=$,this.dispose();this.viewport.set(0,0,J,$),this.scissor.set(0,0,J,$)},clone:function(){return new this.constructor().copy(this)},copy:function(J){return this.width=J.width,this.height=J.height,this.viewport.copy(J.viewport),this.texture=J.texture.clone(),this.depthBuffer=J.depthBuffer,this.stencilBuffer=J.stencilBuffer,this.depthTexture=J.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});Q.WebGLRenderTargetCube=function(J,$,Z){Q.WebGLRenderTarget.call(this,J,$,Z),this.activeCubeFace=0,this.activeMipMapLevel=0};Q.WebGLRenderTargetCube.prototype=Object.create(Q.WebGLRenderTarget.prototype);Q.WebGLRenderTargetCube.prototype.constructor=Q.WebGLRenderTargetCube;Q.WebGLBufferRenderer=function(J,$,Z){var K;function Y(W){K=W}function X(W,U){if(J.drawArrays(K,W,U),Z.calls++,Z.vertices+=U,K===J.TRIANGLES)Z.faces+=U/3}function G(W){var U=$.get("ANGLE_instanced_arrays");if(U===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var D=W.attributes.position,N=0;if(D instanceof Q.InterleavedBufferAttribute)N=D.data.count,U.drawArraysInstancedANGLE(K,0,N,W.maxInstancedCount);else N=D.count,U.drawArraysInstancedANGLE(K,0,N,W.maxInstancedCount);if(Z.calls++,Z.vertices+=N*W.maxInstancedCount,K===J.TRIANGLES)Z.faces+=W.maxInstancedCount*N/3}this.setMode=Y,this.render=X,this.renderInstances=G};Q.WebGLClipping=function(){var J=this,$=null,Z=0,K=!1,Y=!1,X=new Q.Plane,G=new Q.Matrix3,W={value:null,needsUpdate:!1};this.uniform=W,this.numPlanes=0,this.init=function(N,B,q){var V=N.length!==0||B||Z!==0||K;return K=B,$=D(N,q,0),Z=N.length,V},this.beginShadows=function(){Y=!0,D(null)},this.endShadows=function(){Y=!1,U()},this.setState=function(N,B,q,V,M){if(!K||N===null||N.length===0||Y&&!B)if(Y)D(null);else U();else{var z=Y?0:Z,F=z*4,L=V.clippingState||null;W.value=L,L=D(N,q,F,M);for(var A=0;A!==F;++A)L[A]=$[A];V.clippingState=L,this.numPlanes+=z}};function U(){if(W.value!==$)W.value=$,W.needsUpdate=Z>0;J.numPlanes=Z}function D(N,B,q,V){var M=N!==null?N.length:0,z=null;if(M!==0){if(z=W.value,V!==!0||z===null){var F=q+M*4,L=B.matrixWorldInverse;if(G.getNormalMatrix(L),z===null||z.length<F)z=new Float32Array(F);for(var A=0,C=q;A!==M;++A,C+=4)X.copy(N[A]).applyMatrix4(L,G),X.normal.toArray(z,C),z[C+3]=X.constant}W.value=z,W.needsUpdate=!0}return J.numPlanes=M,z}};Q.WebGLIndexedBufferRenderer=function(J,$,Z){var K;function Y(N){K=N}var X,G;function W(N){if(N.array instanceof Uint32Array&&$.get("OES_element_index_uint"))X=J.UNSIGNED_INT,G=4;else X=J.UNSIGNED_SHORT,G=2}function U(N,B){if(J.drawElements(K,B,X,N*G),Z.calls++,Z.vertices+=B,K===J.TRIANGLES)Z.faces+=B/3}function D(N,B,q){var V=$.get("ANGLE_instanced_arrays");if(V===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}if(V.drawElementsInstancedANGLE(K,q,X,B*G,N.maxInstancedCount),Z.calls++,Z.vertices+=q*N.maxInstancedCount,K===J.TRIANGLES)Z.faces+=N.maxInstancedCount*q/3}this.setMode=Y,this.setIndex=W,this.render=U,this.renderInstances=D};Q.WebGLExtensions=function(J){var $={};this.get=function(Z){if($[Z]!==void 0)return $[Z];var K;switch(Z){case"WEBGL_depth_texture":K=J.getExtension("WEBGL_depth_texture")||J.getExtension("MOZ_WEBGL_depth_texture")||J.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":K=J.getExtension("EXT_texture_filter_anisotropic")||J.getExtension("MOZ_EXT_texture_filter_anisotropic")||J.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":K=J.getExtension("WEBGL_compressed_texture_s3tc")||J.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||J.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":K=J.getExtension("WEBGL_compressed_texture_pvrtc")||J.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":K=J.getExtension("WEBGL_compressed_texture_etc1");break;default:K=J.getExtension(Z)}if(K===null)console.warn("THREE.WebGLRenderer: "+Z+" extension not supported.");return $[Z]=K,K}};Q.WebGLCapabilities=function(J,$,Z){function K(X){if(X==="highp"){if(J.getShaderPrecisionFormat(J.VERTEX_SHADER,J.HIGH_FLOAT).precision>0&&J.getShaderPrecisionFormat(J.FRAGMENT_SHADER,J.HIGH_FLOAT).precision>0)return"highp";X="mediump"}if(X==="mediump"){if(J.getShaderPrecisionFormat(J.VERTEX_SHADER,J.MEDIUM_FLOAT).precision>0&&J.getShaderPrecisionFormat(J.FRAGMENT_SHADER,J.MEDIUM_FLOAT).precision>0)return"mediump"}return"lowp"}this.getMaxPrecision=K,this.precision=Z.precision!==void 0?Z.precision:"highp",this.logarithmicDepthBuffer=Z.logarithmicDepthBuffer!==void 0?Z.logarithmicDepthBuffer:!1,this.maxTextures=J.getParameter(J.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=J.getParameter(J.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=J.getParameter(J.MAX_TEXTURE_SIZE),this.maxCubemapSize=J.getParameter(J.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=J.getParameter(J.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=J.getParameter(J.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=J.getParameter(J.MAX_VARYING_VECTORS),this.maxFragmentUniforms=J.getParameter(J.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=this.maxVertexTextures>0,this.floatFragmentTextures=!!$.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var Y=K(this.precision);if(Y!==this.precision)console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",Y,"instead."),this.precision=Y;if(this.logarithmicDepthBuffer)this.logarithmicDepthBuffer=!!$.get("EXT_frag_depth")};Q.WebGLGeometries=function(J,$,Z){var K={};function Y(N){var B=N.geometry;if(K[B.id]!==void 0)return K[B.id];B.addEventListener("dispose",X);var q;if(B instanceof Q.BufferGeometry)q=B;else if(B instanceof Q.Geometry){if(B._bufferGeometry===void 0)B._bufferGeometry=new Q.BufferGeometry().setFromObject(N);q=B._bufferGeometry}return K[B.id]=q,Z.memory.geometries++,q}function X(N){var B=N.target,q=K[B.id];if(q.index!==null)W(q.index);U(q.attributes),B.removeEventListener("dispose",X),delete K[B.id];var V=$.get(B);if(V.wireframe)W(V.wireframe);$.delete(B);var M=$.get(q);if(M.wireframe)W(M.wireframe);$.delete(q),Z.memory.geometries--}function G(N){if(N instanceof Q.InterleavedBufferAttribute)return $.get(N.data).__webglBuffer;return $.get(N).__webglBuffer}function W(N){var B=G(N);if(B!==void 0)J.deleteBuffer(B),D(N)}function U(N){for(var B in N)W(N[B])}function D(N){if(N instanceof Q.InterleavedBufferAttribute)$.delete(N.data);else $.delete(N)}this.get=Y};Q.WebGLLights=function(){var J={};this.get=function($){if(J[$.id]!==void 0)return J[$.id];var Z;switch($.type){case"DirectionalLight":Z={direction:new Q.Vector3,color:new Q.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Q.Vector2};break;case"SpotLight":Z={position:new Q.Vector3,direction:new Q.Vector3,color:new Q.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Q.Vector2};break;case"PointLight":Z={position:new Q.Vector3,color:new Q.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Q.Vector2};break;case"HemisphereLight":Z={direction:new Q.Vector3,skyColor:new Q.Color,groundColor:new Q.Color};break}return J[$.id]=Z,Z}};Q.WebGLObjects=function(J,$,Z){var K=new Q.WebGLGeometries(J,$,Z);function Y(B){var q=K.get(B);if(B.geometry instanceof Q.Geometry)q.updateFromObject(B);var{index:V,attributes:M}=q;if(V!==null)X(V,J.ELEMENT_ARRAY_BUFFER);for(var z in M)X(M[z],J.ARRAY_BUFFER);var F=q.morphAttributes;for(var z in F){var L=F[z];for(var A=0,C=L.length;A<C;A++)X(L[A],J.ARRAY_BUFFER)}return q}function X(B,q){var V=B instanceof Q.InterleavedBufferAttribute?B.data:B,M=$.get(V);if(M.__webglBuffer===void 0)G(M,V,q);else if(M.version!==V.version)W(M,V,q)}function G(B,q,V){B.__webglBuffer=J.createBuffer(),J.bindBuffer(V,B.__webglBuffer);var M=q.dynamic?J.DYNAMIC_DRAW:J.STATIC_DRAW;J.bufferData(V,q.array,M),B.version=q.version}function W(B,q,V){if(J.bindBuffer(V,B.__webglBuffer),q.dynamic===!1||q.updateRange.count===-1)J.bufferSubData(V,0,q.array);else if(q.updateRange.count===0)console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.");else J.bufferSubData(V,q.updateRange.offset*q.array.BYTES_PER_ELEMENT,q.array.subarray(q.updateRange.offset,q.updateRange.offset+q.updateRange.count)),q.updateRange.count=0;B.version=q.version}function U(B){if(B instanceof Q.InterleavedBufferAttribute)return $.get(B.data).__webglBuffer;return $.get(B).__webglBuffer}function D(B){var q=$.get(B);if(q.wireframe!==void 0)return q.wireframe;var V=[],M=B.index,z=B.attributes,F=z.position;if(M!==null){var L={},A=M.array;for(var C=0,w=A.length;C<w;C+=3){var _=A[C+0],x=A[C+1],H=A[C+2];if(N(L,_,x))V.push(_,x);if(N(L,x,H))V.push(x,H);if(N(L,H,_))V.push(H,_)}}else{var A=z.position.array;for(var C=0,w=A.length/3-1;C<w;C+=3){var _=C+0,x=C+1,H=C+2;V.push(_,x,x,H,H,_)}}var v=F.count>65535?Uint32Array:Uint16Array,b=new Q.BufferAttribute(new v(V),1);return X(b,J.ELEMENT_ARRAY_BUFFER),q.wireframe=b,b}function N(B,q,V){if(q>V){var M=q;q=V,V=M}var z=B[q];if(z===void 0)return B[q]=[V],!0;else if(z.indexOf(V)===-1)return z.push(V),!0;return!1}this.getAttributeBuffer=U,this.getWireframeAttribute=D,this.update=Y};Q.WebGLProgram=function(){var J=0;function $(q){switch(q){case Q.LinearEncoding:return["Linear","( value )"];case Q.sRGBEncoding:return["sRGB","( value )"];case Q.RGBEEncoding:return["RGBE","( value )"];case Q.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case Q.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case Q.RGBDEncoding:return["RGBD","( value, 256.0 )"];case Q.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+q)}}function Z(q,V){var M=$(V);return"vec4 "+q+"( vec4 value ) { return "+M[0]+"ToLinear"+M[1]+"; }"}function K(q,V){var M=$(V);return"vec4 "+q+"( vec4 value ) { return LinearTo"+M[0]+M[1]+"; }"}function Y(q,V){var M;switch(V){case Q.LinearToneMapping:M="Linear";break;case Q.ReinhardToneMapping:M="Reinhard";break;case Q.Uncharted2ToneMapping:M="Uncharted2";break;case Q.CineonToneMapping:M="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+V)}return"vec3 "+q+"( vec3 color ) { return "+M+"ToneMapping( color ); }"}function X(q,V,M){q=q||{};var z=[q.derivatives||V.envMapCubeUV||V.bumpMap||V.normalMap||V.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(q.fragDepth||V.logarithmicDepthBuffer)&&M.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",q.drawBuffers&&M.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(q.shaderTextureLOD||V.envMap)&&M.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return z.filter(U).join(`
`)}function G(q){var V=[];for(var M in q){var z=q[M];if(z===!1)continue;V.push("#define "+M+" "+z)}return V.join(`
`)}function W(q,V,M){var z={},F=q.getProgramParameter(V,q.ACTIVE_ATTRIBUTES);for(var L=0;L<F;L++){var A=q.getActiveAttrib(V,L),C=A.name;z[C]=q.getAttribLocation(V,C)}return z}function U(q){return q!==""}function D(q,V){return q.replace(/NUM_DIR_LIGHTS/g,V.numDirLights).replace(/NUM_SPOT_LIGHTS/g,V.numSpotLights).replace(/NUM_POINT_LIGHTS/g,V.numPointLights).replace(/NUM_HEMI_LIGHTS/g,V.numHemiLights)}function N(q){var V=/#include +<([\w\d.]+)>/g;function M(z,F){var L=Q.ShaderChunk[F];if(L===void 0)throw new Error("Can not resolve #include <"+F+">");return N(L)}return q.replace(V,M)}function B(q){var V=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function M(z,F,L,A){var C="";for(var w=parseInt(F);w<parseInt(L);w++)C+=A.replace(/\[ i \]/g,"[ "+w+" ]");return C}return q.replace(V,M)}return function q(V,M,z,F){var L=V.context,A=z.extensions,C=z.defines,w=z.__webglShader.vertexShader,_=z.__webglShader.fragmentShader,x="SHADOWMAP_TYPE_BASIC";if(F.shadowMapType===Q.PCFShadowMap)x="SHADOWMAP_TYPE_PCF";else if(F.shadowMapType===Q.PCFSoftShadowMap)x="SHADOWMAP_TYPE_PCF_SOFT";var H="ENVMAP_TYPE_CUBE",v="ENVMAP_MODE_REFLECTION",b="ENVMAP_BLENDING_MULTIPLY";if(F.envMap){switch(z.envMap.mapping){case Q.CubeReflectionMapping:case Q.CubeRefractionMapping:H="ENVMAP_TYPE_CUBE";break;case Q.CubeUVReflectionMapping:case Q.CubeUVRefractionMapping:H="ENVMAP_TYPE_CUBE_UV";break;case Q.EquirectangularReflectionMapping:case Q.EquirectangularRefractionMapping:H="ENVMAP_TYPE_EQUIREC";break;case Q.SphericalReflectionMapping:H="ENVMAP_TYPE_SPHERE";break}switch(z.envMap.mapping){case Q.CubeRefractionMapping:case Q.EquirectangularRefractionMapping:v="ENVMAP_MODE_REFRACTION";break}switch(z.combine){case Q.MultiplyOperation:b="ENVMAP_BLENDING_MULTIPLY";break;case Q.MixOperation:b="ENVMAP_BLENDING_MIX";break;case Q.AddOperation:b="ENVMAP_BLENDING_ADD";break}}var R=V.gammaFactor>0?V.gammaFactor:1,u=X(A,F,V.extensions),E=G(C),h=L.createProgram(),c,S;if(z instanceof Q.RawShaderMaterial)c="",S="";else c=["precision "+F.precision+" float;","precision "+F.precision+" int;","#define SHADER_NAME "+z.__webglShader.name,E,F.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+R,"#define MAX_BONES "+F.maxBones,F.map?"#define USE_MAP":"",F.envMap?"#define USE_ENVMAP":"",F.envMap?"#define "+v:"",F.lightMap?"#define USE_LIGHTMAP":"",F.aoMap?"#define USE_AOMAP":"",F.emissiveMap?"#define USE_EMISSIVEMAP":"",F.bumpMap?"#define USE_BUMPMAP":"",F.normalMap?"#define USE_NORMALMAP":"",F.displacementMap&&F.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",F.specularMap?"#define USE_SPECULARMAP":"",F.roughnessMap?"#define USE_ROUGHNESSMAP":"",F.metalnessMap?"#define USE_METALNESSMAP":"",F.alphaMap?"#define USE_ALPHAMAP":"",F.vertexColors?"#define USE_COLOR":"",F.flatShading?"#define FLAT_SHADED":"",F.skinning?"#define USE_SKINNING":"",F.useVertexTexture?"#define BONE_TEXTURE":"",F.morphTargets?"#define USE_MORPHTARGETS":"",F.morphNormals&&F.flatShading===!1?"#define USE_MORPHNORMALS":"",F.doubleSided?"#define DOUBLE_SIDED":"",F.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+F.numClippingPlanes,F.shadowMapEnabled?"#define USE_SHADOWMAP":"",F.shadowMapEnabled?"#define "+x:"",F.sizeAttenuation?"#define USE_SIZEATTENUATION":"",F.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",F.logarithmicDepthBuffer&&V.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif",`
`].filter(U).join(`
`),S=[u,"precision "+F.precision+" float;","precision "+F.precision+" int;","#define SHADER_NAME "+z.__webglShader.name,E,F.alphaTest?"#define ALPHATEST "+F.alphaTest:"","#define GAMMA_FACTOR "+R,F.useFog&&F.fog?"#define USE_FOG":"",F.useFog&&F.fogExp?"#define FOG_EXP2":"",F.map?"#define USE_MAP":"",F.envMap?"#define USE_ENVMAP":"",F.envMap?"#define "+H:"",F.envMap?"#define "+v:"",F.envMap?"#define "+b:"",F.lightMap?"#define USE_LIGHTMAP":"",F.aoMap?"#define USE_AOMAP":"",F.emissiveMap?"#define USE_EMISSIVEMAP":"",F.bumpMap?"#define USE_BUMPMAP":"",F.normalMap?"#define USE_NORMALMAP":"",F.specularMap?"#define USE_SPECULARMAP":"",F.roughnessMap?"#define USE_ROUGHNESSMAP":"",F.metalnessMap?"#define USE_METALNESSMAP":"",F.alphaMap?"#define USE_ALPHAMAP":"",F.vertexColors?"#define USE_COLOR":"",F.flatShading?"#define FLAT_SHADED":"",F.doubleSided?"#define DOUBLE_SIDED":"",F.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+F.numClippingPlanes,F.shadowMapEnabled?"#define USE_SHADOWMAP":"",F.shadowMapEnabled?"#define "+x:"",F.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",F.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",F.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",F.logarithmicDepthBuffer&&V.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",F.envMap&&V.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",F.toneMapping!==Q.NoToneMapping?"#define TONE_MAPPING":"",F.toneMapping!==Q.NoToneMapping?Q.ShaderChunk.tonemapping_pars_fragment:"",F.toneMapping!==Q.NoToneMapping?Y("toneMapping",F.toneMapping):"",F.outputEncoding||F.mapEncoding||F.envMapEncoding||F.emissiveMapEncoding?Q.ShaderChunk.encodings_pars_fragment:"",F.mapEncoding?Z("mapTexelToLinear",F.mapEncoding):"",F.envMapEncoding?Z("envMapTexelToLinear",F.envMapEncoding):"",F.emissiveMapEncoding?Z("emissiveMapTexelToLinear",F.emissiveMapEncoding):"",F.outputEncoding?K("linearToOutputTexel",F.outputEncoding):"",F.depthPacking?"#define DEPTH_PACKING "+z.depthPacking:"",`
`].filter(U).join(`
`);if(w=N(w,F),w=D(w,F),_=N(_,F),_=D(_,F),z instanceof Q.ShaderMaterial===!1)w=B(w),_=B(_);var T=c+w,f=S+_,l=Q.WebGLShader(L,L.VERTEX_SHADER,T),s=Q.WebGLShader(L,L.FRAGMENT_SHADER,f);if(L.attachShader(h,l),L.attachShader(h,s),z.index0AttributeName!==void 0)L.bindAttribLocation(h,0,z.index0AttributeName);else if(F.morphTargets===!0)L.bindAttribLocation(h,0,"position");L.linkProgram(h);var r=L.getProgramInfoLog(h),n=L.getShaderInfoLog(l),j=L.getShaderInfoLog(s),P=!0,d=!0;if(L.getProgramParameter(h,L.LINK_STATUS)===!1)P=!1,console.error("THREE.WebGLProgram: shader error: ",L.getError(),"gl.VALIDATE_STATUS",L.getProgramParameter(h,L.VALIDATE_STATUS),"gl.getProgramInfoLog",r,n,j);else if(r!=="")console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",r);else if(n===""||j==="")d=!1;if(d)this.diagnostics={runnable:P,material:z,programLog:r,vertexShader:{log:n,prefix:c},fragmentShader:{log:j,prefix:S}};L.deleteShader(l),L.deleteShader(s);var m;this.getUniforms=function(){if(m===void 0)m=new Q.WebGLUniforms(L,h,V);return m};var o;return this.getAttributes=function(){if(o===void 0)o=W(L,h);return o},this.destroy=function(){L.deleteProgram(h),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=J++,this.code=M,this.usedTimes=1,this.program=h,this.vertexShader=l,this.fragmentShader=s,this}}();Q.WebGLPrograms=function(J,$){var Z=[],K={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},Y=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","depthPacking"];function X(W){if($.floatVertexTextures&&W&&W.skeleton&&W.skeleton.useVertexTexture)return 1024;else{var U=$.maxVertexUniforms,D=Math.floor((U-20)/4),N=D;if(W!==void 0&&W instanceof Q.SkinnedMesh){if(N=Math.min(W.skeleton.bones.length,N),N<W.skeleton.bones.length)console.warn("WebGLRenderer: too many bones - "+W.skeleton.bones.length+", this GPU supports just "+N+" (try OpenGL instead of ANGLE)")}return N}}function G(W,U){var D;if(!W)D=Q.LinearEncoding;else if(W instanceof Q.Texture)D=W.encoding;else if(W instanceof Q.WebGLRenderTarget)console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),D=W.texture.encoding;if(D===Q.LinearEncoding&&U)D=Q.GammaEncoding;return D}this.getParameters=function(W,U,D,N,B){var q=K[W.type],V=X(B),M=J.getPrecision();if(W.precision!==null){if(M=$.getMaxPrecision(W.precision),M!==W.precision)console.warn("THREE.WebGLProgram.getParameters:",W.precision,"not supported, using",M,"instead.")}var z=J.getCurrentRenderTarget(),F={shaderID:q,precision:M,supportsVertexTextures:$.vertexTextures,outputEncoding:G(!z?null:z.texture,J.gammaOutput),map:!!W.map,mapEncoding:G(W.map,J.gammaInput),envMap:!!W.envMap,envMapMode:W.envMap&&W.envMap.mapping,envMapEncoding:G(W.envMap,J.gammaInput),envMapCubeUV:!!W.envMap&&(W.envMap.mapping===Q.CubeUVReflectionMapping||W.envMap.mapping===Q.CubeUVRefractionMapping),lightMap:!!W.lightMap,aoMap:!!W.aoMap,emissiveMap:!!W.emissiveMap,emissiveMapEncoding:G(W.emissiveMap,J.gammaInput),bumpMap:!!W.bumpMap,normalMap:!!W.normalMap,displacementMap:!!W.displacementMap,roughnessMap:!!W.roughnessMap,metalnessMap:!!W.metalnessMap,specularMap:!!W.specularMap,alphaMap:!!W.alphaMap,combine:W.combine,vertexColors:W.vertexColors,fog:D,useFog:W.fog,fogExp:D instanceof Q.FogExp2,flatShading:W.shading===Q.FlatShading,sizeAttenuation:W.sizeAttenuation,logarithmicDepthBuffer:$.logarithmicDepthBuffer,skinning:W.skinning,maxBones:V,useVertexTexture:$.floatVertexTextures&&B&&B.skeleton&&B.skeleton.useVertexTexture,morphTargets:W.morphTargets,morphNormals:W.morphNormals,maxMorphTargets:J.maxMorphTargets,maxMorphNormals:J.maxMorphNormals,numDirLights:U.directional.length,numPointLights:U.point.length,numSpotLights:U.spot.length,numHemiLights:U.hemi.length,numClippingPlanes:N,shadowMapEnabled:J.shadowMap.enabled&&B.receiveShadow&&U.shadows.length>0,shadowMapType:J.shadowMap.type,toneMapping:J.toneMapping,physicallyCorrectLights:J.physicallyCorrectLights,premultipliedAlpha:W.premultipliedAlpha,alphaTest:W.alphaTest,doubleSided:W.side===Q.DoubleSide,flipSided:W.side===Q.BackSide,depthPacking:W.depthPacking!==void 0?W.depthPacking:!1};return F},this.getProgramCode=function(W,U){var D=[];if(U.shaderID)D.push(U.shaderID);else D.push(W.fragmentShader),D.push(W.vertexShader);if(W.defines!==void 0)for(var N in W.defines)D.push(N),D.push(W.defines[N]);for(var B=0;B<Y.length;B++)D.push(U[Y[B]]);return D.join()},this.acquireProgram=function(W,U,D){var N;for(var B=0,q=Z.length;B<q;B++){var V=Z[B];if(V.code===D){N=V,++N.usedTimes;break}}if(N===void 0)N=new Q.WebGLProgram(J,D,W,U),Z.push(N);return N},this.releaseProgram=function(W){if(--W.usedTimes===0){var U=Z.indexOf(W);Z[U]=Z[Z.length-1],Z.pop(),W.destroy()}},this.programs=Z};Q.WebGLProperties=function(){var J={};this.get=function($){var Z=$.uuid,K=J[Z];if(K===void 0)K={},J[Z]=K;return K},this.delete=function($){delete J[$.uuid]},this.clear=function(){J={}}};Q.WebGLShader=function(){function J($){var Z=$.split(`
`);for(var K=0;K<Z.length;K++)Z[K]=K+1+": "+Z[K];return Z.join(`
`)}return function $(Z,K,Y){var X=Z.createShader(K);if(Z.shaderSource(X,Y),Z.compileShader(X),Z.getShaderParameter(X,Z.COMPILE_STATUS)===!1)console.error("THREE.WebGLShader: Shader couldn't compile.");if(Z.getShaderInfoLog(X)!=="")console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",K===Z.VERTEX_SHADER?"vertex":"fragment",Z.getShaderInfoLog(X),J(Y));return X}}();Q.WebGLShadowMap=function(J,$,Z){var{context:K,state:Y}=J,X=new Q.Frustum,G=new Q.Matrix4,W=$.shadows,U=new Q.Vector2,D=new Q.Vector3,N=new Q.Vector3,B=[],q=1,V=2,M=(q|V)+1,z=new Array(M),F=new Array(M),L={},A=[new Q.Vector3(1,0,0),new Q.Vector3(-1,0,0),new Q.Vector3(0,0,1),new Q.Vector3(0,0,-1),new Q.Vector3(0,1,0),new Q.Vector3(0,-1,0)],C=[new Q.Vector3(0,1,0),new Q.Vector3(0,1,0),new Q.Vector3(0,1,0),new Q.Vector3(0,1,0),new Q.Vector3(0,0,1),new Q.Vector3(0,0,-1)],w=[new Q.Vector4,new Q.Vector4,new Q.Vector4,new Q.Vector4,new Q.Vector4,new Q.Vector4],_=new Q.MeshDepthMaterial;_.depthPacking=Q.RGBADepthPacking,_.clipping=!0;var x=Q.ShaderLib.distanceRGBA,H=Q.UniformsUtils.clone(x.uniforms);for(var v=0;v!==M;++v){var b=(v&q)!==0,R=(v&V)!==0,u=_.clone();u.morphTargets=b,u.skinning=R,z[v]=u;var E=new Q.ShaderMaterial({defines:{USE_SHADOWMAP:""},uniforms:H,vertexShader:x.vertexShader,fragmentShader:x.fragmentShader,morphTargets:b,skinning:R,clipping:!0});F[v]=E}var h=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Q.PCFShadowMap,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(T,f){if(h.enabled===!1)return;if(h.autoUpdate===!1&&h.needsUpdate===!1)return;if(W.length===0)return;Y.clearColor(1,1,1,1),Y.disable(K.BLEND),Y.setDepthTest(!0),Y.setScissorTest(!1);var l,s;for(var r=0,n=W.length;r<n;r++){var j=W[r],P=j.shadow;if(P===void 0){console.warn("THREE.WebGLShadowMap:",j,"has no shadow.");continue}var d=P.camera;if(U.copy(P.mapSize),j instanceof Q.PointLight){l=6,s=!0;var{x:m,y:o}=U;w[0].set(m*2,o,m,o),w[1].set(0,o,m,o),w[2].set(m*3,o,m,o),w[3].set(m,o,m,o),w[4].set(m*3,0,m,o),w[5].set(m,0,m,o),U.x*=4,U.y*=2}else l=1,s=!1;if(P.map===null){var i={minFilter:Q.NearestFilter,magFilter:Q.NearestFilter,format:Q.RGBAFormat};P.map=new Q.WebGLRenderTarget(U.x,U.y,i),d.updateProjectionMatrix()}if(P instanceof Q.SpotLightShadow)P.update(j);var{map:QJ,matrix:KJ}=P;N.setFromMatrixPosition(j.matrixWorld),d.position.copy(N),J.setRenderTarget(QJ),J.clear();for(var I=0;I<l;I++){if(s){D.copy(d.position),D.add(A[I]),d.up.copy(C[I]),d.lookAt(D);var qJ=w[I];Y.viewport(qJ)}else D.setFromMatrixPosition(j.target.matrixWorld),d.lookAt(D);d.updateMatrixWorld(),d.matrixWorldInverse.getInverse(d.matrixWorld),KJ.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1),KJ.multiply(d.projectionMatrix),KJ.multiply(d.matrixWorldInverse),G.multiplyMatrices(d.projectionMatrix,d.matrixWorldInverse),X.setFromMatrix(G),B.length=0,S(T,f,d);for(var kJ=0,WJ=B.length;kJ<WJ;kJ++){var BJ=B[kJ],a=Z.update(BJ),DJ=BJ.material;if(DJ instanceof Q.MultiMaterial){var UJ=a.groups,NJ=DJ.materials;for(var VJ=0,FJ=UJ.length;VJ<FJ;VJ++){var AJ=UJ[VJ],PJ=NJ[AJ.materialIndex];if(PJ.visible===!0){var zJ=c(BJ,PJ,s,N);J.renderBufferDirect(d,null,a,zJ,BJ,AJ)}}}else{var zJ=c(BJ,DJ,s,N);J.renderBufferDirect(d,null,a,zJ,BJ,null)}}}}var wJ=J.getClearColor(),_J=J.getClearAlpha();J.setClearColor(wJ,_J),h.needsUpdate=!1};function c(T,f,l,s){var r=T.geometry,n=null,j=z,P=T.customDepthMaterial;if(l)j=F,P=T.customDistanceMaterial;if(!P){var d=r.morphTargets!==void 0&&r.morphTargets.length>0&&f.morphTargets,m=T instanceof Q.SkinnedMesh&&f.skinning,o=0;if(d)o|=q;if(m)o|=V;n=j[o]}else n=P;if(J.localClippingEnabled&&f.clipShadows===!0&&f.clippingPlanes.length!==0){var i=n.uuid,QJ=f.uuid,KJ=L[i];if(KJ===void 0)KJ={},L[i]=KJ;var I=KJ[QJ];if(I===void 0)I=n.clone(),KJ[QJ]=I;n=I}n.visible=f.visible,n.wireframe=f.wireframe;var qJ=f.side;if(h.renderSingleSided&&qJ==Q.DoubleSide)qJ=Q.FrontSide;if(h.renderReverseSided){if(qJ===Q.FrontSide)qJ=Q.BackSide;else if(qJ===Q.BackSide)qJ=Q.FrontSide}if(n.side=qJ,n.clipShadows=f.clipShadows,n.clippingPlanes=f.clippingPlanes,n.wireframeLinewidth=f.wireframeLinewidth,n.linewidth=f.linewidth,l&&n.uniforms.lightPos!==void 0)n.uniforms.lightPos.value.copy(s);return n}function S(T,f,l){if(T.visible===!1)return;if(T.layers.test(f.layers)&&(T instanceof Q.Mesh||T instanceof Q.Line||T instanceof Q.Points)){if(T.castShadow&&(T.frustumCulled===!1||X.intersectsObject(T)===!0)){var s=T.material;if(s.visible===!0)T.modelViewMatrix.multiplyMatrices(l.matrixWorldInverse,T.matrixWorld),B.push(T)}}var r=T.children;for(var n=0,j=r.length;n<j;n++)S(r[n],f,l)}};Q.WebGLState=function(J,$,Z){var K=this;this.buffers={color:new Q.WebGLColorBuffer(J,this),depth:new Q.WebGLDepthBuffer(J,this),stencil:new Q.WebGLStencilBuffer(J,this)};var Y=J.getParameter(J.MAX_VERTEX_ATTRIBS),X=new Uint8Array(Y),G=new Uint8Array(Y),W=new Uint8Array(Y),U={},D=null,N=null,B=null,q=null,V=null,M=null,z=null,F=null,L=!1,A=null,C=null,w=null,_=null,x=null,H=null,v=J.getParameter(J.MAX_TEXTURE_IMAGE_UNITS),b=null,R={},u=new Q.Vector4,E=new Q.Vector4;function h(S,T,f){var l=new Uint8Array(3),s=J.createTexture();J.bindTexture(S,s),J.texParameteri(S,J.TEXTURE_MIN_FILTER,J.NEAREST),J.texParameteri(S,J.TEXTURE_MAG_FILTER,J.NEAREST);for(var r=0;r<f;r++)J.texImage2D(T+r,0,J.RGB,1,1,0,J.RGB,J.UNSIGNED_BYTE,l);return s}var c={};c[J.TEXTURE_2D]=h(J.TEXTURE_2D,J.TEXTURE_2D,1),c[J.TEXTURE_CUBE_MAP]=h(J.TEXTURE_CUBE_MAP,J.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.init=function(){this.clearColor(0,0,0,1),this.clearDepth(1),this.clearStencil(0),this.enable(J.DEPTH_TEST),this.setDepthFunc(Q.LessEqualDepth),this.setFlipSided(!1),this.setCullFace(Q.CullFaceBack),this.enable(J.CULL_FACE),this.enable(J.BLEND),this.setBlending(Q.NormalBlending)},this.initAttributes=function(){for(var S=0,T=X.length;S<T;S++)X[S]=0},this.enableAttribute=function(S){if(X[S]=1,G[S]===0)J.enableVertexAttribArray(S),G[S]=1;if(W[S]!==0){var T=$.get("ANGLE_instanced_arrays");T.vertexAttribDivisorANGLE(S,0),W[S]=0}},this.enableAttributeAndDivisor=function(S,T,f){if(X[S]=1,G[S]===0)J.enableVertexAttribArray(S),G[S]=1;if(W[S]!==T)f.vertexAttribDivisorANGLE(S,T),W[S]=T},this.disableUnusedAttributes=function(){for(var S=0,T=G.length;S!==T;++S)if(G[S]!==X[S])J.disableVertexAttribArray(S),G[S]=0},this.enable=function(S){if(U[S]!==!0)J.enable(S),U[S]=!0},this.disable=function(S){if(U[S]!==!1)J.disable(S),U[S]=!1},this.getCompressedTextureFormats=function(){if(D===null){if(D=[],$.get("WEBGL_compressed_texture_pvrtc")||$.get("WEBGL_compressed_texture_s3tc")||$.get("WEBGL_compressed_texture_etc1")){var S=J.getParameter(J.COMPRESSED_TEXTURE_FORMATS);for(var T=0;T<S.length;T++)D.push(S[T])}}return D},this.setBlending=function(S,T,f,l,s,r,n,j){if(S!==Q.NoBlending)this.enable(J.BLEND);else{this.disable(J.BLEND),N=S;return}if(S!==N||j!==L){if(S===Q.AdditiveBlending)if(j)J.blendEquationSeparate(J.FUNC_ADD,J.FUNC_ADD),J.blendFuncSeparate(J.ONE,J.ONE,J.ONE,J.ONE);else J.blendEquation(J.FUNC_ADD),J.blendFunc(J.SRC_ALPHA,J.ONE);else if(S===Q.SubtractiveBlending)if(j)J.blendEquationSeparate(J.FUNC_ADD,J.FUNC_ADD),J.blendFuncSeparate(J.ZERO,J.ZERO,J.ONE_MINUS_SRC_COLOR,J.ONE_MINUS_SRC_ALPHA);else J.blendEquation(J.FUNC_ADD),J.blendFunc(J.ZERO,J.ONE_MINUS_SRC_COLOR);else if(S===Q.MultiplyBlending)if(j)J.blendEquationSeparate(J.FUNC_ADD,J.FUNC_ADD),J.blendFuncSeparate(J.ZERO,J.SRC_COLOR,J.ZERO,J.SRC_ALPHA);else J.blendEquation(J.FUNC_ADD),J.blendFunc(J.ZERO,J.SRC_COLOR);else if(j)J.blendEquationSeparate(J.FUNC_ADD,J.FUNC_ADD),J.blendFuncSeparate(J.ONE,J.ONE_MINUS_SRC_ALPHA,J.ONE,J.ONE_MINUS_SRC_ALPHA);else J.blendEquationSeparate(J.FUNC_ADD,J.FUNC_ADD),J.blendFuncSeparate(J.SRC_ALPHA,J.ONE_MINUS_SRC_ALPHA,J.ONE,J.ONE_MINUS_SRC_ALPHA);N=S,L=j}if(S===Q.CustomBlending){if(s=s||T,r=r||f,n=n||l,T!==B||s!==M)J.blendEquationSeparate(Z(T),Z(s)),B=T,M=s;if(f!==q||l!==V||r!==z||n!==F)J.blendFuncSeparate(Z(f),Z(l),Z(r),Z(n)),q=f,V=l,z=r,F=n}else B=null,q=null,V=null,M=null,z=null,F=null},this.setColorWrite=function(S){this.buffers.color.setMask(S)},this.setDepthTest=function(S){this.buffers.depth.setTest(S)},this.setDepthWrite=function(S){this.buffers.depth.setMask(S)},this.setDepthFunc=function(S){this.buffers.depth.setFunc(S)},this.setStencilTest=function(S){this.buffers.stencil.setTest(S)},this.setStencilWrite=function(S){this.buffers.stencil.setMask(S)},this.setStencilFunc=function(S,T,f){this.buffers.stencil.setFunc(S,T,f)},this.setStencilOp=function(S,T,f){this.buffers.stencil.setOp(S,T,f)},this.setFlipSided=function(S){if(A!==S){if(S)J.frontFace(J.CW);else J.frontFace(J.CCW);A=S}},this.setCullFace=function(S){if(S!==Q.CullFaceNone){if(this.enable(J.CULL_FACE),S!==C)if(S===Q.CullFaceBack)J.cullFace(J.BACK);else if(S===Q.CullFaceFront)J.cullFace(J.FRONT);else J.cullFace(J.FRONT_AND_BACK)}else this.disable(J.CULL_FACE);C=S},this.setLineWidth=function(S){if(S!==w)J.lineWidth(S),w=S},this.setPolygonOffset=function(S,T,f){if(S){if(this.enable(J.POLYGON_OFFSET_FILL),_!==T||x!==f)J.polygonOffset(T,f),_=T,x=f}else this.disable(J.POLYGON_OFFSET_FILL)},this.getScissorTest=function(){return H},this.setScissorTest=function(S){if(H=S,S)this.enable(J.SCISSOR_TEST);else this.disable(J.SCISSOR_TEST)},this.activeTexture=function(S){if(S===void 0)S=J.TEXTURE0+v-1;if(b!==S)J.activeTexture(S),b=S},this.bindTexture=function(S,T){if(b===null)K.activeTexture();var f=R[b];if(f===void 0)f={type:void 0,texture:void 0},R[b]=f;if(f.type!==S||f.texture!==T)J.bindTexture(S,T||c[S]),f.type=S,f.texture=T},this.compressedTexImage2D=function(){try{J.compressedTexImage2D.apply(J,arguments)}catch(S){console.error(S)}},this.texImage2D=function(){try{J.texImage2D.apply(J,arguments)}catch(S){console.error(S)}},this.clearColor=function(S,T,f,l){this.buffers.color.setClear(S,T,f,l)},this.clearDepth=function(S){this.buffers.depth.setClear(S)},this.clearStencil=function(S){this.buffers.stencil.setClear(S)},this.scissor=function(S){if(u.equals(S)===!1)J.scissor(S.x,S.y,S.z,S.w),u.copy(S)},this.viewport=function(S){if(E.equals(S)===!1)J.viewport(S.x,S.y,S.z,S.w),E.copy(S)},this.reset=function(){for(var S=0;S<G.length;S++)if(G[S]===1)J.disableVertexAttribArray(S),G[S]=0;U={},D=null,b=null,R={},N=null,A=null,C=null,this.buffers.color.reset(),this.buffers.depth.reset(),this.buffers.stencil.reset()}};Q.WebGLColorBuffer=function(J,$){var Z=!1,K=new Q.Vector4,Y=null,X=new Q.Vector4;this.setMask=function(G){if(Y!==G&&!Z)J.colorMask(G,G,G,G),Y=G},this.setLocked=function(G){Z=G},this.setClear=function(G,W,U,D){if(K.set(G,W,U,D),X.equals(K)===!1)J.clearColor(G,W,U,D),X.copy(K)},this.reset=function(){Z=!1,Y=null,X=new Q.Vector4}};Q.WebGLDepthBuffer=function(J,$){var Z=!1,K=null,Y=null,X=null;this.setTest=function(G){if(G)$.enable(J.DEPTH_TEST);else $.disable(J.DEPTH_TEST)},this.setMask=function(G){if(K!==G&&!Z)J.depthMask(G),K=G},this.setFunc=function(G){if(Y!==G){if(G)switch(G){case Q.NeverDepth:J.depthFunc(J.NEVER);break;case Q.AlwaysDepth:J.depthFunc(J.ALWAYS);break;case Q.LessDepth:J.depthFunc(J.LESS);break;case Q.LessEqualDepth:J.depthFunc(J.LEQUAL);break;case Q.EqualDepth:J.depthFunc(J.EQUAL);break;case Q.GreaterEqualDepth:J.depthFunc(J.GEQUAL);break;case Q.GreaterDepth:J.depthFunc(J.GREATER);break;case Q.NotEqualDepth:J.depthFunc(J.NOTEQUAL);break;default:J.depthFunc(J.LEQUAL)}else J.depthFunc(J.LEQUAL);Y=G}},this.setLocked=function(G){Z=G},this.setClear=function(G){if(X!==G)J.clearDepth(G),X=G},this.reset=function(){Z=!1,K=null,Y=null,X=null}};Q.WebGLStencilBuffer=function(J,$){var Z=!1,K=null,Y=null,X=null,G=null,W=null,U=null,D=null,N=null;this.setTest=function(B){if(B)$.enable(J.STENCIL_TEST);else $.disable(J.STENCIL_TEST)},this.setMask=function(B){if(K!==B&&!Z)J.stencilMask(B),K=B},this.setFunc=function(B,q,V){if(Y!==B||X!==q||G!==V)J.stencilFunc(B,q,V),Y=B,X=q,G=V},this.setOp=function(B,q,V){if(W!==B||U!==q||D!==V)J.stencilOp(B,q,V),W=B,U=q,D=V},this.setLocked=function(B){Z=B},this.setClear=function(B){if(N!==B)J.clearStencil(B),N=B},this.reset=function(){Z=!1,K=null,Y=null,X=null,G=null,W=null,U=null,D=null,N=null}};Q.WebGLUniforms=function(){var J=function(){this.seq=[],this.map={}},$=[],Z=[],K=function(){$.length=0,Z.length=0},Y=function(j,P,d){var m=j[0];if(m<=0||m>0)return j;var o=P*d,i=$[o];if(i===void 0)i=new Float32Array(o),$[o]=i;if(P!==0){m.toArray(i,0);for(var QJ=1,KJ=0;QJ!==P;++QJ)KJ+=d,j[QJ].toArray(i,KJ)}return i},X=function(j,P){var d=Z[P];if(d===void 0)d=new Int32Array(P),Z[P]=d;for(var m=0;m!==P;++m)d[m]=j.allocTextureUnit();return d},G=function(j,P){j.uniform1f(this.addr,P)},W=function(j,P){j.uniform1i(this.addr,P)},U=function(j,P){if(P.x===void 0)j.uniform2fv(this.addr,P);else j.uniform2f(this.addr,P.x,P.y)},D=function(j,P){if(P.x!==void 0)j.uniform3f(this.addr,P.x,P.y,P.z);else if(P.r!==void 0)j.uniform3f(this.addr,P.r,P.g,P.b);else j.uniform3fv(this.addr,P)},N=function(j,P){if(P.x===void 0)j.uniform4fv(this.addr,P);else j.uniform4f(this.addr,P.x,P.y,P.z,P.w)},B=function(j,P){j.uniformMatrix2fv(this.addr,!1,P.elements||P)},q=function(j,P){j.uniformMatrix3fv(this.addr,!1,P.elements||P)},V=function(j,P){j.uniformMatrix4fv(this.addr,!1,P.elements||P)},M=function(j,P,d){var m=d.allocTextureUnit();if(j.uniform1i(this.addr,m),P)d.setTexture2D(P,m)},z=function(j,P,d){var m=d.allocTextureUnit();if(j.uniform1i(this.addr,m),P)d.setTextureCube(P,m)},F=function(j,P){j.uniform2iv(this.addr,P)},L=function(j,P){j.uniform3iv(this.addr,P)},A=function(j,P){j.uniform4iv(this.addr,P)},C=function(j){switch(j){case 5126:return G;case 35664:return U;case 35665:return D;case 35666:return N;case 35674:return B;case 35675:return q;case 35676:return V;case 35678:return M;case 35680:return z;case 5124:case 35670:return W;case 35667:case 35671:return F;case 35668:case 35672:return L;case 35669:case 35673:return A}},w=function(j,P){j.uniform1fv(this.addr,P)},_=function(j,P){j.uniform1iv(this.addr,P)},x=function(j,P){j.uniform2fv(this.addr,Y(P,this.size,2))},H=function(j,P){j.uniform3fv(this.addr,Y(P,this.size,3))},v=function(j,P){j.uniform4fv(this.addr,Y(P,this.size,4))},b=function(j,P){j.uniformMatrix2fv(this.addr,!1,Y(P,this.size,4))},R=function(j,P){j.uniformMatrix3fv(this.addr,!1,Y(P,this.size,9))},u=function(j,P){j.uniformMatrix4fv(this.addr,!1,Y(P,this.size,16))},E=function(j,P,d){var m=P.length,o=X(d,m);j.uniform1iv(this.addr,o);for(var i=0;i!==m;++i){var QJ=P[i];if(QJ)d.setTexture2D(QJ,o[i])}},h=function(j,P,d){var m=P.length,o=X(d,m);j.uniform1iv(this.addr,o);for(var i=0;i!==m;++i){var QJ=P[i];if(QJ)d.setTextureCube(QJ,o[i])}},c=function(j){switch(j){case 5126:return w;case 35664:return x;case 35665:return H;case 35666:return v;case 35674:return b;case 35675:return R;case 35676:return u;case 35678:return E;case 35680:return h;case 5124:case 35670:return _;case 35667:case 35671:return F;case 35668:case 35672:return L;case 35669:case 35673:return A}},S=function j(P,d,m){this.id=P,this.addr=m,this.setValue=C(d.type)},T=function(j,P,d){this.id=j,this.addr=d,this.size=P.size,this.setValue=c(P.type)},f=function(j){this.id=j,J.call(this)};f.prototype.setValue=function(j,P){var d=this.seq;for(var m=0,o=d.length;m!==o;++m){var i=d[m];i.setValue(j,P[i.id])}};var l=/([\w\d_]+)(\])?(\[|\.)?/g,s=function(j,P){j.seq.push(P),j.map[P.id]=P},r=function(j,P,d){var m=j.name,o=m.length;l.lastIndex=0;for(;;){var i=l.exec(m),QJ=l.lastIndex,KJ=i[1],I=i[2]==="]",qJ=i[3];if(I)KJ=KJ|0;if(qJ===void 0||qJ==="["&&QJ+2===o){s(d,qJ===void 0?new S(KJ,j,P):new T(KJ,j,P));break}else{var kJ=d.map,WJ=kJ[KJ];if(WJ===void 0)WJ=new f(KJ),s(d,WJ);d=WJ}}},n=function j(P,d,m){J.call(this),this.renderer=m;var o=P.getProgramParameter(d,P.ACTIVE_UNIFORMS);for(var i=0;i!==o;++i){var QJ=P.getActiveUniform(d,i),KJ=QJ.name,I=P.getUniformLocation(d,KJ);r(QJ,I,this)}};return n.prototype.setValue=function(j,P,d){var m=this.map[P];if(m!==void 0)m.setValue(j,d,this.renderer)},n.prototype.set=function(j,P,d){var m=this.map[d];if(m!==void 0)m.setValue(j,P[d],this.renderer)},n.prototype.setOptional=function(j,P,d){var m=P[d];if(m!==void 0)this.setValue(j,d,m)},n.upload=function(j,P,d,m){for(var o=0,i=P.length;o!==i;++o){var QJ=P[o],KJ=d[QJ.id];if(KJ.needsUpdate!==!1)QJ.setValue(j,KJ.value,m)}},n.seqWithValue=function(j,P){var d=[];for(var m=0,o=j.length;m!==o;++m){var i=j[m];if(i.id in P)d.push(i)}return d},n.splitDynamic=function(j,P){var d=null,m=j.length,o=0;for(var i=0;i!==m;++i){var QJ=j[i],KJ=P[QJ.id];if(KJ&&KJ.dynamic===!0){if(d===null)d=[];d.push(QJ)}else{if(o<i)j[o]=QJ;++o}}if(o<m)j.length=o;return d},n.evalDynamic=function(j,P,d,m){for(var o=0,i=j.length;o!==i;++o){var QJ=P[j[o].id],KJ=QJ.onUpdateCallback;if(KJ!==void 0)KJ.call(QJ,d,m)}},n}();Q.LensFlarePlugin=function(J,$){var{context:Z,state:K}=J,Y,X,G,W,U,D,N,B;function q(){var M=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),z=new Uint16Array([0,1,2,0,2,3]);Y=Z.createBuffer(),X=Z.createBuffer(),Z.bindBuffer(Z.ARRAY_BUFFER,Y),Z.bufferData(Z.ARRAY_BUFFER,M,Z.STATIC_DRAW),Z.bindBuffer(Z.ELEMENT_ARRAY_BUFFER,X),Z.bufferData(Z.ELEMENT_ARRAY_BUFFER,z,Z.STATIC_DRAW),N=Z.createTexture(),B=Z.createTexture(),K.bindTexture(Z.TEXTURE_2D,N),Z.texImage2D(Z.TEXTURE_2D,0,Z.RGB,16,16,0,Z.RGB,Z.UNSIGNED_BYTE,null),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_WRAP_S,Z.CLAMP_TO_EDGE),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_WRAP_T,Z.CLAMP_TO_EDGE),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_MAG_FILTER,Z.NEAREST),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_MIN_FILTER,Z.NEAREST),K.bindTexture(Z.TEXTURE_2D,B),Z.texImage2D(Z.TEXTURE_2D,0,Z.RGBA,16,16,0,Z.RGBA,Z.UNSIGNED_BYTE,null),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_WRAP_S,Z.CLAMP_TO_EDGE),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_WRAP_T,Z.CLAMP_TO_EDGE),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_MAG_FILTER,Z.NEAREST),Z.texParameteri(Z.TEXTURE_2D,Z.TEXTURE_MIN_FILTER,Z.NEAREST),G={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join(`
`),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join(`
`)},W=V(G),U={vertex:Z.getAttribLocation(W,"position"),uv:Z.getAttribLocation(W,"uv")},D={renderType:Z.getUniformLocation(W,"renderType"),map:Z.getUniformLocation(W,"map"),occlusionMap:Z.getUniformLocation(W,"occlusionMap"),opacity:Z.getUniformLocation(W,"opacity"),color:Z.getUniformLocation(W,"color"),scale:Z.getUniformLocation(W,"scale"),rotation:Z.getUniformLocation(W,"rotation"),screenPosition:Z.getUniformLocation(W,"screenPosition")}}this.render=function(M,z,F){if($.length===0)return;var L=new Q.Vector3,A=F.w/F.z,C=F.z*0.5,w=F.w*0.5,_=16/F.w,x=new Q.Vector2(_*A,_),H=new Q.Vector3(1,1,0),v=new Q.Vector2(1,1),b=new Q.Box2;if(b.min.set(0,0),b.max.set(F.z-16,F.w-16),W===void 0)q();Z.useProgram(W),K.initAttributes(),K.enableAttribute(U.vertex),K.enableAttribute(U.uv),K.disableUnusedAttributes(),Z.uniform1i(D.occlusionMap,0),Z.uniform1i(D.map,1),Z.bindBuffer(Z.ARRAY_BUFFER,Y),Z.vertexAttribPointer(U.vertex,2,Z.FLOAT,!1,16,0),Z.vertexAttribPointer(U.uv,2,Z.FLOAT,!1,16,8),Z.bindBuffer(Z.ELEMENT_ARRAY_BUFFER,X),K.disable(Z.CULL_FACE),K.setDepthWrite(!1);for(var R=0,u=$.length;R<u;R++){_=16/F.w,x.set(_*A,_);var E=$[R];if(L.set(E.matrixWorld.elements[12],E.matrixWorld.elements[13],E.matrixWorld.elements[14]),L.applyMatrix4(z.matrixWorldInverse),L.applyProjection(z.projectionMatrix),H.copy(L),v.x=F.x+H.x*C+C-8,v.y=F.y+H.y*w+w-8,b.containsPoint(v)===!0){if(K.activeTexture(Z.TEXTURE0),K.bindTexture(Z.TEXTURE_2D,null),K.activeTexture(Z.TEXTURE1),K.bindTexture(Z.TEXTURE_2D,N),Z.copyTexImage2D(Z.TEXTURE_2D,0,Z.RGB,v.x,v.y,16,16,0),Z.uniform1i(D.renderType,0),Z.uniform2f(D.scale,x.x,x.y),Z.uniform3f(D.screenPosition,H.x,H.y,H.z),K.disable(Z.BLEND),K.enable(Z.DEPTH_TEST),Z.drawElements(Z.TRIANGLES,6,Z.UNSIGNED_SHORT,0),K.activeTexture(Z.TEXTURE0),K.bindTexture(Z.TEXTURE_2D,B),Z.copyTexImage2D(Z.TEXTURE_2D,0,Z.RGBA,v.x,v.y,16,16,0),Z.uniform1i(D.renderType,1),K.disable(Z.DEPTH_TEST),K.activeTexture(Z.TEXTURE1),K.bindTexture(Z.TEXTURE_2D,N),Z.drawElements(Z.TRIANGLES,6,Z.UNSIGNED_SHORT,0),E.positionScreen.copy(H),E.customUpdateCallback)E.customUpdateCallback(E);else E.updateLensFlares();Z.uniform1i(D.renderType,2),K.enable(Z.BLEND);for(var h=0,c=E.lensFlares.length;h<c;h++){var S=E.lensFlares[h];if(S.opacity>0.001&&S.scale>0.001)H.x=S.x,H.y=S.y,H.z=S.z,_=S.size*S.scale/F.w,x.x=_*A,x.y=_,Z.uniform3f(D.screenPosition,H.x,H.y,H.z),Z.uniform2f(D.scale,x.x,x.y),Z.uniform1f(D.rotation,S.rotation),Z.uniform1f(D.opacity,S.opacity),Z.uniform3f(D.color,S.color.r,S.color.g,S.color.b),K.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),J.setTexture2D(S.texture,1),Z.drawElements(Z.TRIANGLES,6,Z.UNSIGNED_SHORT,0)}}}K.enable(Z.CULL_FACE),K.enable(Z.DEPTH_TEST),K.setDepthWrite(!0),J.resetGLState()};function V(M){var z=Z.createProgram(),F=Z.createShader(Z.FRAGMENT_SHADER),L=Z.createShader(Z.VERTEX_SHADER),A="precision "+J.getPrecision()+` float;
`;return Z.shaderSource(F,A+M.fragmentShader),Z.shaderSource(L,A+M.vertexShader),Z.compileShader(F),Z.compileShader(L),Z.attachShader(z,F),Z.attachShader(z,L),Z.linkProgram(z),z}};Q.SpritePlugin=function(J,$){var{context:Z,state:K}=J,Y,X,G,W,U,D,N=new Q.Vector3,B=new Q.Quaternion,q=new Q.Vector3;function V(){var F=new Float32Array([-0.5,-0.5,0,0,0.5,-0.5,1,0,0.5,0.5,1,1,-0.5,0.5,0,1]),L=new Uint16Array([0,1,2,0,2,3]);Y=Z.createBuffer(),X=Z.createBuffer(),Z.bindBuffer(Z.ARRAY_BUFFER,Y),Z.bufferData(Z.ARRAY_BUFFER,F,Z.STATIC_DRAW),Z.bindBuffer(Z.ELEMENT_ARRAY_BUFFER,X),Z.bufferData(Z.ELEMENT_ARRAY_BUFFER,L,Z.STATIC_DRAW),G=M(),W={position:Z.getAttribLocation(G,"position"),uv:Z.getAttribLocation(G,"uv")},U={uvOffset:Z.getUniformLocation(G,"uvOffset"),uvScale:Z.getUniformLocation(G,"uvScale"),rotation:Z.getUniformLocation(G,"rotation"),scale:Z.getUniformLocation(G,"scale"),color:Z.getUniformLocation(G,"color"),map:Z.getUniformLocation(G,"map"),opacity:Z.getUniformLocation(G,"opacity"),modelViewMatrix:Z.getUniformLocation(G,"modelViewMatrix"),projectionMatrix:Z.getUniformLocation(G,"projectionMatrix"),fogType:Z.getUniformLocation(G,"fogType"),fogDensity:Z.getUniformLocation(G,"fogDensity"),fogNear:Z.getUniformLocation(G,"fogNear"),fogFar:Z.getUniformLocation(G,"fogFar"),fogColor:Z.getUniformLocation(G,"fogColor"),alphaTest:Z.getUniformLocation(G,"alphaTest")};var A=document.createElement("canvas");A.width=8,A.height=8;var C=A.getContext("2d");C.fillStyle="white",C.fillRect(0,0,8,8),D=new Q.Texture(A),D.needsUpdate=!0}this.render=function(F,L){if($.length===0)return;if(G===void 0)V();Z.useProgram(G),K.initAttributes(),K.enableAttribute(W.position),K.enableAttribute(W.uv),K.disableUnusedAttributes(),K.disable(Z.CULL_FACE),K.enable(Z.BLEND),Z.bindBuffer(Z.ARRAY_BUFFER,Y),Z.vertexAttribPointer(W.position,2,Z.FLOAT,!1,16,0),Z.vertexAttribPointer(W.uv,2,Z.FLOAT,!1,16,8),Z.bindBuffer(Z.ELEMENT_ARRAY_BUFFER,X),Z.uniformMatrix4fv(U.projectionMatrix,!1,L.projectionMatrix.elements),K.activeTexture(Z.TEXTURE0),Z.uniform1i(U.map,0);var A=0,C=0,w=F.fog;if(w){if(Z.uniform3f(U.fogColor,w.color.r,w.color.g,w.color.b),w instanceof Q.Fog)Z.uniform1f(U.fogNear,w.near),Z.uniform1f(U.fogFar,w.far),Z.uniform1i(U.fogType,1),A=1,C=1;else if(w instanceof Q.FogExp2)Z.uniform1f(U.fogDensity,w.density),Z.uniform1i(U.fogType,2),A=2,C=2}else Z.uniform1i(U.fogType,0),A=0,C=0;for(var _=0,x=$.length;_<x;_++){var H=$[_];H.modelViewMatrix.multiplyMatrices(L.matrixWorldInverse,H.matrixWorld),H.z=-H.modelViewMatrix.elements[14]}$.sort(z);var v=[];for(var _=0,x=$.length;_<x;_++){var H=$[_],b=H.material;Z.uniform1f(U.alphaTest,b.alphaTest),Z.uniformMatrix4fv(U.modelViewMatrix,!1,H.modelViewMatrix.elements),H.matrixWorld.decompose(N,B,q),v[0]=q.x,v[1]=q.y;var R=0;if(F.fog&&b.fog)R=C;if(A!==R)Z.uniform1i(U.fogType,R),A=R;if(b.map!==null)Z.uniform2f(U.uvOffset,b.map.offset.x,b.map.offset.y),Z.uniform2f(U.uvScale,b.map.repeat.x,b.map.repeat.y);else Z.uniform2f(U.uvOffset,0,0),Z.uniform2f(U.uvScale,1,1);if(Z.uniform1f(U.opacity,b.opacity),Z.uniform3f(U.color,b.color.r,b.color.g,b.color.b),Z.uniform1f(U.rotation,b.rotation),Z.uniform2fv(U.scale,v),K.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst),K.setDepthTest(b.depthTest),K.setDepthWrite(b.depthWrite),b.map)J.setTexture2D(b.map,0);else J.setTexture2D(D,0);Z.drawElements(Z.TRIANGLES,6,Z.UNSIGNED_SHORT,0)}K.enable(Z.CULL_FACE),J.resetGLState()};function M(){var F=Z.createProgram(),L=Z.createShader(Z.VERTEX_SHADER),A=Z.createShader(Z.FRAGMENT_SHADER);return Z.shaderSource(L,["precision "+J.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join(`
`)),Z.shaderSource(A,["precision "+J.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join(`
`)),Z.compileShader(L),Z.compileShader(A),Z.attachShader(F,L),Z.attachShader(F,A),Z.linkProgram(F),F}function z(F,L){if(F.renderOrder!==L.renderOrder)return F.renderOrder-L.renderOrder;else if(F.z!==L.z)return L.z-F.z;else return L.id-F.id}};Object.assign(Q,{Face4:function(J,$,Z,K,Y,X,G){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Q.Face3(J,$,Z,Y,X,G)},LineStrip:0,LinePieces:1,MeshFaceMaterial:Q.MultiMaterial,PointCloud:function(J,$){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Q.Points(J,$)},Particle:Q.Sprite,ParticleSystem:function(J,$){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Q.Points(J,$)},PointCloudMaterial:function(J){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new Q.PointsMaterial(J)},ParticleBasicMaterial:function(J){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new Q.PointsMaterial(J)},ParticleSystemMaterial:function(J){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new Q.PointsMaterial(J)},Vertex:function(J,$,Z){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new Q.Vector3(J,$,Z)}});Object.assign(Q.Box2.prototype,{empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(J){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(J)}});Object.assign(Q.Box3.prototype,{empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(J){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(J)},isIntersectionSphere:function(J){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(J)}});Object.assign(Q.Matrix3.prototype,{multiplyVector3:function(J){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),J.applyMatrix3(this)},multiplyVector3Array:function(J){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(J)}});Object.assign(Q.Matrix4.prototype,{extractPosition:function(J){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(J)},setRotationFromQuaternion:function(J){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(J)},multiplyVector3:function(J){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),J.applyProjection(this)},multiplyVector4:function(J){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),J.applyMatrix4(this)},multiplyVector3Array:function(J){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(J)},rotateAxis:function(J){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),J.transformDirection(this)},crossVector:function(J){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),J.applyMatrix4(this)},translate:function(J){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(J){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(J){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(J){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(J,$){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")}});Object.assign(Q.Plane.prototype,{isIntersectionLine:function(J){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(J)}});Object.assign(Q.Quaternion.prototype,{multiplyVector3:function(J){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),J.applyQuaternion(this)}});Object.assign(Q.Ray.prototype,{isIntersectionBox:function(J){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(J)},isIntersectionPlane:function(J){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(J)},isIntersectionSphere:function(J){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(J)}});Object.assign(Q.Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(J){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(J)},getScaleFromMatrix:function(J){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(J)},getColumnFromMatrix:function(J,$){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn($,J)}});Object.assign(Q.Object3D.prototype,{getChildByName:function(J){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(J)},renderDepth:function(J){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(J,$){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis($,J)}});Object.defineProperties(Q.Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(J){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=J}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(J){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.defineProperties(Q.LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Q.PerspectiveCamera.prototype.setLens=function(J,$){if(console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),$!==void 0)this.filmGauge=$;this.setFocalLength(J)};Object.defineProperties(Q.Light.prototype,{onlyShadow:{set:function(J){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(J){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=J}},shadowCameraLeft:{set:function(J){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=J}},shadowCameraRight:{set:function(J){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=J}},shadowCameraTop:{set:function(J){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=J}},shadowCameraBottom:{set:function(J){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=J}},shadowCameraNear:{set:function(J){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=J}},shadowCameraFar:{set:function(J){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=J}},shadowCameraVisible:{set:function(J){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(J){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=J}},shadowDarkness:{set:function(J){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(J){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=J}},shadowMapHeight:{set:function(J){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=J}}});Object.defineProperties(Q.BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length}}});Object.assign(Q.BufferGeometry.prototype,{addIndex:function(J){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(J)},addDrawCall:function(J,$,Z){if(Z!==void 0)console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.");console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(J,$)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(Q.BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(Q.Material.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(J){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new Q.Color}}});Object.defineProperties(Q.MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(J){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(Q.ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(J){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=J}}});Q.EventDispatcher.prototype=Object.assign(Object.create({constructor:Q.EventDispatcher,apply:function(J){console.warn("THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in."),Object.assign(J,this)}}),Q.EventDispatcher.prototype);Object.assign(Q.WebGLRenderer.prototype,{supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(J){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(J)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}});Object.defineProperties(Q.WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(J){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=J}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(J){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=J}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(J){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=J}}});Object.defineProperties(Q.WebGLShadowMap.prototype,{cullFace:{get:function(){return this.renderReverseSided?Q.CullFaceFront:Q.CullFaceBack},set:function(J){var $=J!==Q.CullFaceBack;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+$+"."),this.renderReverseSided=$}}});Object.defineProperties(Q.WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(J){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=J}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(J){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=J}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(J){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=J}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(J){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=J}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(J){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=J}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(J){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=J}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(J){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=J}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(J){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=J}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(J){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=J}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(J){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=J}}});Object.assign(Q.Audio.prototype,{load:function(J){console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");var $=this,Z=new Q.AudioLoader;return Z.load(J,function(K){$.setBuffer(K)}),this}});Object.assign(Q.AudioAnalyser.prototype,{getData:function(J){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()}});Q.GeometryUtils={merge:function(J,$,Z){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var K;if($ instanceof Q.Mesh)$.matrixAutoUpdate&&$.updateMatrix(),K=$.matrix,$=$.geometry;J.merge($,K,Z)},center:function(J){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),J.center()}};Q.ImageUtils={crossOrigin:void 0,loadTexture:function(J,$,Z,K){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var Y=new Q.TextureLoader;Y.setCrossOrigin(this.crossOrigin);var X=Y.load(J,Z,void 0,K);if($)X.mapping=$;return X},loadTextureCube:function(J,$,Z,K){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var Y=new Q.CubeTextureLoader;Y.setCrossOrigin(this.crossOrigin);var X=Y.load(J,Z,void 0,K);if($)X.mapping=$;return X},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};Q.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(J,$){console.warn("THREE.Projector: .projectVector() is now vector.project()."),J.project($)},this.unprojectVector=function(J,$){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),J.unproject($)},this.pickingRay=function(J,$){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}};Q.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}};Q.CurveUtils={tangentQuadraticBezier:function(J,$,Z,K){return 2*(1-J)*(Z-$)+2*J*(K-Z)},tangentCubicBezier:function(J,$,Z,K,Y){return-3*$*(1-J)*(1-J)+3*Z*(1-J)*(1-J)-6*J*Z*(1-J)+6*J*K*(1-J)-3*J*J*K+3*J*J*Y},tangentSpline:function(J,$,Z,K,Y){var X=6*J*J-6*J,G=3*J*J-4*J+1,W=-6*J*J+6*J,U=3*J*J-2*J;return X+G+W+U},interpolate:function(J,$,Z,K,Y){var X=(Z-J)*0.5,G=(K-$)*0.5,W=Y*Y,U=Y*W;return(2*$-2*Z+X+G)*U+(-3*$+3*Z-2*X-G)*W+X*Y+$}};Q.SceneUtils={createMultiMaterialObject:function(J,$){var Z=new Q.Group;for(var K=0,Y=$.length;K<Y;K++)Z.add(new Q.Mesh(J,$[K]));return Z},detach:function(J,$,Z){J.applyMatrix($.matrixWorld),$.remove(J),Z.add(J)},attach:function(J,$,Z){var K=new Q.Matrix4;K.getInverse(Z.matrixWorld),J.applyMatrix(K),$.remove(J),Z.add(J)}};Q.ShapeUtils={area:function(J){var $=J.length,Z=0;for(var K=$-1,Y=0;Y<$;K=Y++)Z+=J[K].x*J[Y].y-J[Y].x*J[K].y;return Z*0.5},triangulate:function(){function J($,Z,K,Y,X,G){var W,U,D,N,B,q,V,M,z;if(U=$[G[Z]].x,D=$[G[Z]].y,N=$[G[K]].x,B=$[G[K]].y,q=$[G[Y]].x,V=$[G[Y]].y,Number.EPSILON>(N-U)*(V-D)-(B-D)*(q-U))return!1;var F,L,A,C,w,_,x,H,v,b,R,u,E,h,c;F=q-N,L=V-B,A=U-q,C=D-V,w=N-U,_=B-D;for(W=0;W<X;W++){if(M=$[G[W]].x,z=$[G[W]].y,M===U&&z===D||M===N&&z===B||M===q&&z===V)continue;if(x=M-U,H=z-D,v=M-N,b=z-B,R=M-q,u=z-V,c=F*b-L*v,E=w*H-_*x,h=A*u-C*R,c>=-Number.EPSILON&&h>=-Number.EPSILON&&E>=-Number.EPSILON)return!1}return!0}return function($,Z){var K=$.length;if(K<3)return null;var Y=[],X=[],G=[],W,U,D;if(Q.ShapeUtils.area($)>0)for(U=0;U<K;U++)X[U]=U;else for(U=0;U<K;U++)X[U]=K-1-U;var N=K,B=2*N;for(U=N-1;N>2;){if(B--<=0){if(console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),Z)return G;return Y}if(W=U,N<=W)W=0;if(U=W+1,N<=U)U=0;if(D=U+1,N<=D)D=0;if(J($,W,U,D,N,X)){var q,V,M,z,F;q=X[W],V=X[U],M=X[D],Y.push([$[q],$[V],$[M]]),G.push([X[W],X[U],X[D]]);for(z=U,F=U+1;F<N;z++,F++)X[z]=X[F];N--,B=2*N}}if(Z)return G;return Y}}(),triangulateShape:function(J,$){function Z(A,C,w){if(A.x!==C.x)if(A.x<C.x)return A.x<=w.x&&w.x<=C.x;else return C.x<=w.x&&w.x<=A.x;else if(A.y<C.y)return A.y<=w.y&&w.y<=C.y;else return C.y<=w.y&&w.y<=A.y}function K(A,C,w,_,x){var H=C.x-A.x,v=C.y-A.y,b=_.x-w.x,R=_.y-w.y,u=A.x-w.x,E=A.y-w.y,h=v*b-H*R,c=v*u-H*E;if(Math.abs(h)>Number.EPSILON){var S;if(h>0){if(c<0||c>h)return[];if(S=R*u-b*E,S<0||S>h)return[]}else{if(c>0||c<h)return[];if(S=R*u-b*E,S>0||S<h)return[]}if(S===0){if(x&&(c===0||c===h))return[];return[A]}if(S===h){if(x&&(c===0||c===h))return[];return[C]}if(c===0)return[w];if(c===h)return[_];var T=S/h;return[{x:A.x+T*H,y:A.y+T*v}]}else{if(c!==0||R*u!==b*E)return[];var f=H===0&&v===0,l=b===0&&R===0;if(f&&l){if(A.x!==w.x||A.y!==w.y)return[];return[A]}if(f){if(!Z(w,_,A))return[];return[A]}if(l){if(!Z(A,C,w))return[];return[w]}var s,r,n,j,P,d,m,o;if(H!==0){if(A.x<C.x)s=A,n=A.x,r=C,j=C.x;else s=C,n=C.x,r=A,j=A.x;if(w.x<_.x)P=w,m=w.x,d=_,o=_.x;else P=_,m=_.x,d=w,o=w.x}else{if(A.y<C.y)s=A,n=A.y,r=C,j=C.y;else s=C,n=C.y,r=A,j=A.y;if(w.y<_.y)P=w,m=w.y,d=_,o=_.y;else P=_,m=_.y,d=w,o=w.y}if(n<=m){if(j<m)return[];if(j===m){if(x)return[];return[P]}if(j<=o)return[P,r];return[P,d]}else{if(n>o)return[];if(n===o){if(x)return[];return[s]}if(j<=o)return[s,r];return[s,d]}}}function Y(A,C,w,_){var x=C.x-A.x,H=C.y-A.y,v=w.x-A.x,b=w.y-A.y,R=_.x-A.x,u=_.y-A.y,E=x*b-H*v,h=x*u-H*R;if(Math.abs(E)>Number.EPSILON){var c=R*b-u*v;if(E>0)return h>=0&&c>=0;else return h>=0||c>=0}else return h>0}function X(A,C){var w=A.concat(),_;function x(o,i){var QJ=w.length-1,KJ=o-1;if(KJ<0)KJ=QJ;var I=o+1;if(I>QJ)I=0;var qJ=Y(w[o],w[KJ],w[I],_[i]);if(!qJ)return!1;var kJ=_.length-1,WJ=i-1;if(WJ<0)WJ=kJ;var BJ=i+1;if(BJ>kJ)BJ=0;if(qJ=Y(_[i],_[WJ],_[BJ],w[o]),!qJ)return!1;return!0}function H(o,i){var QJ,KJ,I;for(QJ=0;QJ<w.length;QJ++)if(KJ=QJ+1,KJ%=w.length,I=K(o,i,w[QJ],w[KJ],!0),I.length>0)return!0;return!1}var v=[];function b(o,i){var QJ,KJ,I,qJ,kJ;for(QJ=0;QJ<v.length;QJ++){KJ=C[v[QJ]];for(I=0;I<KJ.length;I++)if(qJ=I+1,qJ%=KJ.length,kJ=K(o,i,KJ[I],KJ[qJ],!0),kJ.length>0)return!0}return!1}var R,u,E,h,c,S,T=[],f,l,s,r;for(var n=0,j=C.length;n<j;n++)v.push(n);var P=0,d=v.length*2;while(v.length>0){if(d--,d<0){console.log("Infinite Loop! Holes left:"+v.length+", Probably Hole outside Shape!");break}for(u=P;u<w.length;u++){E=w[u],R=-1;for(var n=0;n<v.length;n++){if(c=v[n],S=E.x+":"+E.y+":"+c,T[S]!==void 0)continue;_=C[c];for(var m=0;m<_.length;m++){if(h=_[m],!x(u,m))continue;if(H(E,h))continue;if(b(E,h))continue;R=m,v.splice(n,1),f=w.slice(0,u+1),l=w.slice(u),s=_.slice(R),r=_.slice(0,R+1),w=f.concat(s).concat(r).concat(l),P=u;break}if(R>=0)break;T[S]=!0}if(R>=0)break}}return w}var G,W,U,D,N,B,q={},V=J.concat();for(var M=0,z=$.length;M<z;M++)Array.prototype.push.apply(V,$[M]);for(G=0,W=V.length;G<W;G++){if(N=V[G].x+":"+V[G].y,q[N]!==void 0)console.warn("THREE.Shape: Duplicate point",N);q[N]=G}var F=X(J,$),L=Q.ShapeUtils.triangulate(F,!1);for(G=0,W=L.length;G<W;G++){D=L[G];for(U=0;U<3;U++)if(N=D[U].x+":"+D[U].y,B=q[N],B!==void 0)D[U]=B}return L.concat()},isClockWise:function(J){return Q.ShapeUtils.area(J)<0},b2:function(){function J(K,Y){var X=1-K;return X*X*Y}function $(K,Y){return 2*(1-K)*K*Y}function Z(K,Y){return K*K*Y}return function(K,Y,X,G){return J(K,Y)+$(K,X)+Z(K,G)}}(),b3:function(){function J(Y,X){var G=1-Y;return G*G*G*X}function $(Y,X){var G=1-Y;return 3*G*G*Y*X}function Z(Y,X){var G=1-Y;return 3*G*Y*Y*X}function K(Y,X){return Y*Y*Y*X}return function(Y,X,G,W,U){return J(Y,X)+$(Y,G)+Z(Y,W)+K(Y,U)}}()};Q.Curve=function(){};Q.Curve.prototype={constructor:Q.Curve,getPoint:function(J){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(J){var $=this.getUtoTmapping(J);return this.getPoint($)},getPoints:function(J){if(!J)J=5;var $,Z=[];for($=0;$<=J;$++)Z.push(this.getPoint($/J));return Z},getSpacedPoints:function(J){if(!J)J=5;var $,Z=[];for($=0;$<=J;$++)Z.push(this.getPointAt($/J));return Z},getLength:function(){var J=this.getLengths();return J[J.length-1]},getLengths:function(J){if(!J)J=this.__arcLengthDivisions?this.__arcLengthDivisions:200;if(this.cacheArcLengths&&this.cacheArcLengths.length===J+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var $=[],Z,K=this.getPoint(0),Y,X=0;$.push(0);for(Y=1;Y<=J;Y++)Z=this.getPoint(Y/J),X+=Z.distanceTo(K),$.push(X),K=Z;return this.cacheArcLengths=$,$},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(J,$){var Z=this.getLengths(),K=0,Y=Z.length,X;if($)X=$;else X=J*Z[Y-1];var G=0,W=Y-1,U;while(G<=W)if(K=Math.floor(G+(W-G)/2),U=Z[K]-X,U<0)G=K+1;else if(U>0)W=K-1;else{W=K;break}if(K=W,Z[K]===X){var V=K/(Y-1);return V}var D=Z[K],N=Z[K+1],B=N-D,q=(X-D)/B,V=(K+q)/(Y-1);return V},getTangent:function(J){var $=0.0001,Z=J-$,K=J+$;if(Z<0)Z=0;if(K>1)K=1;var Y=this.getPoint(Z),X=this.getPoint(K),G=X.clone().sub(Y);return G.normalize()},getTangentAt:function(J){var $=this.getUtoTmapping(J);return this.getTangent($)}};Q.Curve.create=function(J,$){return J.prototype=Object.create(Q.Curve.prototype),J.prototype.constructor=J,J.prototype.getPoint=$,J};Q.CurvePath=function(){this.curves=[],this.autoClose=!1};Q.CurvePath.prototype=Object.assign(Object.create(Q.Curve.prototype),{constructor:Q.CurvePath,add:function(J){this.curves.push(J)},closePath:function(){var J=this.curves[0].getPoint(0),$=this.curves[this.curves.length-1].getPoint(1);if(!J.equals($))this.curves.push(new Q.LineCurve($,J))},getPoint:function(J){var $=J*this.getLength(),Z=this.getCurveLengths(),K=0;while(K<Z.length){if(Z[K]>=$){var Y=Z[K]-$,X=this.curves[K],G=1-Y/X.getLength();return X.getPointAt(G)}K++}return null},getLength:function(){var J=this.getCurveLengths();return J[J.length-1]},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var J=[],$=0;for(var Z=0,K=this.curves.length;Z<K;Z++)$+=this.curves[Z].getLength(),J.push($);return this.cacheLengths=J,J},createPointsGeometry:function(J){var $=this.getPoints(J);return this.createGeometry($)},createSpacedPointsGeometry:function(J){var $=this.getSpacedPoints(J);return this.createGeometry($)},createGeometry:function(J){var $=new Q.Geometry;for(var Z=0,K=J.length;Z<K;Z++){var Y=J[Z];$.vertices.push(new Q.Vector3(Y.x,Y.y,Y.z||0))}return $}});Q.Font=function(J){this.data=J};Object.assign(Q.Font.prototype,{generateShapes:function(J,$,Z){function K(N){var B=String(N).split(""),q=$/X.resolution,V=0,M=[];for(var z=0;z<B.length;z++){var F=Y(B[z],q,V);V+=F.offset,M.push(F.path)}return M}function Y(N,B,q){var V=X.glyphs[N]||X.glyphs["?"];if(!V)return;var M=new Q.Path,z=[],F=Q.ShapeUtils.b2,L=Q.ShapeUtils.b3,A,C,w,_,x,H,v,b,R,u,E;if(V.o){var h=V._cachedOutline||(V._cachedOutline=V.o.split(" "));for(var c=0,S=h.length;c<S;){var T=h[c++];switch(T){case"m":A=h[c++]*B+q,C=h[c++]*B,M.moveTo(A,C);break;case"l":A=h[c++]*B+q,C=h[c++]*B,M.lineTo(A,C);break;case"q":if(w=h[c++]*B+q,_=h[c++]*B,v=h[c++]*B+q,b=h[c++]*B,M.quadraticCurveTo(v,b,w,_),E=z[z.length-1],E){x=E.x,H=E.y;for(var f=1;f<=Z;f++){var l=f/Z;F(l,x,v,w),F(l,H,b,_)}}break;case"b":if(w=h[c++]*B+q,_=h[c++]*B,v=h[c++]*B+q,b=h[c++]*B,R=h[c++]*B+q,u=h[c++]*B,M.bezierCurveTo(v,b,R,u,w,_),E=z[z.length-1],E){x=E.x,H=E.y;for(var f=1;f<=Z;f++){var l=f/Z;L(l,x,v,R,w),L(l,H,b,u,_)}}break}}}return{offset:V.ha*B,path:M}}if($===void 0)$=100;if(Z===void 0)Z=4;var X=this.data,G=K(J),W=[];for(var U=0,D=G.length;U<D;U++)Array.prototype.push.apply(W,G[U].toShapes());return W}});Q.Path=function(J){if(Q.CurvePath.call(this),this.actions=[],J)this.fromPoints(J)};Q.Path.prototype=Object.assign(Object.create(Q.CurvePath.prototype),{constructor:Q.Path,fromPoints:function(J){this.moveTo(J[0].x,J[0].y);for(var $=1,Z=J.length;$<Z;$++)this.lineTo(J[$].x,J[$].y)},moveTo:function(J,$){this.actions.push({action:"moveTo",args:[J,$]})},lineTo:function(J,$){var Z=this.actions[this.actions.length-1].args,K=Z[Z.length-2],Y=Z[Z.length-1],X=new Q.LineCurve(new Q.Vector2(K,Y),new Q.Vector2(J,$));this.curves.push(X),this.actions.push({action:"lineTo",args:[J,$]})},quadraticCurveTo:function(J,$,Z,K){var Y=this.actions[this.actions.length-1].args,X=Y[Y.length-2],G=Y[Y.length-1],W=new Q.QuadraticBezierCurve(new Q.Vector2(X,G),new Q.Vector2(J,$),new Q.Vector2(Z,K));this.curves.push(W),this.actions.push({action:"quadraticCurveTo",args:[J,$,Z,K]})},bezierCurveTo:function(J,$,Z,K,Y,X){var G=this.actions[this.actions.length-1].args,W=G[G.length-2],U=G[G.length-1],D=new Q.CubicBezierCurve(new Q.Vector2(W,U),new Q.Vector2(J,$),new Q.Vector2(Z,K),new Q.Vector2(Y,X));this.curves.push(D),this.actions.push({action:"bezierCurveTo",args:[J,$,Z,K,Y,X]})},splineThru:function(J){var $=Array.prototype.slice.call(arguments),Z=this.actions[this.actions.length-1].args,K=Z[Z.length-2],Y=Z[Z.length-1],X=[new Q.Vector2(K,Y)];Array.prototype.push.apply(X,J);var G=new Q.SplineCurve(X);this.curves.push(G),this.actions.push({action:"splineThru",args:$})},arc:function(J,$,Z,K,Y,X){var G=this.actions[this.actions.length-1].args,W=G[G.length-2],U=G[G.length-1];this.absarc(J+W,$+U,Z,K,Y,X)},absarc:function(J,$,Z,K,Y,X){this.absellipse(J,$,Z,Z,K,Y,X)},ellipse:function(J,$,Z,K,Y,X,G,W){var U=this.actions[this.actions.length-1].args,D=U[U.length-2],N=U[U.length-1];this.absellipse(J+D,$+N,Z,K,Y,X,G,W)},absellipse:function(J,$,Z,K,Y,X,G,W){var U=[J,$,Z,K,Y,X,G,W||0],D=new Q.EllipseCurve(J,$,Z,K,Y,X,G,W);this.curves.push(D);var N=D.getPoint(1);U.push(N.x),U.push(N.y),this.actions.push({action:"ellipse",args:U})},getSpacedPoints:function(J){if(!J)J=40;var $=[];for(var Z=0;Z<J;Z++)$.push(this.getPoint(Z/J));if(this.autoClose)$.push($[0]);return $},getPoints:function(J){J=J||12;var $=Q.ShapeUtils.b2,Z=Q.ShapeUtils.b3,K=[],Y,X,G,W,U,D,N,B,q,V,M;for(var z=0,F=this.actions.length;z<F;z++){var L=this.actions[z],A=L.action,C=L.args;switch(A){case"moveTo":K.push(new Q.Vector2(C[0],C[1]));break;case"lineTo":K.push(new Q.Vector2(C[0],C[1]));break;case"quadraticCurveTo":if(Y=C[2],X=C[3],U=C[0],D=C[1],K.length>0)q=K[K.length-1],N=q.x,B=q.y;else q=this.actions[z-1].args,N=q[q.length-2],B=q[q.length-1];for(var w=1;w<=J;w++){var _=w/J;V=$(_,N,U,Y),M=$(_,B,D,X),K.push(new Q.Vector2(V,M))}break;case"bezierCurveTo":if(Y=C[4],X=C[5],U=C[0],D=C[1],G=C[2],W=C[3],K.length>0)q=K[K.length-1],N=q.x,B=q.y;else q=this.actions[z-1].args,N=q[q.length-2],B=q[q.length-1];for(var w=1;w<=J;w++){var _=w/J;V=Z(_,N,U,G,Y),M=Z(_,B,D,W,X),K.push(new Q.Vector2(V,M))}break;case"splineThru":q=this.actions[z-1].args;var x=new Q.Vector2(q[q.length-2],q[q.length-1]),H=[x],v=J*C[0].length;H=H.concat(C[0]);var b=new Q.SplineCurve(H);for(var w=1;w<=v;w++)K.push(b.getPointAt(w/v));break;case"arc":var u=C[0],E=C[1],R=C[2],S=C[3],T=C[4],f=!!C[5],s=T-S,r,n=J*2;for(var w=1;w<=n;w++){var _=w/n;if(!f)_=1-_;r=S+_*s,V=u+R*Math.cos(r),M=E+R*Math.sin(r),K.push(new Q.Vector2(V,M))}break;case"ellipse":var u=C[0],E=C[1],h=C[2],c=C[3],S=C[4],T=C[5],f=!!C[6],l=C[7],s=T-S,r,n=J*2,j,P;if(l!==0)j=Math.cos(l),P=Math.sin(l);for(var w=1;w<=n;w++){var _=w/n;if(!f)_=1-_;if(r=S+_*s,V=u+h*Math.cos(r),M=E+c*Math.sin(r),l!==0){var d=V,m=M;V=(d-u)*j-(m-E)*P+u,M=(d-u)*P+(m-E)*j+E}K.push(new Q.Vector2(V,M))}break}}var o=K[K.length-1];if(Math.abs(o.x-K[0].x)<Number.EPSILON&&Math.abs(o.y-K[0].y)<Number.EPSILON)K.splice(K.length-1,1);if(this.autoClose)K.push(K[0]);return K},toShapes:function(J,$){function Z(T){var f=[],l=new Q.Path;for(var s=0,r=T.length;s<r;s++){var n=T[s],j=n.args,P=n.action;if(P==="moveTo"){if(l.actions.length!==0)f.push(l),l=new Q.Path}l[P].apply(l,j)}if(l.actions.length!==0)f.push(l);return f}function K(T){var f=[];for(var l=0,s=T.length;l<s;l++){var r=T[l],n=new Q.Shape;n.actions=r.actions,n.curves=r.curves,f.push(n)}return f}function Y(T,f){var l=f.length,s=!1;for(var r=l-1,n=0;n<l;r=n++){var j=f[r],P=f[n],d=P.x-j.x,m=P.y-j.y;if(Math.abs(m)>Number.EPSILON){if(m<0)j=f[n],d=-d,P=f[r],m=-m;if(T.y<j.y||T.y>P.y)continue;if(T.y===j.y){if(T.x===j.x)return!0}else{var o=m*(T.x-j.x)-d*(T.y-j.y);if(o===0)return!0;if(o<0)continue;s=!s}}else{if(T.y!==j.y)continue;if(P.x<=T.x&&T.x<=j.x||j.x<=T.x&&T.x<=P.x)return!0}}return s}var X=Q.ShapeUtils.isClockWise,G=Z(this.actions);if(G.length===0)return[];if($===!0)return K(G);var W,U,D,N=[];if(G.length===1)return U=G[0],D=new Q.Shape,D.actions=U.actions,D.curves=U.curves,N.push(D),N;var B=!X(G[0].getPoints());B=J?!B:B;var q=[],V=[],M=[],z=0,F;V[z]=void 0,M[z]=[];for(var L=0,A=G.length;L<A;L++)if(U=G[L],F=U.getPoints(),W=X(F),W=J?!W:W,W){if(!B&&V[z])z++;if(V[z]={s:new Q.Shape,p:F},V[z].s.actions=U.actions,V[z].s.curves=U.curves,B)z++;M[z]=[]}else M[z].push({h:U,p:F[0]});if(!V[0])return K(G);if(V.length>1){var C=!1,w=[];for(var _=0,x=V.length;_<x;_++)q[_]=[];for(var _=0,x=V.length;_<x;_++){var H=M[_];for(var v=0;v<H.length;v++){var b=H[v],R=!0;for(var u=0;u<V.length;u++)if(Y(b.p,V[u].p)){if(_!==u)w.push({froms:_,tos:u,hole:v});if(R)R=!1,q[u].push(b);else C=!0}if(R)q[_].push(b)}}if(w.length>0){if(!C)M=q}}var E;for(var L=0,h=V.length;L<h;L++){D=V[L].s,N.push(D),E=M[L];for(var c=0,S=E.length;c<S;c++)D.holes.push(E[c].h)}return N}});Q.Shape=function(){Q.Path.apply(this,arguments),this.holes=[]};Q.Shape.prototype=Object.assign(Object.create(Q.Path.prototype),{constructor:Q.Shape,extrude:function(J){return new Q.ExtrudeGeometry(this,J)},makeGeometry:function(J){return new Q.ShapeGeometry(this,J)},getPointsHoles:function(J){var $=[];for(var Z=0,K=this.holes.length;Z<K;Z++)$[Z]=this.holes[Z].getPoints(J);return $},extractAllPoints:function(J){return{shape:this.getPoints(J),holes:this.getPointsHoles(J)}},extractPoints:function(J){return this.extractAllPoints(J)}});Q.LineCurve=function(J,$){this.v1=J,this.v2=$};Q.LineCurve.prototype=Object.create(Q.Curve.prototype);Q.LineCurve.prototype.constructor=Q.LineCurve;Q.LineCurve.prototype.getPoint=function(J){var $=this.v2.clone().sub(this.v1);return $.multiplyScalar(J).add(this.v1),$};Q.LineCurve.prototype.getPointAt=function(J){return this.getPoint(J)};Q.LineCurve.prototype.getTangent=function(J){var $=this.v2.clone().sub(this.v1);return $.normalize()};Q.QuadraticBezierCurve=function(J,$,Z){this.v0=J,this.v1=$,this.v2=Z};Q.QuadraticBezierCurve.prototype=Object.create(Q.Curve.prototype);Q.QuadraticBezierCurve.prototype.constructor=Q.QuadraticBezierCurve;Q.QuadraticBezierCurve.prototype.getPoint=function(J){var $=Q.ShapeUtils.b2;return new Q.Vector2($(J,this.v0.x,this.v1.x,this.v2.x),$(J,this.v0.y,this.v1.y,this.v2.y))};Q.QuadraticBezierCurve.prototype.getTangent=function(J){var $=Q.CurveUtils.tangentQuadraticBezier;return new Q.Vector2($(J,this.v0.x,this.v1.x,this.v2.x),$(J,this.v0.y,this.v1.y,this.v2.y)).normalize()};Q.CubicBezierCurve=function(J,$,Z,K){this.v0=J,this.v1=$,this.v2=Z,this.v3=K};Q.CubicBezierCurve.prototype=Object.create(Q.Curve.prototype);Q.CubicBezierCurve.prototype.constructor=Q.CubicBezierCurve;Q.CubicBezierCurve.prototype.getPoint=function(J){var $=Q.ShapeUtils.b3;return new Q.Vector2($(J,this.v0.x,this.v1.x,this.v2.x,this.v3.x),$(J,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};Q.CubicBezierCurve.prototype.getTangent=function(J){var $=Q.CurveUtils.tangentCubicBezier;return new Q.Vector2($(J,this.v0.x,this.v1.x,this.v2.x,this.v3.x),$(J,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()};Q.SplineCurve=function(J){this.points=J==null?[]:J};Q.SplineCurve.prototype=Object.create(Q.Curve.prototype);Q.SplineCurve.prototype.constructor=Q.SplineCurve;Q.SplineCurve.prototype.getPoint=function(J){var $=this.points,Z=($.length-1)*J,K=Math.floor(Z),Y=Z-K,X=$[K===0?K:K-1],G=$[K],W=$[K>$.length-2?$.length-1:K+1],U=$[K>$.length-3?$.length-1:K+2],D=Q.CurveUtils.interpolate;return new Q.Vector2(D(X.x,G.x,W.x,U.x,Y),D(X.y,G.y,W.y,U.y,Y))};Q.EllipseCurve=function(J,$,Z,K,Y,X,G,W){this.aX=J,this.aY=$,this.xRadius=Z,this.yRadius=K,this.aStartAngle=Y,this.aEndAngle=X,this.aClockwise=G,this.aRotation=W||0};Q.EllipseCurve.prototype=Object.create(Q.Curve.prototype);Q.EllipseCurve.prototype.constructor=Q.EllipseCurve;Q.EllipseCurve.prototype.getPoint=function(J){var $=this.aEndAngle-this.aStartAngle;if($<0)$+=Math.PI*2;if($>Math.PI*2)$-=Math.PI*2;var Z;if(this.aClockwise===!0)Z=this.aEndAngle+(1-J)*(Math.PI*2-$);else Z=this.aStartAngle+J*$;var K=this.aX+this.xRadius*Math.cos(Z),Y=this.aY+this.yRadius*Math.sin(Z);if(this.aRotation!==0){var X=Math.cos(this.aRotation),G=Math.sin(this.aRotation),W=K,U=Y;K=(W-this.aX)*X-(U-this.aY)*G+this.aX,Y=(W-this.aX)*G+(U-this.aY)*X+this.aY}return new Q.Vector2(K,Y)};Q.ArcCurve=function(J,$,Z,K,Y,X){Q.EllipseCurve.call(this,J,$,Z,Z,K,Y,X)};Q.ArcCurve.prototype=Object.create(Q.EllipseCurve.prototype);Q.ArcCurve.prototype.constructor=Q.ArcCurve;Q.LineCurve3=Q.Curve.create(function(J,$){this.v1=J,this.v2=$},function(J){var $=new Q.Vector3;return $.subVectors(this.v2,this.v1),$.multiplyScalar(J),$.add(this.v1),$});Q.QuadraticBezierCurve3=Q.Curve.create(function(J,$,Z){this.v0=J,this.v1=$,this.v2=Z},function(J){var $=Q.ShapeUtils.b2;return new Q.Vector3($(J,this.v0.x,this.v1.x,this.v2.x),$(J,this.v0.y,this.v1.y,this.v2.y),$(J,this.v0.z,this.v1.z,this.v2.z))});Q.CubicBezierCurve3=Q.Curve.create(function(J,$,Z,K){this.v0=J,this.v1=$,this.v2=Z,this.v3=K},function(J){var $=Q.ShapeUtils.b3;return new Q.Vector3($(J,this.v0.x,this.v1.x,this.v2.x,this.v3.x),$(J,this.v0.y,this.v1.y,this.v2.y,this.v3.y),$(J,this.v0.z,this.v1.z,this.v2.z,this.v3.z))});Q.SplineCurve3=Q.Curve.create(function(J){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=J==null?[]:J},function(J){var $=this.points,Z=($.length-1)*J,K=Math.floor(Z),Y=Z-K,X=$[K==0?K:K-1],G=$[K],W=$[K>$.length-2?$.length-1:K+1],U=$[K>$.length-3?$.length-1:K+2],D=Q.CurveUtils.interpolate;return new Q.Vector3(D(X.x,G.x,W.x,U.x,Y),D(X.y,G.y,W.y,U.y,Y),D(X.z,G.z,W.z,U.z,Y))});Q.CatmullRomCurve3=function(){var J=new Q.Vector3,$=new Y,Z=new Y,K=new Y;function Y(){}return Y.prototype.init=function(X,G,W,U){this.c0=X,this.c1=W,this.c2=-3*X+3*G-2*W-U,this.c3=2*X-2*G+W+U},Y.prototype.initNonuniformCatmullRom=function(X,G,W,U,D,N,B){var q=(G-X)/D-(W-X)/(D+N)+(W-G)/N,V=(W-G)/N-(U-G)/(N+B)+(U-W)/B;q*=N,V*=N,this.init(G,W,q,V)},Y.prototype.initCatmullRom=function(X,G,W,U,D){this.init(G,W,D*(W-X),D*(U-G))},Y.prototype.calc=function(X){var G=X*X,W=G*X;return this.c0+this.c1*X+this.c2*G+this.c3*W},Q.Curve.create(function(X){this.points=X||[],this.closed=!1},function(X){var G=this.points,W,U,D,N;if(N=G.length,N<2)console.log("duh, you need at least 2 points");if(W=(N-(this.closed?0:1))*X,U=Math.floor(W),D=W-U,this.closed)U+=U>0?0:(Math.floor(Math.abs(U)/G.length)+1)*G.length;else if(D===0&&U===N-1)U=N-2,D=1;var B,q,V,M;if(this.closed||U>0)B=G[(U-1)%N];else J.subVectors(G[0],G[1]).add(G[0]),B=J;if(q=G[U%N],V=G[(U+1)%N],this.closed||U+2<N)M=G[(U+2)%N];else J.subVectors(G[N-1],G[N-2]).add(G[N-1]),M=J;if(this.type===void 0||this.type==="centripetal"||this.type==="chordal"){var z=this.type==="chordal"?0.5:0.25,F=Math.pow(B.distanceToSquared(q),z),L=Math.pow(q.distanceToSquared(V),z),A=Math.pow(V.distanceToSquared(M),z);if(L<0.0001)L=1;if(F<0.0001)F=L;if(A<0.0001)A=L;$.initNonuniformCatmullRom(B.x,q.x,V.x,M.x,F,L,A),Z.initNonuniformCatmullRom(B.y,q.y,V.y,M.y,F,L,A),K.initNonuniformCatmullRom(B.z,q.z,V.z,M.z,F,L,A)}else if(this.type==="catmullrom"){var C=this.tension!==void 0?this.tension:0.5;$.initCatmullRom(B.x,q.x,V.x,M.x,C),Z.initCatmullRom(B.y,q.y,V.y,M.y,C),K.initCatmullRom(B.z,q.z,V.z,M.z,C)}var w=new Q.Vector3($.calc(D),Z.calc(D),K.calc(D));return w})}();Q.ClosedSplineCurve3=function(J){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."),Q.CatmullRomCurve3.call(this,J),this.type="catmullrom",this.closed=!0};Q.ClosedSplineCurve3.prototype=Object.create(Q.CatmullRomCurve3.prototype);Q.BoxGeometry=function(J,$,Z,K,Y,X){Q.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:J,height:$,depth:Z,widthSegments:K,heightSegments:Y,depthSegments:X},this.fromBufferGeometry(new Q.BoxBufferGeometry(J,$,Z,K,Y,X)),this.mergeVertices()};Q.BoxGeometry.prototype=Object.create(Q.Geometry.prototype);Q.BoxGeometry.prototype.constructor=Q.BoxGeometry;Q.CubeGeometry=Q.BoxGeometry;Q.BoxBufferGeometry=function(J,$,Z,K,Y,X){Q.BufferGeometry.call(this),this.type="BoxBufferGeometry",this.parameters={width:J,height:$,depth:Z,widthSegments:K,heightSegments:Y,depthSegments:X};var G=this;K=Math.floor(K)||1,Y=Math.floor(Y)||1,X=Math.floor(X)||1;var W=A(K,Y,X),U=C(K,Y,X),D=new(U>65535?Uint32Array:Uint16Array)(U),N=new Float32Array(W*3),B=new Float32Array(W*3),q=new Float32Array(W*2),V=0,M=0,z=0,F=0,L=0;w("z","y","x",-1,-1,Z,$,J,X,Y,0),w("z","y","x",1,-1,Z,$,-J,X,Y,1),w("x","z","y",1,1,J,Z,$,K,X,2),w("x","z","y",1,-1,J,Z,-$,K,X,3),w("x","y","z",1,-1,J,$,Z,K,Y,4),w("x","y","z",-1,-1,J,$,-Z,K,Y,5),this.setIndex(new Q.BufferAttribute(D,1)),this.addAttribute("position",new Q.BufferAttribute(N,3)),this.addAttribute("normal",new Q.BufferAttribute(B,3)),this.addAttribute("uv",new Q.BufferAttribute(q,2));function A(_,x,H){var v=0;return v+=(_+1)*(x+1)*2,v+=(_+1)*(H+1)*2,v+=(H+1)*(x+1)*2,v}function C(_,x,H){var v=0;return v+=_*x*2,v+=_*H*2,v+=H*x*2,v*6}function w(_,x,H,v,b,R,u,E,h,c,S){var T=R/h,f=u/c,l=R/2,s=u/2,r=E/2,n=h+1,j=c+1,P=0,d=0,m=new Q.Vector3;for(var o=0;o<j;o++){var i=o*f-s;for(var QJ=0;QJ<n;QJ++){var KJ=QJ*T-l;m[_]=KJ*v,m[x]=i*b,m[H]=r,N[V]=m.x,N[V+1]=m.y,N[V+2]=m.z,m[_]=0,m[x]=0,m[H]=E>0?1:-1,B[V]=m.x,B[V+1]=m.y,B[V+2]=m.z,q[M]=QJ/h,q[M+1]=1-o/c,V+=3,M+=2,P+=1}}for(o=0;o<c;o++)for(QJ=0;QJ<h;QJ++){var I=F+QJ+n*o,qJ=F+QJ+n*(o+1),kJ=F+(QJ+1)+n*(o+1),WJ=F+(QJ+1)+n*o;D[z]=I,D[z+1]=qJ,D[z+2]=WJ,D[z+3]=qJ,D[z+4]=kJ,D[z+5]=WJ,z+=6,d+=6}G.addGroup(L,d,S),L+=d,F+=P}};Q.BoxBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.BoxBufferGeometry.prototype.constructor=Q.BoxBufferGeometry;Q.CircleGeometry=function(J,$,Z,K){Q.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:J,segments:$,thetaStart:Z,thetaLength:K},this.fromBufferGeometry(new Q.CircleBufferGeometry(J,$,Z,K))};Q.CircleGeometry.prototype=Object.create(Q.Geometry.prototype);Q.CircleGeometry.prototype.constructor=Q.CircleGeometry;Q.CircleBufferGeometry=function(J,$,Z,K){Q.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:J,segments:$,thetaStart:Z,thetaLength:K},J=J||50,$=$!==void 0?Math.max(3,$):8,Z=Z!==void 0?Z:0,K=K!==void 0?K:Math.PI*2;var Y=$+2,X=new Float32Array(Y*3),G=new Float32Array(Y*3),W=new Float32Array(Y*2);G[2]=1,W[0]=0.5,W[1]=0.5;for(var U=0,D=3,N=2;U<=$;U++,D+=3,N+=2){var B=Z+U/$*K;X[D]=J*Math.cos(B),X[D+1]=J*Math.sin(B),G[D+2]=1,W[N]=(X[D]/J+1)/2,W[N+1]=(X[D+1]/J+1)/2}var q=[];for(var D=1;D<=$;D++)q.push(D,D+1,0);this.setIndex(new Q.BufferAttribute(new Uint16Array(q),1)),this.addAttribute("position",new Q.BufferAttribute(X,3)),this.addAttribute("normal",new Q.BufferAttribute(G,3)),this.addAttribute("uv",new Q.BufferAttribute(W,2)),this.boundingSphere=new Q.Sphere(new Q.Vector3,J)};Q.CircleBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.CircleBufferGeometry.prototype.constructor=Q.CircleBufferGeometry;Q.CylinderBufferGeometry=function(J,$,Z,K,Y,X,G,W){Q.BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:J,radiusBottom:$,height:Z,radialSegments:K,heightSegments:Y,openEnded:X,thetaStart:G,thetaLength:W};var U=this;J=J!==void 0?J:20,$=$!==void 0?$:20,Z=Z!==void 0?Z:100,K=Math.floor(K)||8,Y=Math.floor(Y)||1,X=X!==void 0?X:!1,G=G!==void 0?G:0,W=W!==void 0?W:2*Math.PI;var D=0;if(X===!1){if(J>0)D++;if($>0)D++}var N=_(),B=x(),q=new Q.BufferAttribute(new(B>65535?Uint32Array:Uint16Array)(B),1),V=new Q.BufferAttribute(new Float32Array(N*3),3),M=new Q.BufferAttribute(new Float32Array(N*3),3),z=new Q.BufferAttribute(new Float32Array(N*2),2),F=0,L=0,A=[],C=Z/2,w=0;if(H(),X===!1){if(J>0)v(!0);if($>0)v(!1)}this.setIndex(q),this.addAttribute("position",V),this.addAttribute("normal",M),this.addAttribute("uv",z);function _(){var b=(K+1)*(Y+1);if(X===!1)b+=(K+1)*D+K*D;return b}function x(){var b=K*Y*2*3;if(X===!1)b+=K*D*3;return b}function H(){var b,R,u=new Q.Vector3,E=new Q.Vector3,h=0,c=($-J)/Z;for(R=0;R<=Y;R++){var S=[],T=R/Y,f=T*($-J)+J;for(b=0;b<=K;b++){var l=b/K;if(E.x=f*Math.sin(l*W+G),E.y=-T*Z+C,E.z=f*Math.cos(l*W+G),V.setXYZ(F,E.x,E.y,E.z),u.copy(E),J===0&&R===0||$===0&&R===Y)u.x=Math.sin(l*W+G),u.z=Math.cos(l*W+G);u.setY(Math.sqrt(u.x*u.x+u.z*u.z)*c).normalize(),M.setXYZ(F,u.x,u.y,u.z),z.setXY(F,l,1-T),S.push(F),F++}A.push(S)}for(b=0;b<K;b++)for(R=0;R<Y;R++){var s=A[R][b],r=A[R+1][b],n=A[R+1][b+1],j=A[R][b+1];q.setX(L,s),L++,q.setX(L,r),L++,q.setX(L,j),L++,q.setX(L,r),L++,q.setX(L,n),L++,q.setX(L,j),L++,h+=6}U.addGroup(w,h,0),w+=h}function v(b){var R,u,E,h=new Q.Vector2,c=new Q.Vector3,S=0,T=b===!0?J:$,f=b===!0?1:-1;u=F;for(R=1;R<=K;R++)V.setXYZ(F,0,C*f,0),M.setXYZ(F,0,f,0),h.x=0.5,h.y=0.5,z.setXY(F,h.x,h.y),F++;E=F;for(R=0;R<=K;R++){var l=R/K,s=l*W+G,r=Math.cos(s),n=Math.sin(s);c.x=T*n,c.y=C*f,c.z=T*r,V.setXYZ(F,c.x,c.y,c.z),M.setXYZ(F,0,f,0),h.x=r*0.5+0.5,h.y=n*0.5*f+0.5,z.setXY(F,h.x,h.y),F++}for(R=0;R<K;R++){var j=u+R,P=E+R;if(b===!0)q.setX(L,P),L++,q.setX(L,P+1),L++,q.setX(L,j),L++;else q.setX(L,P+1),L++,q.setX(L,P),L++,q.setX(L,j),L++;S+=3}U.addGroup(w,S,b===!0?1:2),w+=S}};Q.CylinderBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.CylinderBufferGeometry.prototype.constructor=Q.CylinderBufferGeometry;Q.CylinderGeometry=function(J,$,Z,K,Y,X,G,W){Q.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:J,radiusBottom:$,height:Z,radialSegments:K,heightSegments:Y,openEnded:X,thetaStart:G,thetaLength:W},this.fromBufferGeometry(new Q.CylinderBufferGeometry(J,$,Z,K,Y,X,G,W)),this.mergeVertices()};Q.CylinderGeometry.prototype=Object.create(Q.Geometry.prototype);Q.CylinderGeometry.prototype.constructor=Q.CylinderGeometry;Q.ConeBufferGeometry=function(J,$,Z,K,Y,X,G){Q.CylinderBufferGeometry.call(this,0,J,$,Z,K,Y,X,G),this.type="ConeBufferGeometry",this.parameters={radius:J,height:$,radialSegments:Z,heightSegments:K,thetaStart:X,thetaLength:G}};Q.ConeBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.ConeBufferGeometry.prototype.constructor=Q.ConeBufferGeometry;Q.ConeGeometry=function(J,$,Z,K,Y,X,G){Q.CylinderGeometry.call(this,0,J,$,Z,K,Y,X,G),this.type="ConeGeometry",this.parameters={radius:J,height:$,radialSegments:Z,heightSegments:K,openEnded:Y,thetaStart:X,thetaLength:G}};Q.ConeGeometry.prototype=Object.create(Q.CylinderGeometry.prototype);Q.ConeGeometry.prototype.constructor=Q.ConeGeometry;Q.EdgesGeometry=function(J,$){Q.BufferGeometry.call(this),$=$!==void 0?$:1;var Z=Math.cos(Q.Math.DEG2RAD*$),K=[0,0],Y={};function X(A,C){return A-C}var G=["a","b","c"],W;if(J instanceof Q.BufferGeometry)W=new Q.Geometry,W.fromBufferGeometry(J);else W=J.clone();W.mergeVertices(),W.computeFaceNormals();var{vertices:U,faces:D}=W;for(var N=0,B=D.length;N<B;N++){var q=D[N];for(var V=0;V<3;V++){K[0]=q[G[V]],K[1]=q[G[(V+1)%3]],K.sort(X);var M=K.toString();if(Y[M]===void 0)Y[M]={vert1:K[0],vert2:K[1],face1:N,face2:void 0};else Y[M].face2=N}}var z=[];for(var M in Y){var F=Y[M];if(F.face2===void 0||D[F.face1].normal.dot(D[F.face2].normal)<=Z){var L=U[F.vert1];z.push(L.x),z.push(L.y),z.push(L.z),L=U[F.vert2],z.push(L.x),z.push(L.y),z.push(L.z)}}this.addAttribute("position",new Q.BufferAttribute(new Float32Array(z),3))};Q.EdgesGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.EdgesGeometry.prototype.constructor=Q.EdgesGeometry;Q.ExtrudeGeometry=function(J,$){if(typeof J==="undefined"){J=[];return}Q.Geometry.call(this),this.type="ExtrudeGeometry",J=Array.isArray(J)?J:[J],this.addShapeList(J,$),this.computeFaceNormals()};Q.ExtrudeGeometry.prototype=Object.create(Q.Geometry.prototype);Q.ExtrudeGeometry.prototype.constructor=Q.ExtrudeGeometry;Q.ExtrudeGeometry.prototype.addShapeList=function(J,$){var Z=J.length;for(var K=0;K<Z;K++){var Y=J[K];this.addShape(Y,$)}};Q.ExtrudeGeometry.prototype.addShape=function(J,$){var Z=$.amount!==void 0?$.amount:100,K=$.bevelThickness!==void 0?$.bevelThickness:6,Y=$.bevelSize!==void 0?$.bevelSize:K-2,X=$.bevelSegments!==void 0?$.bevelSegments:3,G=$.bevelEnabled!==void 0?$.bevelEnabled:!0,W=$.curveSegments!==void 0?$.curveSegments:12,U=$.steps!==void 0?$.steps:1,D=$.extrudePath,N,B=!1,q=$.UVGenerator!==void 0?$.UVGenerator:Q.ExtrudeGeometry.WorldUVGenerator,V,M,z,F;if(D)N=D.getSpacedPoints(U),B=!0,G=!1,V=$.frames!==void 0?$.frames:new Q.TubeGeometry.FrenetFrames(D,U,!1),M=new Q.Vector3,z=new Q.Vector3,F=new Q.Vector3;if(!G)X=0,K=0,Y=0;var L,A,C,w=this,_=this.vertices.length,x=J.extractPoints(W),H=x.shape,v=x.holes,b=!Q.ShapeUtils.isClockWise(H);if(b){H=H.reverse();for(A=0,C=v.length;A<C;A++)if(L=v[A],Q.ShapeUtils.isClockWise(L))v[A]=L.reverse();b=!1}var R=Q.ShapeUtils.triangulateShape(H,v),u=H;for(A=0,C=v.length;A<C;A++)L=v[A],H=H.concat(L);function E(UJ,NJ,VJ){if(!NJ)console.error("THREE.ExtrudeGeometry: vec does not exist");return NJ.clone().multiplyScalar(VJ).add(UJ)}var h,c,S,T,f,l=H.length,s,r=R.length;function n(UJ,NJ,VJ){var FJ,AJ,PJ=1,zJ=UJ.x-NJ.x,wJ=UJ.y-NJ.y,_J=VJ.x-UJ.x,CJ=VJ.y-UJ.y,bJ=zJ*zJ+wJ*wJ,hJ=zJ*CJ-wJ*_J;if(Math.abs(hJ)>Number.EPSILON){var fJ=Math.sqrt(bJ),HJ=Math.sqrt(_J*_J+CJ*CJ),TJ=NJ.x-wJ/fJ,uJ=NJ.y+zJ/fJ,iJ=VJ.x-CJ/HJ,rJ=VJ.y+_J/HJ,EJ=((iJ-TJ)*CJ-(rJ-uJ)*_J)/(zJ*CJ-wJ*_J);FJ=TJ+zJ*EJ-UJ.x,AJ=uJ+wJ*EJ-UJ.y;var pJ=FJ*FJ+AJ*AJ;if(pJ<=2)return new Q.Vector2(FJ,AJ);else PJ=Math.sqrt(pJ/2)}else{var RJ=!1;if(zJ>Number.EPSILON){if(_J>Number.EPSILON)RJ=!0}else if(zJ<-Number.EPSILON){if(_J<-Number.EPSILON)RJ=!0}else if(Math.sign(wJ)===Math.sign(CJ))RJ=!0;if(RJ)FJ=-wJ,AJ=zJ,PJ=Math.sqrt(bJ);else FJ=zJ,AJ=wJ,PJ=Math.sqrt(bJ/2)}return new Q.Vector2(FJ/PJ,AJ/PJ)}var j=[];for(var P=0,d=u.length,m=d-1,o=P+1;P<d;P++,m++,o++){if(m===d)m=0;if(o===d)o=0;j[P]=n(u[P],u[m],u[o])}var i=[],QJ,KJ=j.concat();for(A=0,C=v.length;A<C;A++){L=v[A],QJ=[];for(P=0,d=L.length,m=d-1,o=P+1;P<d;P++,m++,o++){if(m===d)m=0;if(o===d)o=0;QJ[P]=n(L[P],L[m],L[o])}i.push(QJ),KJ=KJ.concat(QJ)}for(h=0;h<X;h++){S=h/X,T=K*(1-S),c=Y*Math.sin(S*Math.PI/2);for(P=0,d=u.length;P<d;P++)f=E(u[P],j[P],c),BJ(f.x,f.y,-T);for(A=0,C=v.length;A<C;A++){L=v[A],QJ=i[A];for(P=0,d=L.length;P<d;P++)f=E(L[P],QJ[P],c),BJ(f.x,f.y,-T)}}c=Y;for(P=0;P<l;P++)if(f=G?E(H[P],KJ[P],c):H[P],!B)BJ(f.x,f.y,0);else z.copy(V.normals[0]).multiplyScalar(f.x),M.copy(V.binormals[0]).multiplyScalar(f.y),F.copy(N[0]).add(z).add(M),BJ(F.x,F.y,F.z);var I;for(I=1;I<=U;I++)for(P=0;P<l;P++)if(f=G?E(H[P],KJ[P],c):H[P],!B)BJ(f.x,f.y,Z/U*I);else z.copy(V.normals[I]).multiplyScalar(f.x),M.copy(V.binormals[I]).multiplyScalar(f.y),F.copy(N[I]).add(z).add(M),BJ(F.x,F.y,F.z);for(h=X-1;h>=0;h--){S=h/X,T=K*(1-S),c=Y*Math.sin(S*Math.PI/2);for(P=0,d=u.length;P<d;P++)f=E(u[P],j[P],c),BJ(f.x,f.y,Z+T);for(A=0,C=v.length;A<C;A++){L=v[A],QJ=i[A];for(P=0,d=L.length;P<d;P++)if(f=E(L[P],QJ[P],c),!B)BJ(f.x,f.y,Z+T);else BJ(f.x,f.y+N[U-1].y,N[U-1].x+T)}}qJ(),kJ();function qJ(){if(G){var UJ=0,NJ=l*UJ;for(P=0;P<r;P++)s=R[P],a(s[2]+NJ,s[1]+NJ,s[0]+NJ);UJ=U+X*2,NJ=l*UJ;for(P=0;P<r;P++)s=R[P],a(s[0]+NJ,s[1]+NJ,s[2]+NJ)}else{for(P=0;P<r;P++)s=R[P],a(s[2],s[1],s[0]);for(P=0;P<r;P++)s=R[P],a(s[0]+l*U,s[1]+l*U,s[2]+l*U)}}function kJ(){var UJ=0;WJ(u,UJ),UJ+=u.length;for(A=0,C=v.length;A<C;A++)L=v[A],WJ(L,UJ),UJ+=L.length}function WJ(UJ,NJ){var VJ,FJ;P=UJ.length;while(--P>=0){if(VJ=P,FJ=P-1,FJ<0)FJ=UJ.length-1;var AJ=0,PJ=U+X*2;for(AJ=0;AJ<PJ;AJ++){var zJ=l*AJ,wJ=l*(AJ+1),_J=NJ+VJ+zJ,CJ=NJ+FJ+zJ,bJ=NJ+FJ+wJ,hJ=NJ+VJ+wJ;DJ(_J,CJ,bJ,hJ,UJ,AJ,PJ,VJ,FJ)}}}function BJ(UJ,NJ,VJ){w.vertices.push(new Q.Vector3(UJ,NJ,VJ))}function a(UJ,NJ,VJ){UJ+=_,NJ+=_,VJ+=_,w.faces.push(new Q.Face3(UJ,NJ,VJ,null,null,0));var FJ=q.generateTopUV(w,UJ,NJ,VJ);w.faceVertexUvs[0].push(FJ)}function DJ(UJ,NJ,VJ,FJ,AJ,PJ,zJ,wJ,_J){UJ+=_,NJ+=_,VJ+=_,FJ+=_,w.faces.push(new Q.Face3(UJ,NJ,FJ,null,null,1)),w.faces.push(new Q.Face3(NJ,VJ,FJ,null,null,1));var CJ=q.generateSideWallUV(w,UJ,NJ,VJ,FJ);w.faceVertexUvs[0].push([CJ[0],CJ[1],CJ[3]]),w.faceVertexUvs[0].push([CJ[1],CJ[2],CJ[3]])}};Q.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(J,$,Z,K){var Y=J.vertices,X=Y[$],G=Y[Z],W=Y[K];return[new Q.Vector2(X.x,X.y),new Q.Vector2(G.x,G.y),new Q.Vector2(W.x,W.y)]},generateSideWallUV:function(J,$,Z,K,Y){var X=J.vertices,G=X[$],W=X[Z],U=X[K],D=X[Y];if(Math.abs(G.y-W.y)<0.01)return[new Q.Vector2(G.x,1-G.z),new Q.Vector2(W.x,1-W.z),new Q.Vector2(U.x,1-U.z),new Q.Vector2(D.x,1-D.z)];else return[new Q.Vector2(G.y,1-G.z),new Q.Vector2(W.y,1-W.z),new Q.Vector2(U.y,1-U.z),new Q.Vector2(D.y,1-D.z)]}};Q.ShapeGeometry=function(J,$){if(Q.Geometry.call(this),this.type="ShapeGeometry",Array.isArray(J)===!1)J=[J];this.addShapeList(J,$),this.computeFaceNormals()};Q.ShapeGeometry.prototype=Object.create(Q.Geometry.prototype);Q.ShapeGeometry.prototype.constructor=Q.ShapeGeometry;Q.ShapeGeometry.prototype.addShapeList=function(J,$){for(var Z=0,K=J.length;Z<K;Z++)this.addShape(J[Z],$);return this};Q.ShapeGeometry.prototype.addShape=function(J,$){if($===void 0)$={};var Z=$.curveSegments!==void 0?$.curveSegments:12,K=$.material,Y=$.UVGenerator===void 0?Q.ExtrudeGeometry.WorldUVGenerator:$.UVGenerator,X,G,W,U=this.vertices.length,D=J.extractPoints(Z),N=D.shape,B=D.holes,q=!Q.ShapeUtils.isClockWise(N);if(q){N=N.reverse();for(X=0,G=B.length;X<G;X++)if(W=B[X],Q.ShapeUtils.isClockWise(W))B[X]=W.reverse();q=!1}var V=Q.ShapeUtils.triangulateShape(N,B);for(X=0,G=B.length;X<G;X++)W=B[X],N=N.concat(W);var M,z=N.length,F,L=V.length;for(X=0;X<z;X++)M=N[X],this.vertices.push(new Q.Vector3(M.x,M.y,0));for(X=0;X<L;X++){F=V[X];var A=F[0]+U,C=F[1]+U,w=F[2]+U;this.faces.push(new Q.Face3(A,C,w,null,null,K)),this.faceVertexUvs[0].push(Y.generateTopUV(this,A,C,w))}};Q.LatheBufferGeometry=function(J,$,Z,K){Q.BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:J,segments:$,phiStart:Z,phiLength:K},$=Math.floor($)||12,Z=Z||0,K=K||Math.PI*2,K=Q.Math.clamp(K,0,Math.PI*2);var Y=($+1)*J.length,X=$*J.length*2*3,G=new Q.BufferAttribute(new(X>65535?Uint32Array:Uint16Array)(X),1),W=new Q.BufferAttribute(new Float32Array(Y*3),3),U=new Q.BufferAttribute(new Float32Array(Y*2),2),D=0,N=0,B,q=1/(J.length-1),V=1/$,M=new Q.Vector3,z=new Q.Vector2,F,L;for(F=0;F<=$;F++){var A=Z+F*V*K,C=Math.sin(A),w=Math.cos(A);for(L=0;L<=J.length-1;L++)M.x=J[L].x*C,M.y=J[L].y,M.z=J[L].x*w,W.setXYZ(D,M.x,M.y,M.z),z.x=F/$,z.y=L/(J.length-1),U.setXY(D,z.x,z.y),D++}for(F=0;F<$;F++)for(L=0;L<J.length-1;L++){B=L+F*J.length;var _=B,x=B+J.length,H=B+J.length+1,v=B+1;G.setX(N,_),N++,G.setX(N,x),N++,G.setX(N,v),N++,G.setX(N,x),N++,G.setX(N,H),N++,G.setX(N,v),N++}if(this.setIndex(G),this.addAttribute("position",W),this.addAttribute("uv",U),this.computeVertexNormals(),K===Math.PI*2){var b=this.attributes.normal.array,R=new Q.Vector3,u=new Q.Vector3,E=new Q.Vector3;B=$*J.length*3;for(F=0,L=0;F<J.length;F++,L+=3)R.x=b[L+0],R.y=b[L+1],R.z=b[L+2],u.x=b[B+L+0],u.y=b[B+L+1],u.z=b[B+L+2],E.addVectors(R,u).normalize(),b[L+0]=b[B+L+0]=E.x,b[L+1]=b[B+L+1]=E.y,b[L+2]=b[B+L+2]=E.z}};Q.LatheBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.LatheBufferGeometry.prototype.constructor=Q.LatheBufferGeometry;Q.LatheGeometry=function(J,$,Z,K){Q.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:J,segments:$,phiStart:Z,phiLength:K},this.fromBufferGeometry(new Q.LatheBufferGeometry(J,$,Z,K)),this.mergeVertices()};Q.LatheGeometry.prototype=Object.create(Q.Geometry.prototype);Q.LatheGeometry.prototype.constructor=Q.LatheGeometry;Q.PlaneGeometry=function(J,$,Z,K){Q.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:J,height:$,widthSegments:Z,heightSegments:K},this.fromBufferGeometry(new Q.PlaneBufferGeometry(J,$,Z,K))};Q.PlaneGeometry.prototype=Object.create(Q.Geometry.prototype);Q.PlaneGeometry.prototype.constructor=Q.PlaneGeometry;Q.PlaneBufferGeometry=function(J,$,Z,K){Q.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:J,height:$,widthSegments:Z,heightSegments:K};var Y=J/2,X=$/2,G=Math.floor(Z)||1,W=Math.floor(K)||1,U=G+1,D=W+1,N=J/G,B=$/W,q=new Float32Array(U*D*3),V=new Float32Array(U*D*3),M=new Float32Array(U*D*2),z=0,F=0;for(var L=0;L<D;L++){var A=L*B-X;for(var C=0;C<U;C++){var w=C*N-Y;q[z]=w,q[z+1]=-A,V[z+2]=1,M[F]=C/G,M[F+1]=1-L/W,z+=3,F+=2}}z=0;var _=new(q.length/3>65535?Uint32Array:Uint16Array)(G*W*6);for(var L=0;L<W;L++)for(var C=0;C<G;C++){var x=C+U*L,H=C+U*(L+1),v=C+1+U*(L+1),b=C+1+U*L;_[z]=x,_[z+1]=H,_[z+2]=b,_[z+3]=H,_[z+4]=v,_[z+5]=b,z+=6}this.setIndex(new Q.BufferAttribute(_,1)),this.addAttribute("position",new Q.BufferAttribute(q,3)),this.addAttribute("normal",new Q.BufferAttribute(V,3)),this.addAttribute("uv",new Q.BufferAttribute(M,2))};Q.PlaneBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.PlaneBufferGeometry.prototype.constructor=Q.PlaneBufferGeometry;Q.RingBufferGeometry=function(J,$,Z,K,Y,X){Q.BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:J,outerRadius:$,thetaSegments:Z,phiSegments:K,thetaStart:Y,thetaLength:X},J=J||20,$=$||50,Y=Y!==void 0?Y:0,X=X!==void 0?X:Math.PI*2,Z=Z!==void 0?Math.max(3,Z):8,K=K!==void 0?Math.max(1,K):1;var G=(Z+1)*(K+1),W=Z*K*2*3,U=new Q.BufferAttribute(new(W>65535?Uint32Array:Uint16Array)(W),1),D=new Q.BufferAttribute(new Float32Array(G*3),3),N=new Q.BufferAttribute(new Float32Array(G*3),3),B=new Q.BufferAttribute(new Float32Array(G*2),2),q=0,V=0,M,z=J,F=($-J)/K,L=new Q.Vector3,A=new Q.Vector2,C,w;for(C=0;C<=K;C++){for(w=0;w<=Z;w++)M=Y+w/Z*X,L.x=z*Math.cos(M),L.y=z*Math.sin(M),D.setXYZ(q,L.x,L.y,L.z),N.setXYZ(q,0,0,1),A.x=(L.x/$+1)/2,A.y=(L.y/$+1)/2,B.setXY(q,A.x,A.y),q++;z+=F}for(C=0;C<K;C++){var _=C*(Z+1);for(w=0;w<Z;w++){M=w+_;var x=M,H=M+Z+1,v=M+Z+2,b=M+1;U.setX(V,x),V++,U.setX(V,H),V++,U.setX(V,v),V++,U.setX(V,x),V++,U.setX(V,v),V++,U.setX(V,b),V++}}this.setIndex(U),this.addAttribute("position",D),this.addAttribute("normal",N),this.addAttribute("uv",B)};Q.RingBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.RingBufferGeometry.prototype.constructor=Q.RingBufferGeometry;Q.RingGeometry=function(J,$,Z,K,Y,X){Q.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:J,outerRadius:$,thetaSegments:Z,phiSegments:K,thetaStart:Y,thetaLength:X},this.fromBufferGeometry(new Q.RingBufferGeometry(J,$,Z,K,Y,X))};Q.RingGeometry.prototype=Object.create(Q.Geometry.prototype);Q.RingGeometry.prototype.constructor=Q.RingGeometry;Q.SphereGeometry=function(J,$,Z,K,Y,X,G){Q.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:J,widthSegments:$,heightSegments:Z,phiStart:K,phiLength:Y,thetaStart:X,thetaLength:G},this.fromBufferGeometry(new Q.SphereBufferGeometry(J,$,Z,K,Y,X,G))};Q.SphereGeometry.prototype=Object.create(Q.Geometry.prototype);Q.SphereGeometry.prototype.constructor=Q.SphereGeometry;Q.SphereBufferGeometry=function(J,$,Z,K,Y,X,G){Q.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:J,widthSegments:$,heightSegments:Z,phiStart:K,phiLength:Y,thetaStart:X,thetaLength:G},J=J||50,$=Math.max(3,Math.floor($)||8),Z=Math.max(2,Math.floor(Z)||6),K=K!==void 0?K:0,Y=Y!==void 0?Y:Math.PI*2,X=X!==void 0?X:0,G=G!==void 0?G:Math.PI;var W=X+G,U=($+1)*(Z+1),D=new Q.BufferAttribute(new Float32Array(U*3),3),N=new Q.BufferAttribute(new Float32Array(U*3),3),B=new Q.BufferAttribute(new Float32Array(U*2),2),q=0,V=[],M=new Q.Vector3;for(var z=0;z<=Z;z++){var F=[],L=z/Z;for(var A=0;A<=$;A++){var C=A/$,w=-J*Math.cos(K+C*Y)*Math.sin(X+L*G),_=J*Math.cos(X+L*G),x=J*Math.sin(K+C*Y)*Math.sin(X+L*G);M.set(w,_,x).normalize(),D.setXYZ(q,w,_,x),N.setXYZ(q,M.x,M.y,M.z),B.setXY(q,C,1-L),F.push(q),q++}V.push(F)}var H=[];for(var z=0;z<Z;z++)for(var A=0;A<$;A++){var v=V[z][A+1],b=V[z][A],R=V[z+1][A],u=V[z+1][A+1];if(z!==0||X>0)H.push(v,b,u);if(z!==Z-1||W<Math.PI)H.push(b,R,u)}this.setIndex(new(D.count>65535?Q.Uint32Attribute:Q.Uint16Attribute)(H,1)),this.addAttribute("position",D),this.addAttribute("normal",N),this.addAttribute("uv",B),this.boundingSphere=new Q.Sphere(new Q.Vector3,J)};Q.SphereBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.SphereBufferGeometry.prototype.constructor=Q.SphereBufferGeometry;Q.TextGeometry=function(J,$){$=$||{};var Z=$.font;if(Z instanceof Q.Font===!1)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Q.Geometry;var K=Z.generateShapes(J,$.size,$.curveSegments);if($.amount=$.height!==void 0?$.height:50,$.bevelThickness===void 0)$.bevelThickness=10;if($.bevelSize===void 0)$.bevelSize=8;if($.bevelEnabled===void 0)$.bevelEnabled=!1;Q.ExtrudeGeometry.call(this,K,$),this.type="TextGeometry"};Q.TextGeometry.prototype=Object.create(Q.ExtrudeGeometry.prototype);Q.TextGeometry.prototype.constructor=Q.TextGeometry;Q.TorusBufferGeometry=function(J,$,Z,K,Y){Q.BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:J,tube:$,radialSegments:Z,tubularSegments:K,arc:Y},J=J||100,$=$||40,Z=Math.floor(Z)||8,K=Math.floor(K)||6,Y=Y||Math.PI*2;var X=(Z+1)*(K+1),G=Z*K*2*3,W=new(G>65535?Uint32Array:Uint16Array)(G),U=new Float32Array(X*3),D=new Float32Array(X*3),N=new Float32Array(X*2),B=0,q=0,V=0,M=new Q.Vector3,z=new Q.Vector3,F=new Q.Vector3,L,A;for(L=0;L<=Z;L++)for(A=0;A<=K;A++){var C=A/K*Y,w=L/Z*Math.PI*2;z.x=(J+$*Math.cos(w))*Math.cos(C),z.y=(J+$*Math.cos(w))*Math.sin(C),z.z=$*Math.sin(w),U[B]=z.x,U[B+1]=z.y,U[B+2]=z.z,M.x=J*Math.cos(C),M.y=J*Math.sin(C),F.subVectors(z,M).normalize(),D[B]=F.x,D[B+1]=F.y,D[B+2]=F.z,N[q]=A/K,N[q+1]=L/Z,B+=3,q+=2}for(L=1;L<=Z;L++)for(A=1;A<=K;A++){var _=(K+1)*L+A-1,x=(K+1)*(L-1)+A-1,H=(K+1)*(L-1)+A,v=(K+1)*L+A;W[V]=_,W[V+1]=x,W[V+2]=v,W[V+3]=x,W[V+4]=H,W[V+5]=v,V+=6}this.setIndex(new Q.BufferAttribute(W,1)),this.addAttribute("position",new Q.BufferAttribute(U,3)),this.addAttribute("normal",new Q.BufferAttribute(D,3)),this.addAttribute("uv",new Q.BufferAttribute(N,2))};Q.TorusBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.TorusBufferGeometry.prototype.constructor=Q.TorusBufferGeometry;Q.TorusGeometry=function(J,$,Z,K,Y){Q.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:J,tube:$,radialSegments:Z,tubularSegments:K,arc:Y},this.fromBufferGeometry(new Q.TorusBufferGeometry(J,$,Z,K,Y))};Q.TorusGeometry.prototype=Object.create(Q.Geometry.prototype);Q.TorusGeometry.prototype.constructor=Q.TorusGeometry;Q.TorusKnotBufferGeometry=function(J,$,Z,K,Y,X){Q.BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:J,tube:$,tubularSegments:Z,radialSegments:K,p:Y,q:X},J=J||100,$=$||40,Z=Math.floor(Z)||64,K=Math.floor(K)||8,Y=Y||2,X=X||3;var G=(K+1)*(Z+1),W=K*Z*2*3,U=new Q.BufferAttribute(new(W>65535?Uint32Array:Uint16Array)(W),1),D=new Q.BufferAttribute(new Float32Array(G*3),3),N=new Q.BufferAttribute(new Float32Array(G*3),3),B=new Q.BufferAttribute(new Float32Array(G*2),2),q,V,M=0,z=0,F=new Q.Vector3,L=new Q.Vector3,A=new Q.Vector2,C=new Q.Vector3,w=new Q.Vector3,_=new Q.Vector3,x=new Q.Vector3,H=new Q.Vector3;for(q=0;q<=Z;++q){var v=q/Z*Y*Math.PI*2;T(v,Y,X,J,C),T(v+0.01,Y,X,J,w),x.subVectors(w,C),H.addVectors(w,C),_.crossVectors(x,H),H.crossVectors(_,x),_.normalize(),H.normalize();for(V=0;V<=K;++V){var b=V/K*Math.PI*2,R=-$*Math.cos(b),u=$*Math.sin(b);F.x=C.x+(R*H.x+u*_.x),F.y=C.y+(R*H.y+u*_.y),F.z=C.z+(R*H.z+u*_.z),D.setXYZ(M,F.x,F.y,F.z),L.subVectors(F,C).normalize(),N.setXYZ(M,L.x,L.y,L.z),A.x=q/Z,A.y=V/K,B.setXY(M,A.x,A.y),M++}}for(V=1;V<=Z;V++)for(q=1;q<=K;q++){var E=(K+1)*(V-1)+(q-1),h=(K+1)*V+(q-1),c=(K+1)*V+q,S=(K+1)*(V-1)+q;U.setX(z,E),z++,U.setX(z,h),z++,U.setX(z,S),z++,U.setX(z,h),z++,U.setX(z,c),z++,U.setX(z,S),z++}this.setIndex(U),this.addAttribute("position",D),this.addAttribute("normal",N),this.addAttribute("uv",B);function T(f,l,s,r,n){var j=Math.cos(f),P=Math.sin(f),d=s/l*f,m=Math.cos(d);n.x=r*(2+m)*0.5*j,n.y=r*(2+m)*P*0.5,n.z=r*Math.sin(d)*0.5}};Q.TorusKnotBufferGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.TorusKnotBufferGeometry.prototype.constructor=Q.TorusKnotBufferGeometry;Q.TorusKnotGeometry=function(J,$,Z,K,Y,X,G){if(Q.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:J,tube:$,tubularSegments:Z,radialSegments:K,p:Y,q:X},G!==void 0)console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.");this.fromBufferGeometry(new Q.TorusKnotBufferGeometry(J,$,Z,K,Y,X)),this.mergeVertices()};Q.TorusKnotGeometry.prototype=Object.create(Q.Geometry.prototype);Q.TorusKnotGeometry.prototype.constructor=Q.TorusKnotGeometry;Q.TubeGeometry=function(J,$,Z,K,Y,X){Q.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:J,segments:$,radius:Z,radialSegments:K,closed:Y,taper:X},$=$||64,Z=Z||1,K=K||8,Y=Y||!1,X=X||Q.TubeGeometry.NoTaper;var G=[],W=this,U,D,N,B=$+1,q,V,M,z,F,L,A=new Q.Vector3,C,w,_,x,H,v,b,R,u,E,h,c,S=new Q.TubeGeometry.FrenetFrames(J,$,Y),T=S.tangents,f=S.normals,l=S.binormals;this.tangents=T,this.normals=f,this.binormals=l;function s(r,n,j){return W.vertices.push(new Q.Vector3(r,n,j))-1}for(C=0;C<B;C++){G[C]=[],q=C/(B-1),L=J.getPointAt(q),U=T[C],D=f[C],N=l[C],M=Z*X(q);for(w=0;w<K;w++)V=w/K*2*Math.PI,z=-M*Math.cos(V),F=M*Math.sin(V),A.copy(L),A.x+=z*D.x+F*N.x,A.y+=z*D.y+F*N.y,A.z+=z*D.z+F*N.z,G[C][w]=s(A.x,A.y,A.z)}for(C=0;C<$;C++)for(w=0;w<K;w++)_=Y?(C+1)%$:C+1,x=(w+1)%K,H=G[C][w],v=G[_][w],b=G[_][x],R=G[C][x],u=new Q.Vector2(C/$,w/K),E=new Q.Vector2((C+1)/$,w/K),h=new Q.Vector2((C+1)/$,(w+1)/K),c=new Q.Vector2(C/$,(w+1)/K),this.faces.push(new Q.Face3(H,v,R)),this.faceVertexUvs[0].push([u,E,c]),this.faces.push(new Q.Face3(v,b,R)),this.faceVertexUvs[0].push([E.clone(),h,c.clone()]);this.computeFaceNormals(),this.computeVertexNormals()};Q.TubeGeometry.prototype=Object.create(Q.Geometry.prototype);Q.TubeGeometry.prototype.constructor=Q.TubeGeometry;Q.TubeGeometry.NoTaper=function(J){return 1};Q.TubeGeometry.SinusoidalTaper=function(J){return Math.sin(Math.PI*J)};Q.TubeGeometry.FrenetFrames=function(J,$,Z){var K=new Q.Vector3,Y=[],X=[],G=[],W=new Q.Vector3,U=new Q.Matrix4,D=$+1,N,B,q,V,M,z,F;this.tangents=Y,this.normals=X,this.binormals=G;for(z=0;z<D;z++)F=z/(D-1),Y[z]=J.getTangentAt(F),Y[z].normalize();L();function L(){if(X[0]=new Q.Vector3,G[0]=new Q.Vector3,B=Number.MAX_VALUE,q=Math.abs(Y[0].x),V=Math.abs(Y[0].y),M=Math.abs(Y[0].z),q<=B)B=q,K.set(1,0,0);if(V<=B)B=V,K.set(0,1,0);if(M<=B)K.set(0,0,1);W.crossVectors(Y[0],K).normalize(),X[0].crossVectors(Y[0],W),G[0].crossVectors(Y[0],X[0])}for(z=1;z<D;z++){if(X[z]=X[z-1].clone(),G[z]=G[z-1].clone(),W.crossVectors(Y[z-1],Y[z]),W.length()>Number.EPSILON)W.normalize(),N=Math.acos(Q.Math.clamp(Y[z-1].dot(Y[z]),-1,1)),X[z].applyMatrix4(U.makeRotationAxis(W,N));G[z].crossVectors(Y[z],X[z])}if(Z){if(N=Math.acos(Q.Math.clamp(X[0].dot(X[D-1]),-1,1)),N/=D-1,Y[0].dot(W.crossVectors(X[0],X[D-1]))>0)N=-N;for(z=1;z<D;z++)X[z].applyMatrix4(U.makeRotationAxis(Y[z],N*z)),G[z].crossVectors(Y[z],X[z])}};Q.PolyhedronGeometry=function(J,$,Z,K){Q.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:J,indices:$,radius:Z,detail:K},Z=Z||1,K=K||0;var Y=this;for(var X=0,G=J.length;X<G;X+=3)w(new Q.Vector3(J[X],J[X+1],J[X+2]));var W=this.vertices,U=[];for(var X=0,D=0,G=$.length;X<G;X+=3,D++){var N=W[$[X]],B=W[$[X+1]],q=W[$[X+2]];U[D]=new Q.Face3(N.index,B.index,q.index,[N.clone(),B.clone(),q.clone()],void 0,D)}var V=new Q.Vector3;for(var X=0,G=U.length;X<G;X++)x(U[X],K);for(var X=0,G=this.faceVertexUvs[0].length;X<G;X++){var M=this.faceVertexUvs[0][X],z=M[0].x,F=M[1].x,L=M[2].x,A=Math.max(z,F,L),C=Math.min(z,F,L);if(A>0.9&&C<0.1){if(z<0.2)M[0].x+=1;if(F<0.2)M[1].x+=1;if(L<0.2)M[2].x+=1}}for(var X=0,G=this.vertices.length;X<G;X++)this.vertices[X].multiplyScalar(Z);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new Q.Sphere(new Q.Vector3,Z);function w(R){var u=R.normalize().clone();u.index=Y.vertices.push(u)-1;var E=H(R)/2/Math.PI+0.5,h=v(R)/Math.PI+0.5;return u.uv=new Q.Vector2(E,1-h),u}function _(R,u,E,h){var c=new Q.Face3(R.index,u.index,E.index,[R.clone(),u.clone(),E.clone()],void 0,h);Y.faces.push(c),V.copy(R).add(u).add(E).divideScalar(3);var S=H(V);Y.faceVertexUvs[0].push([b(R.uv,R,S),b(u.uv,u,S),b(E.uv,E,S)])}function x(R,u){var E=Math.pow(2,u),h=w(Y.vertices[R.a]),c=w(Y.vertices[R.b]),S=w(Y.vertices[R.c]),T=[],f=R.materialIndex;for(var l=0;l<=E;l++){T[l]=[];var s=w(h.clone().lerp(S,l/E)),r=w(c.clone().lerp(S,l/E)),n=E-l;for(var j=0;j<=n;j++)if(j===0&&l===E)T[l][j]=s;else T[l][j]=w(s.clone().lerp(r,j/n))}for(var l=0;l<E;l++)for(var j=0;j<2*(E-l)-1;j++){var P=Math.floor(j/2);if(j%2===0)_(T[l][P+1],T[l+1][P],T[l][P],f);else _(T[l][P+1],T[l+1][P+1],T[l+1][P],f)}}function H(R){return Math.atan2(R.z,-R.x)}function v(R){return Math.atan2(-R.y,Math.sqrt(R.x*R.x+R.z*R.z))}function b(R,u,E){if(E<0&&R.x===1)R=new Q.Vector2(R.x-1,R.y);if(u.x===0&&u.z===0)R=new Q.Vector2(E/2/Math.PI+0.5,R.y);return R.clone()}};Q.PolyhedronGeometry.prototype=Object.create(Q.Geometry.prototype);Q.PolyhedronGeometry.prototype.constructor=Q.PolyhedronGeometry;Q.DodecahedronGeometry=function(J,$){var Z=(1+Math.sqrt(5))/2,K=1/Z,Y=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-K,-Z,0,-K,Z,0,K,-Z,0,K,Z,-K,-Z,0,-K,Z,0,K,-Z,0,K,Z,0,-Z,0,-K,Z,0,-K,-Z,0,K,Z,0,K],X=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];Q.PolyhedronGeometry.call(this,Y,X,J,$),this.type="DodecahedronGeometry",this.parameters={radius:J,detail:$}};Q.DodecahedronGeometry.prototype=Object.create(Q.PolyhedronGeometry.prototype);Q.DodecahedronGeometry.prototype.constructor=Q.DodecahedronGeometry;Q.IcosahedronGeometry=function(J,$){var Z=(1+Math.sqrt(5))/2,K=[-1,Z,0,1,Z,0,-1,-Z,0,1,-Z,0,0,-1,Z,0,1,Z,0,-1,-Z,0,1,-Z,Z,0,-1,Z,0,1,-Z,0,-1,-Z,0,1],Y=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];Q.PolyhedronGeometry.call(this,K,Y,J,$),this.type="IcosahedronGeometry",this.parameters={radius:J,detail:$}};Q.IcosahedronGeometry.prototype=Object.create(Q.PolyhedronGeometry.prototype);Q.IcosahedronGeometry.prototype.constructor=Q.IcosahedronGeometry;Q.OctahedronGeometry=function(J,$){var Z=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],K=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];Q.PolyhedronGeometry.call(this,Z,K,J,$),this.type="OctahedronGeometry",this.parameters={radius:J,detail:$}};Q.OctahedronGeometry.prototype=Object.create(Q.PolyhedronGeometry.prototype);Q.OctahedronGeometry.prototype.constructor=Q.OctahedronGeometry;Q.TetrahedronGeometry=function(J,$){var Z=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],K=[2,1,0,0,3,2,1,3,0,2,3,1];Q.PolyhedronGeometry.call(this,Z,K,J,$),this.type="TetrahedronGeometry",this.parameters={radius:J,detail:$}};Q.TetrahedronGeometry.prototype=Object.create(Q.PolyhedronGeometry.prototype);Q.TetrahedronGeometry.prototype.constructor=Q.TetrahedronGeometry;Q.ParametricGeometry=function(J,$,Z){Q.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:J,slices:$,stacks:Z};var K=this.vertices,Y=this.faces,X=this.faceVertexUvs[0],G,W,U,D,N,B=$+1;for(G=0;G<=Z;G++){N=G/Z;for(W=0;W<=$;W++)D=W/$,U=J(D,N),K.push(U)}var q,V,M,z,F,L,A,C;for(G=0;G<Z;G++)for(W=0;W<$;W++)q=G*B+W,V=G*B+W+1,M=(G+1)*B+W+1,z=(G+1)*B+W,F=new Q.Vector2(W/$,G/Z),L=new Q.Vector2((W+1)/$,G/Z),A=new Q.Vector2((W+1)/$,(G+1)/Z),C=new Q.Vector2(W/$,(G+1)/Z),Y.push(new Q.Face3(q,V,z)),X.push([F,L,C]),Y.push(new Q.Face3(V,M,z)),X.push([L.clone(),A,C.clone()]);this.computeFaceNormals(),this.computeVertexNormals()};Q.ParametricGeometry.prototype=Object.create(Q.Geometry.prototype);Q.ParametricGeometry.prototype.constructor=Q.ParametricGeometry;Q.WireframeGeometry=function(J){Q.BufferGeometry.call(this);var $=[0,0],Z={};function K(E,h){return E-h}var Y=["a","b","c"];if(J instanceof Q.Geometry){var{vertices:X,faces:G}=J,W=0,U=new Uint32Array(6*G.length);for(var D=0,N=G.length;D<N;D++){var B=G[D];for(var q=0;q<3;q++){$[0]=B[Y[q]],$[1]=B[Y[(q+1)%3]],$.sort(K);var V=$.toString();if(Z[V]===void 0)U[2*W]=$[0],U[2*W+1]=$[1],Z[V]=!0,W++}}var M=new Float32Array(W*2*3);for(var D=0,N=W;D<N;D++)for(var q=0;q<2;q++){var z=X[U[2*D+q]],F=6*D+3*q;M[F+0]=z.x,M[F+1]=z.y,M[F+2]=z.z}this.addAttribute("position",new Q.BufferAttribute(M,3))}else if(J instanceof Q.BufferGeometry)if(J.index!==null){var L=J.index.array,X=J.attributes.position,A=J.groups,W=0;if(A.length===0)J.addGroup(0,L.length);var U=new Uint32Array(2*L.length);for(var C=0,w=A.length;C<w;++C){var _=A[C],x=_.start,H=_.count;for(var D=x,v=x+H;D<v;D+=3)for(var q=0;q<3;q++){$[0]=L[D+q],$[1]=L[D+(q+1)%3],$.sort(K);var V=$.toString();if(Z[V]===void 0)U[2*W]=$[0],U[2*W+1]=$[1],Z[V]=!0,W++}}var M=new Float32Array(W*2*3);for(var D=0,N=W;D<N;D++)for(var q=0;q<2;q++){var F=6*D+3*q,b=U[2*D+q];M[F+0]=X.getX(b),M[F+1]=X.getY(b),M[F+2]=X.getZ(b)}this.addAttribute("position",new Q.BufferAttribute(M,3))}else{var X=J.attributes.position.array,W=X.length/3,R=W/3,M=new Float32Array(W*2*3);for(var D=0,N=R;D<N;D++)for(var q=0;q<3;q++){var F=18*D+6*q,u=9*D+3*q;M[F+0]=X[u],M[F+1]=X[u+1],M[F+2]=X[u+2];var b=9*D+3*((q+1)%3);M[F+3]=X[b],M[F+4]=X[b+1],M[F+5]=X[b+2]}this.addAttribute("position",new Q.BufferAttribute(M,3))}};Q.WireframeGeometry.prototype=Object.create(Q.BufferGeometry.prototype);Q.WireframeGeometry.prototype.constructor=Q.WireframeGeometry;Q.AxisHelper=function(J){J=J||1;var $=new Float32Array([0,0,0,J,0,0,0,0,0,0,J,0,0,0,0,0,0,J]),Z=new Float32Array([1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1]),K=new Q.BufferGeometry;K.addAttribute("position",new Q.BufferAttribute($,3)),K.addAttribute("color",new Q.BufferAttribute(Z,3));var Y=new Q.LineBasicMaterial({vertexColors:Q.VertexColors});Q.LineSegments.call(this,K,Y)};Q.AxisHelper.prototype=Object.create(Q.LineSegments.prototype);Q.AxisHelper.prototype.constructor=Q.AxisHelper;Q.ArrowHelper=function(){var J=new Q.BufferGeometry;J.addAttribute("position",new Q.Float32Attribute([0,0,0,0,1,0],3));var $=new Q.CylinderBufferGeometry(0,0.5,1,5,1);return $.translate(0,-0.5,0),function Z(K,Y,X,G,W,U){if(Q.Object3D.call(this),G===void 0)G=16776960;if(X===void 0)X=1;if(W===void 0)W=0.2*X;if(U===void 0)U=0.2*W;this.position.copy(Y),this.line=new Q.Line(J,new Q.LineBasicMaterial({color:G})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Q.Mesh($,new Q.MeshBasicMaterial({color:G})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(K),this.setLength(X,W,U)}}();Q.ArrowHelper.prototype=Object.create(Q.Object3D.prototype);Q.ArrowHelper.prototype.constructor=Q.ArrowHelper;Q.ArrowHelper.prototype.setDirection=function(){var J=new Q.Vector3,$;return function Z(K){if(K.y>0.99999)this.quaternion.set(0,0,0,1);else if(K.y<-0.99999)this.quaternion.set(1,0,0,0);else J.set(K.z,0,-K.x).normalize(),$=Math.acos(K.y),this.quaternion.setFromAxisAngle(J,$)}}();Q.ArrowHelper.prototype.setLength=function(J,$,Z){if($===void 0)$=0.2*J;if(Z===void 0)Z=0.2*$;this.line.scale.set(1,Math.max(0,J-$),1),this.line.updateMatrix(),this.cone.scale.set(Z,$,Z),this.cone.position.y=J,this.cone.updateMatrix()};Q.ArrowHelper.prototype.setColor=function(J){this.line.material.color.copy(J),this.cone.material.color.copy(J)};Q.BoxHelper=function(J){var $=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),Z=new Float32Array(24),K=new Q.BufferGeometry;if(K.setIndex(new Q.BufferAttribute($,1)),K.addAttribute("position",new Q.BufferAttribute(Z,3)),Q.LineSegments.call(this,K,new Q.LineBasicMaterial({color:16776960})),J!==void 0)this.update(J)};Q.BoxHelper.prototype=Object.create(Q.LineSegments.prototype);Q.BoxHelper.prototype.constructor=Q.BoxHelper;Q.BoxHelper.prototype.update=function(){var J=new Q.Box3;return function($){if($ instanceof Q.Box3)J.copy($);else J.setFromObject($);if(J.isEmpty())return;var{min:Z,max:K}=J,Y=this.geometry.attributes.position,X=Y.array;X[0]=K.x,X[1]=K.y,X[2]=K.z,X[3]=Z.x,X[4]=K.y,X[5]=K.z,X[6]=Z.x,X[7]=Z.y,X[8]=K.z,X[9]=K.x,X[10]=Z.y,X[11]=K.z,X[12]=K.x,X[13]=K.y,X[14]=Z.z,X[15]=Z.x,X[16]=K.y,X[17]=Z.z,X[18]=Z.x,X[19]=Z.y,X[20]=Z.z,X[21]=K.x,X[22]=Z.y,X[23]=Z.z,Y.needsUpdate=!0,this.geometry.computeBoundingSphere()}}();Q.BoundingBoxHelper=function(J,$){var Z=$!==void 0?$:8947848;this.object=J,this.box=new Q.Box3,Q.Mesh.call(this,new Q.BoxGeometry(1,1,1),new Q.MeshBasicMaterial({color:Z,wireframe:!0}))};Q.BoundingBoxHelper.prototype=Object.create(Q.Mesh.prototype);Q.BoundingBoxHelper.prototype.constructor=Q.BoundingBoxHelper;Q.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)};Q.CameraHelper=function(J){var $=new Q.Geometry,Z=new Q.LineBasicMaterial({color:16777215,vertexColors:Q.FaceColors}),K={},Y=16755200,X=16711680,G=43775,W=16777215,U=3355443;D("n1","n2",Y),D("n2","n4",Y),D("n4","n3",Y),D("n3","n1",Y),D("f1","f2",Y),D("f2","f4",Y),D("f4","f3",Y),D("f3","f1",Y),D("n1","f1",Y),D("n2","f2",Y),D("n3","f3",Y),D("n4","f4",Y),D("p","n1",X),D("p","n2",X),D("p","n3",X),D("p","n4",X),D("u1","u2",G),D("u2","u3",G),D("u3","u1",G),D("c","t",W),D("p","c",U),D("cn1","cn2",U),D("cn3","cn4",U),D("cf1","cf2",U),D("cf3","cf4",U);function D(B,q,V){N(B,V),N(q,V)}function N(B,q){if($.vertices.push(new Q.Vector3),$.colors.push(new Q.Color(q)),K[B]===void 0)K[B]=[];K[B].push($.vertices.length-1)}Q.LineSegments.call(this,$,Z),this.camera=J,this.camera.updateProjectionMatrix(),this.matrix=J.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=K,this.update()};Q.CameraHelper.prototype=Object.create(Q.LineSegments.prototype);Q.CameraHelper.prototype.constructor=Q.CameraHelper;Q.CameraHelper.prototype.update=function(){var J,$,Z=new Q.Vector3,K=new Q.Camera;function Y(X,G,W,U){Z.set(G,W,U).unproject(K);var D=$[X];if(D!==void 0)for(var N=0,B=D.length;N<B;N++)J.vertices[D[N]].copy(Z)}return function(){J=this.geometry,$=this.pointMap;var X=1,G=1;K.projectionMatrix.copy(this.camera.projectionMatrix),Y("c",0,0,-1),Y("t",0,0,1),Y("n1",-X,-G,-1),Y("n2",X,-G,-1),Y("n3",-X,G,-1),Y("n4",X,G,-1),Y("f1",-X,-G,1),Y("f2",X,-G,1),Y("f3",-X,G,1),Y("f4",X,G,1),Y("u1",X*0.7,G*1.1,-1),Y("u2",-X*0.7,G*1.1,-1),Y("u3",0,G*2,-1),Y("cf1",-X,0,1),Y("cf2",X,0,1),Y("cf3",0,-G,1),Y("cf4",0,G,1),Y("cn1",-X,0,-1),Y("cn2",X,0,-1),Y("cn3",0,-G,-1),Y("cn4",0,G,-1),J.verticesNeedUpdate=!0}}();Q.DirectionalLightHelper=function(J,$){if(Q.Object3D.call(this),this.light=J,this.light.updateMatrixWorld(),this.matrix=J.matrixWorld,this.matrixAutoUpdate=!1,$===void 0)$=1;var Z=new Q.BufferGeometry;Z.addAttribute("position",new Q.Float32Attribute([-$,$,0,$,$,0,$,-$,0,-$,-$,0,-$,$,0],3));var K=new Q.LineBasicMaterial({fog:!1});this.add(new Q.Line(Z,K)),Z=new Q.BufferGeometry,Z.addAttribute("position",new Q.Float32Attribute([0,0,0,0,0,1],3)),this.add(new Q.Line(Z,K)),this.update()};Q.DirectionalLightHelper.prototype=Object.create(Q.Object3D.prototype);Q.DirectionalLightHelper.prototype.constructor=Q.DirectionalLightHelper;Q.DirectionalLightHelper.prototype.dispose=function(){var J=this.children[0],$=this.children[1];J.geometry.dispose(),J.material.dispose(),$.geometry.dispose(),$.material.dispose()};Q.DirectionalLightHelper.prototype.update=function(){var J=new Q.Vector3,$=new Q.Vector3,Z=new Q.Vector3;return function(){J.setFromMatrixPosition(this.light.matrixWorld),$.setFromMatrixPosition(this.light.target.matrixWorld),Z.subVectors($,J);var K=this.children[0],Y=this.children[1];K.lookAt(Z),K.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),Y.lookAt(Z),Y.scale.z=Z.length()}}();Q.EdgesHelper=function(J,$,Z){var K=$!==void 0?$:16777215;Q.LineSegments.call(this,new Q.EdgesGeometry(J.geometry,Z),new Q.LineBasicMaterial({color:K})),this.matrix=J.matrixWorld,this.matrixAutoUpdate=!1};Q.EdgesHelper.prototype=Object.create(Q.LineSegments.prototype);Q.EdgesHelper.prototype.constructor=Q.EdgesHelper;Q.FaceNormalsHelper=function(J,$,Z,K){this.object=J,this.size=$!==void 0?$:1;var Y=Z!==void 0?Z:16776960,X=K!==void 0?K:1,G=0,W=this.object.geometry;if(W instanceof Q.Geometry)G=W.faces.length;else console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var U=new Q.BufferGeometry,D=new Q.Float32Attribute(G*2*3,3);U.addAttribute("position",D),Q.LineSegments.call(this,U,new Q.LineBasicMaterial({color:Y,linewidth:X})),this.matrixAutoUpdate=!1,this.update()};Q.FaceNormalsHelper.prototype=Object.create(Q.LineSegments.prototype);Q.FaceNormalsHelper.prototype.constructor=Q.FaceNormalsHelper;Q.FaceNormalsHelper.prototype.update=function(){var J=new Q.Vector3,$=new Q.Vector3,Z=new Q.Matrix3;return function K(){this.object.updateMatrixWorld(!0),Z.getNormalMatrix(this.object.matrixWorld);var Y=this.object.matrixWorld,X=this.geometry.attributes.position,G=this.object.geometry,W=G.vertices,U=G.faces,D=0;for(var N=0,B=U.length;N<B;N++){var q=U[N],V=q.normal;J.copy(W[q.a]).add(W[q.b]).add(W[q.c]).divideScalar(3).applyMatrix4(Y),$.copy(V).applyMatrix3(Z).normalize().multiplyScalar(this.size).add(J),X.setXYZ(D,J.x,J.y,J.z),D=D+1,X.setXYZ(D,$.x,$.y,$.z),D=D+1}return X.needsUpdate=!0,this}}();Q.GridHelper=function(J,$,Z,K){Z=new Q.Color(Z!==void 0?Z:4473924),K=new Q.Color(K!==void 0?K:8947848);var Y=[],X=[];for(var G=-J,W=0;G<=J;G+=$){Y.push(-J,0,G,J,0,G),Y.push(G,0,-J,G,0,J);var U=G===0?Z:K;U.toArray(X,W),W+=3,U.toArray(X,W),W+=3,U.toArray(X,W),W+=3,U.toArray(X,W),W+=3}var D=new Q.BufferGeometry;D.addAttribute("position",new Q.Float32Attribute(Y,3)),D.addAttribute("color",new Q.Float32Attribute(X,3));var N=new Q.LineBasicMaterial({vertexColors:Q.VertexColors});Q.LineSegments.call(this,D,N)};Q.GridHelper.prototype=Object.create(Q.LineSegments.prototype);Q.GridHelper.prototype.constructor=Q.GridHelper;Q.GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};Q.HemisphereLightHelper=function(J,$){Q.Object3D.call(this),this.light=J,this.light.updateMatrixWorld(),this.matrix=J.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new Q.Color,new Q.Color];var Z=new Q.SphereGeometry($,4,2);Z.rotateX(-Math.PI/2);for(var K=0,Y=8;K<Y;K++)Z.faces[K].color=this.colors[K<4?0:1];var X=new Q.MeshBasicMaterial({vertexColors:Q.FaceColors,wireframe:!0});this.lightSphere=new Q.Mesh(Z,X),this.add(this.lightSphere),this.update()};Q.HemisphereLightHelper.prototype=Object.create(Q.Object3D.prototype);Q.HemisphereLightHelper.prototype.constructor=Q.HemisphereLightHelper;Q.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()};Q.HemisphereLightHelper.prototype.update=function(){var J=new Q.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(J.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}();Q.PointLightHelper=function(J,$){this.light=J,this.light.updateMatrixWorld();var Z=new Q.SphereBufferGeometry($,4,2),K=new Q.MeshBasicMaterial({wireframe:!0,fog:!1});K.color.copy(this.light.color).multiplyScalar(this.light.intensity),Q.Mesh.call(this,Z,K),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1};Q.PointLightHelper.prototype=Object.create(Q.Mesh.prototype);Q.PointLightHelper.prototype.constructor=Q.PointLightHelper;Q.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()};Q.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};Q.SkeletonHelper=function(J){this.bones=this.getBoneList(J);var $=new Q.Geometry;for(var Z=0;Z<this.bones.length;Z++){var K=this.bones[Z];if(K.parent instanceof Q.Bone)$.vertices.push(new Q.Vector3),$.vertices.push(new Q.Vector3),$.colors.push(new Q.Color(0,0,1)),$.colors.push(new Q.Color(0,1,0))}$.dynamic=!0;var Y=new Q.LineBasicMaterial({vertexColors:Q.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});Q.LineSegments.call(this,$,Y),this.root=J,this.matrix=J.matrixWorld,this.matrixAutoUpdate=!1,this.update()};Q.SkeletonHelper.prototype=Object.create(Q.LineSegments.prototype);Q.SkeletonHelper.prototype.constructor=Q.SkeletonHelper;Q.SkeletonHelper.prototype.getBoneList=function(J){var $=[];if(J instanceof Q.Bone)$.push(J);for(var Z=0;Z<J.children.length;Z++)$.push.apply($,this.getBoneList(J.children[Z]));return $};Q.SkeletonHelper.prototype.update=function(){var J=this.geometry,$=new Q.Matrix4().getInverse(this.root.matrixWorld),Z=new Q.Matrix4,K=0;for(var Y=0;Y<this.bones.length;Y++){var X=this.bones[Y];if(X.parent instanceof Q.Bone)Z.multiplyMatrices($,X.matrixWorld),J.vertices[K].setFromMatrixPosition(Z),Z.multiplyMatrices($,X.parent.matrixWorld),J.vertices[K+1].setFromMatrixPosition(Z),K+=2}J.verticesNeedUpdate=!0,J.computeBoundingSphere()};Q.SpotLightHelper=function(J){Q.Object3D.call(this),this.light=J,this.light.updateMatrixWorld(),this.matrix=J.matrixWorld,this.matrixAutoUpdate=!1;var $=new Q.BufferGeometry,Z=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var K=0,Y=1,X=32;K<X;K++,Y++){var G=K/X*Math.PI*2,W=Y/X*Math.PI*2;Z.push(Math.cos(G),Math.sin(G),1,Math.cos(W),Math.sin(W),1)}$.addAttribute("position",new Q.Float32Attribute(Z,3));var U=new Q.LineBasicMaterial({fog:!1});this.cone=new Q.LineSegments($,U),this.add(this.cone),this.update()};Q.SpotLightHelper.prototype=Object.create(Q.Object3D.prototype);Q.SpotLightHelper.prototype.constructor=Q.SpotLightHelper;Q.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()};Q.SpotLightHelper.prototype.update=function(){var J=new Q.Vector3,$=new Q.Vector3;return function(){var Z=this.light.distance?this.light.distance:1000,K=Z*Math.tan(this.light.angle);this.cone.scale.set(K,K,Z),J.setFromMatrixPosition(this.light.matrixWorld),$.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt($.sub(J)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();Q.VertexNormalsHelper=function(J,$,Z,K){this.object=J,this.size=$!==void 0?$:1;var Y=Z!==void 0?Z:16711680,X=K!==void 0?K:1,G=0,W=this.object.geometry;if(W instanceof Q.Geometry)G=W.faces.length*3;else if(W instanceof Q.BufferGeometry)G=W.attributes.normal.count;var U=new Q.BufferGeometry,D=new Q.Float32Attribute(G*2*3,3);U.addAttribute("position",D),Q.LineSegments.call(this,U,new Q.LineBasicMaterial({color:Y,linewidth:X})),this.matrixAutoUpdate=!1,this.update()};Q.VertexNormalsHelper.prototype=Object.create(Q.LineSegments.prototype);Q.VertexNormalsHelper.prototype.constructor=Q.VertexNormalsHelper;Q.VertexNormalsHelper.prototype.update=function(){var J=new Q.Vector3,$=new Q.Vector3,Z=new Q.Matrix3;return function K(){var Y=["a","b","c"];this.object.updateMatrixWorld(!0),Z.getNormalMatrix(this.object.matrixWorld);var X=this.object.matrixWorld,G=this.geometry.attributes.position,W=this.object.geometry;if(W instanceof Q.Geometry){var{vertices:U,faces:D}=W,N=0;for(var B=0,q=D.length;B<q;B++){var V=D[B];for(var M=0,z=V.vertexNormals.length;M<z;M++){var F=U[V[Y[M]]],L=V.vertexNormals[M];J.copy(F).applyMatrix4(X),$.copy(L).applyMatrix3(Z).normalize().multiplyScalar(this.size).add(J),G.setXYZ(N,J.x,J.y,J.z),N=N+1,G.setXYZ(N,$.x,$.y,$.z),N=N+1}}}else if(W instanceof Q.BufferGeometry){var A=W.attributes.position,C=W.attributes.normal,N=0;for(var M=0,z=A.count;M<z;M++)J.set(A.getX(M),A.getY(M),A.getZ(M)).applyMatrix4(X),$.set(C.getX(M),C.getY(M),C.getZ(M)),$.applyMatrix3(Z).normalize().multiplyScalar(this.size).add(J),G.setXYZ(N,J.x,J.y,J.z),N=N+1,G.setXYZ(N,$.x,$.y,$.z),N=N+1}return G.needsUpdate=!0,this}}();Q.WireframeHelper=function(J,$){var Z=$!==void 0?$:16777215;Q.LineSegments.call(this,new Q.WireframeGeometry(J.geometry),new Q.LineBasicMaterial({color:Z})),this.matrix=J.matrixWorld,this.matrixAutoUpdate=!1};Q.WireframeHelper.prototype=Object.create(Q.LineSegments.prototype);Q.WireframeHelper.prototype.constructor=Q.WireframeHelper;Q.ImmediateRenderObject=function(J){Q.Object3D.call(this),this.material=J,this.render=function($){}};Q.ImmediateRenderObject.prototype=Object.create(Q.Object3D.prototype);Q.ImmediateRenderObject.prototype.constructor=Q.ImmediateRenderObject;Q.MorphBlendMesh=function(J,$){Q.Mesh.call(this,J,$),this.animationsMap={},this.animationsList=[];var Z=this.geometry.morphTargets.length,K="__default",Y=0,X=Z-1,G=Z/1;this.createAnimation(K,Y,X,G),this.setAnimationWeight(K,1)};Q.MorphBlendMesh.prototype=Object.create(Q.Mesh.prototype);Q.MorphBlendMesh.prototype.constructor=Q.MorphBlendMesh;Q.MorphBlendMesh.prototype.createAnimation=function(J,$,Z,K){var Y={start:$,end:Z,length:Z-$+1,fps:K,duration:(Z-$)/K,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[J]=Y,this.animationsList.push(Y)};Q.MorphBlendMesh.prototype.autoCreateAnimations=function(J){var $=/([a-z]+)_?(\d+)/i,Z,K={},Y=this.geometry;for(var X=0,G=Y.morphTargets.length;X<G;X++){var W=Y.morphTargets[X],U=W.name.match($);if(U&&U.length>1){var D=U[1];if(!K[D])K[D]={start:1/0,end:-1/0};var N=K[D];if(X<N.start)N.start=X;if(X>N.end)N.end=X;if(!Z)Z=D}}for(var D in K){var N=K[D];this.createAnimation(D,N.start,N.end,J)}this.firstAnimation=Z};Q.MorphBlendMesh.prototype.setAnimationDirectionForward=function(J){var $=this.animationsMap[J];if($)$.direction=1,$.directionBackwards=!1};Q.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(J){var $=this.animationsMap[J];if($)$.direction=-1,$.directionBackwards=!0};Q.MorphBlendMesh.prototype.setAnimationFPS=function(J,$){var Z=this.animationsMap[J];if(Z)Z.fps=$,Z.duration=(Z.end-Z.start)/Z.fps};Q.MorphBlendMesh.prototype.setAnimationDuration=function(J,$){var Z=this.animationsMap[J];if(Z)Z.duration=$,Z.fps=(Z.end-Z.start)/Z.duration};Q.MorphBlendMesh.prototype.setAnimationWeight=function(J,$){var Z=this.animationsMap[J];if(Z)Z.weight=$};Q.MorphBlendMesh.prototype.setAnimationTime=function(J,$){var Z=this.animationsMap[J];if(Z)Z.time=$};Q.MorphBlendMesh.prototype.getAnimationTime=function(J){var $=0,Z=this.animationsMap[J];if(Z)$=Z.time;return $};Q.MorphBlendMesh.prototype.getAnimationDuration=function(J){var $=-1,Z=this.animationsMap[J];if(Z)$=Z.duration;return $};Q.MorphBlendMesh.prototype.playAnimation=function(J){var $=this.animationsMap[J];if($)$.time=0,$.active=!0;else console.warn("THREE.MorphBlendMesh: animation["+J+"] undefined in .playAnimation()")};Q.MorphBlendMesh.prototype.stopAnimation=function(J){var $=this.animationsMap[J];if($)$.active=!1};Q.MorphBlendMesh.prototype.update=function(J){for(var $=0,Z=this.animationsList.length;$<Z;$++){var K=this.animationsList[$];if(!K.active)continue;var Y=K.duration/K.length;if(K.time+=K.direction*J,K.mirroredLoop){if(K.time>K.duration||K.time<0){if(K.direction*=-1,K.time>K.duration)K.time=K.duration,K.directionBackwards=!0;if(K.time<0)K.time=0,K.directionBackwards=!1}}else if(K.time=K.time%K.duration,K.time<0)K.time+=K.duration;var X=K.start+Q.Math.clamp(Math.floor(K.time/Y),0,K.length-1),G=K.weight;if(X!==K.currentFrame)this.morphTargetInfluences[K.lastFrame]=0,this.morphTargetInfluences[K.currentFrame]=1*G,this.morphTargetInfluences[X]=0,K.lastFrame=K.currentFrame,K.currentFrame=X;var W=K.time%Y/Y;if(K.directionBackwards)W=1-W;if(K.currentFrame!==K.lastFrame)this.morphTargetInfluences[K.currentFrame]=W*G,this.morphTargetInfluences[K.lastFrame]=(1-W)*G;else this.morphTargetInfluences[K.currentFrame]=G}};if(typeof vJ!=="undefined"){if(typeof xJ!=="undefined"&&xJ.exports)vJ=xJ.exports=Q;vJ.THREE=Q}else vJ.THREE=Q});var L0=F0((dJ,nJ)=>{var Z0=z0();console.warn("WARNING: The 'three.js' npm package is deprecated in favor of the 'three' npm package, please upgrade.");if(typeof dJ!=="undefined"){if(typeof nJ!=="undefined"&&nJ.exports)dJ=nJ.exports=Z0;dJ.THREE=Z0}else dJ.THREE=Z0});var sJ={};Q0(sJ,t0(L0(),1));
